
11_AUTO_CAR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800100  00001c7e  00001d12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000066f  00800198  00800198  00001daa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001daa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  00001e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000204f  00000000  00000000  000020a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012c3  00000000  00000000  000040f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001568  00000000  00000000  000053ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005fc  00000000  00000000  00006924  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008c3  00000000  00000000  00006f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fc5  00000000  00000000  000077e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  000087a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	93 c0       	rjmp	.+294    	; 0x12c <__bad_interrupt>
       6:	00 00       	nop
       8:	91 c0       	rjmp	.+290    	; 0x12c <__bad_interrupt>
       a:	00 00       	nop
       c:	8f c0       	rjmp	.+286    	; 0x12c <__bad_interrupt>
       e:	00 00       	nop
      10:	8d c0       	rjmp	.+282    	; 0x12c <__bad_interrupt>
      12:	00 00       	nop
      14:	9c c7       	rjmp	.+3896   	; 0xf4e <__vector_5>
      16:	00 00       	nop
      18:	e7 c7       	rjmp	.+4046   	; 0xfe8 <__vector_6>
      1a:	00 00       	nop
      1c:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__vector_7>
      20:	85 c0       	rjmp	.+266    	; 0x12c <__bad_interrupt>
      22:	00 00       	nop
      24:	83 c0       	rjmp	.+262    	; 0x12c <__bad_interrupt>
      26:	00 00       	nop
      28:	81 c0       	rjmp	.+258    	; 0x12c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7f c0       	rjmp	.+254    	; 0x12c <__bad_interrupt>
      2e:	00 00       	nop
      30:	7d c0       	rjmp	.+250    	; 0x12c <__bad_interrupt>
      32:	00 00       	nop
      34:	7b c0       	rjmp	.+246    	; 0x12c <__bad_interrupt>
      36:	00 00       	nop
      38:	79 c0       	rjmp	.+242    	; 0x12c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	77 c0       	rjmp	.+238    	; 0x12c <__bad_interrupt>
      3e:	00 00       	nop
      40:	0b c3       	rjmp	.+1558   	; 0x658 <__vector_16>
      42:	00 00       	nop
      44:	73 c0       	rjmp	.+230    	; 0x12c <__bad_interrupt>
      46:	00 00       	nop
      48:	ad c6       	rjmp	.+3418   	; 0xda4 <__vector_18>
      4a:	00 00       	nop
      4c:	6f c0       	rjmp	.+222    	; 0x12c <__bad_interrupt>
      4e:	00 00       	nop
      50:	6d c0       	rjmp	.+218    	; 0x12c <__bad_interrupt>
      52:	00 00       	nop
      54:	6b c0       	rjmp	.+214    	; 0x12c <__bad_interrupt>
      56:	00 00       	nop
      58:	69 c0       	rjmp	.+210    	; 0x12c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	67 c0       	rjmp	.+206    	; 0x12c <__bad_interrupt>
      5e:	00 00       	nop
      60:	65 c0       	rjmp	.+202    	; 0x12c <__bad_interrupt>
      62:	00 00       	nop
      64:	63 c0       	rjmp	.+198    	; 0x12c <__bad_interrupt>
      66:	00 00       	nop
      68:	61 c0       	rjmp	.+194    	; 0x12c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5f c0       	rjmp	.+190    	; 0x12c <__bad_interrupt>
      6e:	00 00       	nop
      70:	5d c0       	rjmp	.+186    	; 0x12c <__bad_interrupt>
      72:	00 00       	nop
      74:	5b c0       	rjmp	.+182    	; 0x12c <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c7       	rjmp	.+3662   	; 0xec8 <__vector_30>
      7a:	00 00       	nop
      7c:	57 c0       	rjmp	.+174    	; 0x12c <__bad_interrupt>
      7e:	00 00       	nop
      80:	55 c0       	rjmp	.+170    	; 0x12c <__bad_interrupt>
      82:	00 00       	nop
      84:	53 c0       	rjmp	.+166    	; 0x12c <__bad_interrupt>
      86:	00 00       	nop
      88:	51 c0       	rjmp	.+162    	; 0x12c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	18 03       	fmul	r17, r16
      8e:	25 03       	mulsu	r18, r21
      90:	25 03       	mulsu	r18, r21
      92:	25 03       	mulsu	r18, r21
      94:	14 03       	mulsu	r17, r20
      96:	25 03       	mulsu	r18, r21
      98:	25 03       	mulsu	r18, r21
      9a:	25 03       	mulsu	r18, r21
      9c:	25 03       	mulsu	r18, r21
      9e:	25 03       	mulsu	r18, r21
      a0:	1c 03       	fmul	r17, r20
      a2:	25 03       	mulsu	r18, r21
      a4:	25 03       	mulsu	r18, r21
      a6:	25 03       	mulsu	r18, r21
      a8:	25 03       	mulsu	r18, r21
      aa:	25 03       	mulsu	r18, r21
      ac:	20 03       	mulsu	r18, r16
      ae:	24 03       	mulsu	r18, r20
      b0:	25 03       	mulsu	r18, r21
      b2:	25 03       	mulsu	r18, r21
      b4:	25 03       	mulsu	r18, r21
      b6:	25 03       	mulsu	r18, r21
      b8:	25 03       	mulsu	r18, r21
      ba:	25 03       	mulsu	r18, r21
      bc:	25 03       	mulsu	r18, r21
      be:	25 03       	mulsu	r18, r21
      c0:	25 03       	mulsu	r18, r21
      c2:	25 03       	mulsu	r18, r21
      c4:	25 03       	mulsu	r18, r21
      c6:	25 03       	mulsu	r18, r21
      c8:	25 03       	mulsu	r18, r21
      ca:	25 03       	mulsu	r18, r21
      cc:	18 03       	fmul	r17, r16
      ce:	25 03       	mulsu	r18, r21
      d0:	25 03       	mulsu	r18, r21
      d2:	25 03       	mulsu	r18, r21
      d4:	14 03       	mulsu	r17, r20
      d6:	25 03       	mulsu	r18, r21
      d8:	25 03       	mulsu	r18, r21
      da:	25 03       	mulsu	r18, r21
      dc:	25 03       	mulsu	r18, r21
      de:	25 03       	mulsu	r18, r21
      e0:	1c 03       	fmul	r17, r20
      e2:	25 03       	mulsu	r18, r21
      e4:	25 03       	mulsu	r18, r21
      e6:	25 03       	mulsu	r18, r21
      e8:	25 03       	mulsu	r18, r21
      ea:	25 03       	mulsu	r18, r21
      ec:	20 03       	mulsu	r18, r16
      ee:	24 03       	mulsu	r18, r20

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d0 e1       	ldi	r29, 0x10	; 16
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61

000000fc <__do_copy_data>:
      fc:	11 e0       	ldi	r17, 0x01	; 1
      fe:	a0 e0       	ldi	r26, 0x00	; 0
     100:	b1 e0       	ldi	r27, 0x01	; 1
     102:	ee e7       	ldi	r30, 0x7E	; 126
     104:	fc e1       	ldi	r31, 0x1C	; 28
     106:	00 e0       	ldi	r16, 0x00	; 0
     108:	0b bf       	out	0x3b, r16	; 59
     10a:	02 c0       	rjmp	.+4      	; 0x110 <__do_copy_data+0x14>
     10c:	07 90       	elpm	r0, Z+
     10e:	0d 92       	st	X+, r0
     110:	a8 39       	cpi	r26, 0x98	; 152
     112:	b1 07       	cpc	r27, r17
     114:	d9 f7       	brne	.-10     	; 0x10c <__do_copy_data+0x10>

00000116 <__do_clear_bss>:
     116:	28 e0       	ldi	r18, 0x08	; 8
     118:	a8 e9       	ldi	r26, 0x98	; 152
     11a:	b1 e0       	ldi	r27, 0x01	; 1
     11c:	01 c0       	rjmp	.+2      	; 0x120 <.do_clear_bss_start>

0000011e <.do_clear_bss_loop>:
     11e:	1d 92       	st	X+, r1

00000120 <.do_clear_bss_start>:
     120:	a7 30       	cpi	r26, 0x07	; 7
     122:	b2 07       	cpc	r27, r18
     124:	e1 f7       	brne	.-8      	; 0x11e <.do_clear_bss_loop>
     126:	ee d2       	rcall	.+1500   	; 0x704 <main>
     128:	0c 94 3d 0e 	jmp	0x1c7a	; 0x1c7a <_exit>

0000012c <__bad_interrupt>:
     12c:	69 cf       	rjmp	.-302    	; 0x0 <__vectors>

0000012e <init_button>:
     12e:	8a b3       	in	r24, 0x1a	; 26
     130:	8f 7b       	andi	r24, 0xBF	; 191
     132:	8a bb       	out	0x1a, r24	; 26
     134:	08 95       	ret

00000136 <get_button>:
     136:	29 b3       	in	r18, 0x19	; 25
     138:	42 2f       	mov	r20, r18
     13a:	50 e0       	ldi	r21, 0x00	; 0
     13c:	21 e0       	ldi	r18, 0x01	; 1
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	02 c0       	rjmp	.+4      	; 0x146 <get_button+0x10>
     142:	22 0f       	add	r18, r18
     144:	33 1f       	adc	r19, r19
     146:	6a 95       	dec	r22
     148:	e2 f7       	brpl	.-8      	; 0x142 <get_button+0xc>
     14a:	24 23       	and	r18, r20
     14c:	35 23       	and	r19, r21
     14e:	21 15       	cp	r18, r1
     150:	31 05       	cpc	r19, r1
     152:	b9 f0       	breq	.+46     	; 0x182 <get_button+0x4c>
     154:	fc 01       	movw	r30, r24
     156:	e8 56       	subi	r30, 0x68	; 104
     158:	fe 4f       	sbci	r31, 0xFE	; 254
     15a:	40 81       	ld	r20, Z
     15c:	41 11       	cpse	r20, r1
     15e:	11 c0       	rjmp	.+34     	; 0x182 <get_button+0x4c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     160:	2f ef       	ldi	r18, 0xFF	; 255
     162:	3d ee       	ldi	r19, 0xED	; 237
     164:	42 e0       	ldi	r20, 0x02	; 2
     166:	21 50       	subi	r18, 0x01	; 1
     168:	30 40       	sbci	r19, 0x00	; 0
     16a:	40 40       	sbci	r20, 0x00	; 0
     16c:	e1 f7       	brne	.-8      	; 0x166 <get_button+0x30>
     16e:	00 c0       	rjmp	.+0      	; 0x170 <get_button+0x3a>
     170:	00 00       	nop
     172:	fc 01       	movw	r30, r24
     174:	e8 56       	subi	r30, 0x68	; 104
     176:	fe 4f       	sbci	r31, 0xFE	; 254
     178:	21 e0       	ldi	r18, 0x01	; 1
     17a:	20 83       	st	Z, r18
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	08 95       	ret
     182:	fc 01       	movw	r30, r24
     184:	e8 56       	subi	r30, 0x68	; 104
     186:	fe 4f       	sbci	r31, 0xFE	; 254
     188:	40 81       	ld	r20, Z
     18a:	41 30       	cpi	r20, 0x01	; 1
     18c:	91 f4       	brne	.+36     	; 0x1b2 <get_button+0x7c>
     18e:	23 2b       	or	r18, r19
     190:	99 f4       	brne	.+38     	; 0x1b8 <get_button+0x82>
     192:	fc 01       	movw	r30, r24
     194:	e8 56       	subi	r30, 0x68	; 104
     196:	fe 4f       	sbci	r31, 0xFE	; 254
     198:	10 82       	st	Z, r1
     19a:	8f ef       	ldi	r24, 0xFF	; 255
     19c:	9d ee       	ldi	r25, 0xED	; 237
     19e:	22 e0       	ldi	r18, 0x02	; 2
     1a0:	81 50       	subi	r24, 0x01	; 1
     1a2:	90 40       	sbci	r25, 0x00	; 0
     1a4:	20 40       	sbci	r18, 0x00	; 0
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <get_button+0x6a>
     1a8:	00 c0       	rjmp	.+0      	; 0x1aa <get_button+0x74>
     1aa:	00 00       	nop
     1ac:	81 e0       	ldi	r24, 0x01	; 1
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	08 95       	ret
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	08 95       	ret
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	08 95       	ret

000001be <auto_mode_check>:
     1be:	66 e0       	ldi	r22, 0x06	; 6
     1c0:	70 e0       	ldi	r23, 0x00	; 0
     1c2:	80 e0       	ldi	r24, 0x00	; 0
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	b7 df       	rcall	.-146    	; 0x136 <get_button>
     1c8:	89 2b       	or	r24, r25
     1ca:	71 f0       	breq	.+28     	; 0x1e8 <auto_mode_check+0x2a>
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <button0_state>
     1d4:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <button0_state+0x1>
     1d8:	23 2b       	or	r18, r19
     1da:	11 f0       	breq	.+4      	; 0x1e0 <auto_mode_check+0x22>
     1dc:	80 e0       	ldi	r24, 0x00	; 0
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <button0_state+0x1>
     1e4:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <button0_state>
     1e8:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <button0_state>
     1ec:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <button0_state+0x1>
     1f0:	89 2b       	or	r24, r25
     1f2:	61 f0       	breq	.+24     	; 0x20c <auto_mode_check+0x4e>
     1f4:	e5 e6       	ldi	r30, 0x65	; 101
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	80 81       	ld	r24, Z
     1fa:	88 60       	ori	r24, 0x08	; 8
     1fc:	80 83       	st	Z, r24
     1fe:	83 e0       	ldi	r24, 0x03	; 3
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <func_state+0x1>
     206:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <func_state>
     20a:	08 95       	ret
     20c:	e5 e6       	ldi	r30, 0x65	; 101
     20e:	f0 e0       	ldi	r31, 0x00	; 0
     210:	80 81       	ld	r24, Z
     212:	87 7f       	andi	r24, 0xF7	; 247
     214:	80 83       	st	Z, r24
     216:	ff c2       	rjmp	.+1534   	; 0x816 <stop>
     218:	08 95       	ret

0000021a <init_fnd>:
extern volatile uint32_t fnd_refreshrate; // fnd 잔상효과를 유지하기 위한 변수 2ms
extern volatile uint32_t msec_count;

void init_fnd(void)
{
	FND_DATA_DDR = 0xff;
     21a:	8f ef       	ldi	r24, 0xFF	; 255
     21c:	84 bb       	out	0x14, r24	; 20
	//FND_DIGIT_DDR |= 0xf0; //자리 수 선택 핀 4 5 6 7
	FND_DIGIT_DDR |= 1 << FND_DIGIT_D1 | 1 << FND_DIGIT_D2 |
     21e:	e1 e6       	ldi	r30, 0x61	; 97
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	80 6f       	ori	r24, 0xF0	; 240
     226:	80 83       	st	Z, r24
					 1 << FND_DIGIT_D3 | 1 << FND_DIGIT_D4;


	FND_DATA_PORT = 0x00; // FND를 all off
     228:	15 ba       	out	0x15, r1	; 21
     22a:	08 95       	ret

0000022c <fnd_display>:
}



void fnd_display(int *run_state)
{
     22c:	cf 93       	push	r28
     22e:	df 93       	push	r29
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62
     234:	2f 97       	sbiw	r28, 0x0f	; 15
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	f8 94       	cli
     23a:	de bf       	out	0x3e, r29	; 62
     23c:	0f be       	out	0x3f, r0	; 63
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	ac 01       	movw	r20, r24
						  // 0      1      2      3      4      5      6      7      8      9      .
	uint8_t fnd_font[] = {~0xc0, ~0xf9, ~0xa4, ~0xb0, ~0x99, ~0x92, ~0x82, ~0xd8, ~0x80, ~0x90, ~0x7f
     242:	9f e0       	ldi	r25, 0x0F	; 15
     244:	ee e1       	ldi	r30, 0x1E	; 30
     246:	f1 e0       	ldi	r31, 0x01	; 1
     248:	de 01       	movw	r26, r28
     24a:	11 96       	adiw	r26, 0x01	; 1
     24c:	01 90       	ld	r0, Z+
     24e:	0d 92       	st	X+, r0
     250:	9a 95       	dec	r25
     252:	e1 f7       	brne	.-8      	; 0x24c <fnd_display+0x20>
		, ~0x8e, ~0x83, ~0xc7, ~0xaf
		};

	static int digit_select = 0; // 자리수 선택 변수 0~3   static : 전역변수처럼 작동

	switch(digit_select)
     254:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <digit_select.1752>
     258:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <digit_select.1752+0x1>
     25c:	21 30       	cpi	r18, 0x01	; 1
     25e:	31 05       	cpc	r19, r1
     260:	39 f1       	breq	.+78     	; 0x2b0 <fnd_display+0x84>
     262:	1c f4       	brge	.+6      	; 0x26a <fnd_display+0x3e>
     264:	23 2b       	or	r18, r19
     266:	51 f0       	breq	.+20     	; 0x27c <fnd_display+0x50>
     268:	91 c0       	rjmp	.+290    	; 0x38c <fnd_display+0x160>
     26a:	22 30       	cpi	r18, 0x02	; 2
     26c:	31 05       	cpc	r19, r1
     26e:	09 f4       	brne	.+2      	; 0x272 <fnd_display+0x46>
     270:	41 c0       	rjmp	.+130    	; 0x2f4 <fnd_display+0xc8>
     272:	23 30       	cpi	r18, 0x03	; 3
     274:	31 05       	cpc	r19, r1
     276:	09 f4       	brne	.+2      	; 0x27a <fnd_display+0x4e>
     278:	7a c0       	rjmp	.+244    	; 0x36e <fnd_display+0x142>
     27a:	88 c0       	rjmp	.+272    	; 0x38c <fnd_display+0x160>
	{
		case 0 :
		FND_DIGIT_PORT = ~0x80;
     27c:	8f e7       	ldi	r24, 0x7F	; 127
     27e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		FND_DATA_PORT = fnd_font[sec_count % 10];   // 0~9초
     282:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <sec_count>
     286:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <sec_count+0x1>
     28a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sec_count+0x2>
     28e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sec_count+0x3>
     292:	2a e0       	ldi	r18, 0x0A	; 10
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	40 e0       	ldi	r20, 0x00	; 0
     298:	50 e0       	ldi	r21, 0x00	; 0
     29a:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     29e:	e1 e0       	ldi	r30, 0x01	; 1
     2a0:	f0 e0       	ldi	r31, 0x00	; 0
     2a2:	ec 0f       	add	r30, r28
     2a4:	fd 1f       	adc	r31, r29
     2a6:	e6 0f       	add	r30, r22
     2a8:	f7 1f       	adc	r31, r23
     2aa:	80 81       	ld	r24, Z
     2ac:	85 bb       	out	0x15, r24	; 21
		break;
     2ae:	6e c0       	rjmp	.+220    	; 0x38c <fnd_display+0x160>

		case 1 :
		FND_DIGIT_PORT = ~0x40;
     2b0:	8f eb       	ldi	r24, 0xBF	; 191
     2b2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		FND_DATA_PORT = fnd_font[sec_count / 10 % 6]; // 10단위 초
     2b6:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <sec_count>
     2ba:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <sec_count+0x1>
     2be:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sec_count+0x2>
     2c2:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sec_count+0x3>
     2c6:	2a e0       	ldi	r18, 0x0A	; 10
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	40 e0       	ldi	r20, 0x00	; 0
     2cc:	50 e0       	ldi	r21, 0x00	; 0
     2ce:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     2d2:	ca 01       	movw	r24, r20
     2d4:	b9 01       	movw	r22, r18
     2d6:	26 e0       	ldi	r18, 0x06	; 6
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	40 e0       	ldi	r20, 0x00	; 0
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     2e2:	e1 e0       	ldi	r30, 0x01	; 1
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	ec 0f       	add	r30, r28
     2e8:	fd 1f       	adc	r31, r29
     2ea:	e6 0f       	add	r30, r22
     2ec:	f7 1f       	adc	r31, r23
     2ee:	80 81       	ld	r24, Z
     2f0:	85 bb       	out	0x15, r24	; 21
		break;
     2f2:	4c c0       	rjmp	.+152    	; 0x38c <fnd_display+0x160>

		case 2 :
		FND_DIGIT_PORT = ~0x20;
     2f4:	8f ed       	ldi	r24, 0xDF	; 223
     2f6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		if (sec_count % 2 == 1)
     2fa:	60 91 a0 01 	lds	r22, 0x01A0	; 0x8001a0 <sec_count>
     2fe:	70 91 a1 01 	lds	r23, 0x01A1	; 0x8001a1 <sec_count+0x1>
     302:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sec_count+0x2>
     306:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sec_count+0x3>
     30a:	60 ff       	sbrs	r22, 0
     30c:	19 c0       	rjmp	.+50     	; 0x340 <fnd_display+0x114>
			FND_DATA_PORT = fnd_font[sec_count / 60 % 10] | fnd_font[10]; // 1단위 분
     30e:	2c e3       	ldi	r18, 0x3C	; 60
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	40 e0       	ldi	r20, 0x00	; 0
     314:	50 e0       	ldi	r21, 0x00	; 0
     316:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     31a:	ca 01       	movw	r24, r20
     31c:	b9 01       	movw	r22, r18
     31e:	2a e0       	ldi	r18, 0x0A	; 10
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e0       	ldi	r20, 0x00	; 0
     324:	50 e0       	ldi	r21, 0x00	; 0
     326:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     32a:	e1 e0       	ldi	r30, 0x01	; 1
     32c:	f0 e0       	ldi	r31, 0x00	; 0
     32e:	ec 0f       	add	r30, r28
     330:	fd 1f       	adc	r31, r29
     332:	e6 0f       	add	r30, r22
     334:	f7 1f       	adc	r31, r23
     336:	90 81       	ld	r25, Z
     338:	8b 85       	ldd	r24, Y+11	; 0x0b
     33a:	89 2b       	or	r24, r25
     33c:	85 bb       	out	0x15, r24	; 21
     33e:	26 c0       	rjmp	.+76     	; 0x38c <fnd_display+0x160>
		else
			FND_DATA_PORT = fnd_font[sec_count / 60 % 10]; // 1단위 분
     340:	2c e3       	ldi	r18, 0x3C	; 60
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 e0       	ldi	r20, 0x00	; 0
     346:	50 e0       	ldi	r21, 0x00	; 0
     348:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     34c:	ca 01       	movw	r24, r20
     34e:	b9 01       	movw	r22, r18
     350:	2a e0       	ldi	r18, 0x0A	; 10
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 e0       	ldi	r20, 0x00	; 0
     356:	50 e0       	ldi	r21, 0x00	; 0
     358:	0e 94 10 0b 	call	0x1620	; 0x1620 <__udivmodsi4>
     35c:	e1 e0       	ldi	r30, 0x01	; 1
     35e:	f0 e0       	ldi	r31, 0x00	; 0
     360:	ec 0f       	add	r30, r28
     362:	fd 1f       	adc	r31, r29
     364:	e6 0f       	add	r30, r22
     366:	f7 1f       	adc	r31, r23
     368:	80 81       	ld	r24, Z
     36a:	85 bb       	out	0x15, r24	; 21
     36c:	0f c0       	rjmp	.+30     	; 0x38c <fnd_display+0x160>
		break;

		case 3 :
		FND_DIGIT_PORT = ~0x10;
     36e:	8f ee       	ldi	r24, 0xEF	; 239
     370:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		
		FND_DATA_PORT = fnd_font[*run_state+11]; // 10단위 분
     374:	da 01       	movw	r26, r20
     376:	ed 91       	ld	r30, X+
     378:	fc 91       	ld	r31, X
     37a:	3b 96       	adiw	r30, 0x0b	; 11
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	8c 0f       	add	r24, r28
     382:	9d 1f       	adc	r25, r29
     384:	e8 0f       	add	r30, r24
     386:	f9 1f       	adc	r31, r25
     388:	80 81       	ld	r24, Z
     38a:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select++;
     38c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <digit_select.1752>
     390:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <digit_select.1752+0x1>
     394:	01 96       	adiw	r24, 0x01	; 1
	digit_select %= 4; //다음 표시할 자리수 선택
     396:	83 70       	andi	r24, 0x03	; 3
     398:	90 78       	andi	r25, 0x80	; 128
     39a:	99 23       	and	r25, r25
     39c:	24 f4       	brge	.+8      	; 0x3a6 <fnd_display+0x17a>
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	8c 6f       	ori	r24, 0xFC	; 252
     3a2:	9f 6f       	ori	r25, 0xFF	; 255
     3a4:	01 96       	adiw	r24, 0x01	; 1
     3a6:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <digit_select.1752+0x1>
     3aa:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <digit_select.1752>
}
     3ae:	2f 96       	adiw	r28, 0x0f	; 15
     3b0:	0f b6       	in	r0, 0x3f	; 63
     3b2:	f8 94       	cli
     3b4:	de bf       	out	0x3e, r29	; 62
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	cd bf       	out	0x3d, r28	; 61
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	08 95       	ret

000003c0 <I2C_init>:
     3c0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     3c4:	08 95       	ret

000003c6 <I2C_start>:
     3c6:	84 ea       	ldi	r24, 0xA4	; 164
     3c8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3cc:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3d0:	88 23       	and	r24, r24
     3d2:	e4 f7       	brge	.-8      	; 0x3cc <I2C_start+0x6>
     3d4:	08 95       	ret

000003d6 <I2C_transmit>:
     3d6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
     3da:	84 e8       	ldi	r24, 0x84	; 132
     3dc:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3e0:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3e4:	88 23       	and	r24, r24
     3e6:	e4 f7       	brge	.-8      	; 0x3e0 <I2C_transmit+0xa>
     3e8:	08 95       	ret

000003ea <I2C_stop>:
     3ea:	84 e9       	ldi	r24, 0x94	; 148
     3ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
     3f0:	08 95       	ret

000003f2 <I2C_write_byte>:
     3f2:	cf 93       	push	r28
     3f4:	df 93       	push	r29
     3f6:	d8 2f       	mov	r29, r24
     3f8:	c6 2f       	mov	r28, r22
     3fa:	e5 df       	rcall	.-54     	; 0x3c6 <I2C_start>
     3fc:	8d 2f       	mov	r24, r29
     3fe:	eb df       	rcall	.-42     	; 0x3d6 <I2C_transmit>
     400:	8c 2f       	mov	r24, r28
     402:	e9 df       	rcall	.-46     	; 0x3d6 <I2C_transmit>
     404:	f2 df       	rcall	.-28     	; 0x3ea <I2C_stop>
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <I2C_LCD_write_data>:
     40c:	1f 93       	push	r17
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	00 d0       	rcall	.+0      	; 0x414 <I2C_LCD_write_data+0x8>
     414:	00 d0       	rcall	.+0      	; 0x416 <I2C_LCD_write_data+0xa>
     416:	cd b7       	in	r28, 0x3d	; 61
     418:	de b7       	in	r29, 0x3e	; 62
     41a:	28 2f       	mov	r18, r24
     41c:	20 7f       	andi	r18, 0xF0	; 240
     41e:	30 e1       	ldi	r19, 0x10	; 16
     420:	83 9f       	mul	r24, r19
     422:	c0 01       	movw	r24, r0
     424:	11 24       	eor	r1, r1
     426:	92 2f       	mov	r25, r18
     428:	9d 60       	ori	r25, 0x0D	; 13
     42a:	99 83       	std	Y+1, r25	; 0x01
     42c:	29 60       	ori	r18, 0x09	; 9
     42e:	2a 83       	std	Y+2, r18	; 0x02
     430:	98 2f       	mov	r25, r24
     432:	9d 60       	ori	r25, 0x0D	; 13
     434:	9b 83       	std	Y+3, r25	; 0x03
     436:	89 60       	ori	r24, 0x09	; 9
     438:	8c 83       	std	Y+4, r24	; 0x04
     43a:	10 e0       	ldi	r17, 0x00	; 0
     43c:	0a c0       	rjmp	.+20     	; 0x452 <I2C_LCD_write_data+0x46>
     43e:	e1 e0       	ldi	r30, 0x01	; 1
     440:	f0 e0       	ldi	r31, 0x00	; 0
     442:	ec 0f       	add	r30, r28
     444:	fd 1f       	adc	r31, r29
     446:	e1 0f       	add	r30, r17
     448:	f1 1d       	adc	r31, r1
     44a:	60 81       	ld	r22, Z
     44c:	8e e4       	ldi	r24, 0x4E	; 78
     44e:	d1 df       	rcall	.-94     	; 0x3f2 <I2C_write_byte>
     450:	1f 5f       	subi	r17, 0xFF	; 255
     452:	14 30       	cpi	r17, 0x04	; 4
     454:	a0 f3       	brcs	.-24     	; 0x43e <I2C_LCD_write_data+0x32>
     456:	0f 90       	pop	r0
     458:	0f 90       	pop	r0
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
     45e:	df 91       	pop	r29
     460:	cf 91       	pop	r28
     462:	1f 91       	pop	r17
     464:	08 95       	ret

00000466 <I2C_LCD_write_command>:
     466:	1f 93       	push	r17
     468:	cf 93       	push	r28
     46a:	df 93       	push	r29
     46c:	00 d0       	rcall	.+0      	; 0x46e <I2C_LCD_write_command+0x8>
     46e:	00 d0       	rcall	.+0      	; 0x470 <I2C_LCD_write_command+0xa>
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
     474:	28 2f       	mov	r18, r24
     476:	20 7f       	andi	r18, 0xF0	; 240
     478:	30 e1       	ldi	r19, 0x10	; 16
     47a:	83 9f       	mul	r24, r19
     47c:	c0 01       	movw	r24, r0
     47e:	11 24       	eor	r1, r1
     480:	92 2f       	mov	r25, r18
     482:	9c 60       	ori	r25, 0x0C	; 12
     484:	99 83       	std	Y+1, r25	; 0x01
     486:	28 60       	ori	r18, 0x08	; 8
     488:	2a 83       	std	Y+2, r18	; 0x02
     48a:	98 2f       	mov	r25, r24
     48c:	9c 60       	ori	r25, 0x0C	; 12
     48e:	9b 83       	std	Y+3, r25	; 0x03
     490:	88 60       	ori	r24, 0x08	; 8
     492:	8c 83       	std	Y+4, r24	; 0x04
     494:	10 e0       	ldi	r17, 0x00	; 0
     496:	0a c0       	rjmp	.+20     	; 0x4ac <I2C_LCD_write_command+0x46>
     498:	e1 e0       	ldi	r30, 0x01	; 1
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	ec 0f       	add	r30, r28
     49e:	fd 1f       	adc	r31, r29
     4a0:	e1 0f       	add	r30, r17
     4a2:	f1 1d       	adc	r31, r1
     4a4:	60 81       	ld	r22, Z
     4a6:	8e e4       	ldi	r24, 0x4E	; 78
     4a8:	a4 df       	rcall	.-184    	; 0x3f2 <I2C_write_byte>
     4aa:	1f 5f       	subi	r17, 0xFF	; 255
     4ac:	14 30       	cpi	r17, 0x04	; 4
     4ae:	a0 f3       	brcs	.-24     	; 0x498 <I2C_LCD_write_command+0x32>
     4b0:	0f 90       	pop	r0
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	1f 91       	pop	r17
     4be:	08 95       	ret

000004c0 <I2C_LCD_init>:
}

// LCD를 초기화
void I2C_LCD_init(void)
{
	I2C_init(10000);
     4c0:	80 e1       	ldi	r24, 0x10	; 16
     4c2:	97 e2       	ldi	r25, 0x27	; 39
     4c4:	7d df       	rcall	.-262    	; 0x3c0 <I2C_init>
     4c6:	2f ef       	ldi	r18, 0xFF	; 255
     4c8:	80 e7       	ldi	r24, 0x70	; 112
     4ca:	92 e0       	ldi	r25, 0x02	; 2
     4cc:	21 50       	subi	r18, 0x01	; 1
     4ce:	80 40       	sbci	r24, 0x00	; 0
     4d0:	90 40       	sbci	r25, 0x00	; 0
     4d2:	e1 f7       	brne	.-8      	; 0x4cc <I2C_LCD_init+0xc>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <I2C_LCD_init+0x16>
     4d6:	00 00       	nop
	_delay_ms(50);
	//Initialization of HD44780-based LCD (4-bit HW)
	I2C_LCD_write_command(0x33);
     4d8:	83 e3       	ldi	r24, 0x33	; 51
     4da:	c5 df       	rcall	.-118    	; 0x466 <I2C_LCD_write_command>
	I2C_LCD_write_command(0x32);
     4dc:	82 e3       	ldi	r24, 0x32	; 50
     4de:	c3 df       	rcall	.-122    	; 0x466 <I2C_LCD_write_command>
	I2C_LCD_write_command(0x28);   //Function Set 4-bit mode
     4e0:	88 e2       	ldi	r24, 0x28	; 40
     4e2:	c1 df       	rcall	.-126    	; 0x466 <I2C_LCD_write_command>
	I2C_LCD_write_command(0x0c);   //Display On/Off Control
     4e4:	8c e0       	ldi	r24, 0x0C	; 12
     4e6:	bf df       	rcall	.-130    	; 0x466 <I2C_LCD_write_command>
	I2C_LCD_write_command(0x06);   //Entry mode set
     4e8:	86 e0       	ldi	r24, 0x06	; 6
     4ea:	bd df       	rcall	.-134    	; 0x466 <I2C_LCD_write_command>
     4ec:	81 e0       	ldi	r24, 0x01	; 1
	I2C_LCD_write_command(0x01);   //Clear Display
     4ee:	bb df       	rcall	.-138    	; 0x466 <I2C_LCD_write_command>
     4f0:	8f e3       	ldi	r24, 0x3F	; 63
     4f2:	9c e9       	ldi	r25, 0x9C	; 156
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <I2C_LCD_init+0x34>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <I2C_LCD_init+0x3a>
     4fa:	00 00       	nop
     4fc:	08 95       	ret

000004fe <I2C_LCD_write_string>:
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
	//Minimum delay to wait before driving LCD module
	_delay_ms(10);
}
// 현재의 xy좌표에 printf처럼 스트링 값을 출력 
void I2C_LCD_write_string(char *string)
{
     502:	cf 93       	push	r28
     504:	8c 01       	movw	r16, r24
	uint8_t i;
	for(i=0; string[i]; i++) //"hello !!\0" 마지막 널문자에서 조건 거짓이 되어 빠져나온다.
     506:	c0 e0       	ldi	r28, 0x00	; 0
     508:	02 c0       	rjmp	.+4      	; 0x50e <I2C_LCD_write_string+0x10>
	I2C_LCD_write_data(string[i]);
     50a:	80 df       	rcall	.-256    	; 0x40c <I2C_LCD_write_data>
}
// 현재의 xy좌표에 printf처럼 스트링 값을 출력 
void I2C_LCD_write_string(char *string)
{
	uint8_t i;
	for(i=0; string[i]; i++) //"hello !!\0" 마지막 널문자에서 조건 거짓이 되어 빠져나온다.
     50c:	cf 5f       	subi	r28, 0xFF	; 255
     50e:	f8 01       	movw	r30, r16
     510:	ec 0f       	add	r30, r28
     512:	f1 1d       	adc	r31, r1
     514:	80 81       	ld	r24, Z
     516:	81 11       	cpse	r24, r1
     518:	f8 cf       	rjmp	.-16     	; 0x50a <I2C_LCD_write_string+0xc>
	I2C_LCD_write_data(string[i]);
}
     51a:	cf 91       	pop	r28
     51c:	1f 91       	pop	r17
     51e:	0f 91       	pop	r16
     520:	08 95       	ret

00000522 <I2C_LCD_goto_XY>:

// 커서를 x,y좌표로 이동
void I2C_LCD_goto_XY(uint8_t row, uint8_t col)
{
	col %= 16;
     522:	6f 70       	andi	r22, 0x0F	; 15
	row %= 2;
     524:	81 70       	andi	r24, 0x01	; 1
	
	uint8_t address = (0x40 * row) + col;
     526:	90 e4       	ldi	r25, 0x40	; 64
     528:	89 9f       	mul	r24, r25
     52a:	60 0d       	add	r22, r0
     52c:	11 24       	eor	r1, r1
     52e:	86 2f       	mov	r24, r22
	uint8_t command = 0x80 + address;
	
	I2C_LCD_write_command(command);
     530:	80 58       	subi	r24, 0x80	; 128
     532:	99 cf       	rjmp	.-206    	; 0x466 <I2C_LCD_write_command>
     534:	08 95       	ret

00000536 <I2C_LCD_write_string_XY>:
}

// x,y좌표로 이동을 하고 string값을 출력 한다. 
void I2C_LCD_write_string_XY(uint8_t row, uint8_t col, char *string)
{
     536:	cf 93       	push	r28
     538:	df 93       	push	r29
     53a:	ea 01       	movw	r28, r20
	I2C_LCD_goto_XY(row, col);
     53c:	f2 df       	rcall	.-28     	; 0x522 <I2C_LCD_goto_XY>
	I2C_LCD_write_string(string);
     53e:	ce 01       	movw	r24, r28
     540:	de df       	rcall	.-68     	; 0x4fe <I2C_LCD_write_string>
     542:	df 91       	pop	r29
     544:	cf 91       	pop	r28
     546:	08 95       	ret

00000548 <I2C_LCD_Test>:

extern volatile uint32_t lcd_refreshrate;


void I2C_LCD_Test(int *speed, int *current_mode)
{
     548:	0f 93       	push	r16
     54a:	1f 93       	push	r17
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
     554:	64 97       	sbiw	r28, 0x14	; 20
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	f8 94       	cli
     55a:	de bf       	out	0x3e, r29	; 62
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	cd bf       	out	0x3d, r28	; 61
     560:	8b 01       	movw	r16, r22
	char sbuf[20];

	sprintf(sbuf,"%3d",*speed);
     562:	fc 01       	movw	r30, r24
     564:	21 81       	ldd	r18, Z+1	; 0x01
     566:	2f 93       	push	r18
     568:	80 81       	ld	r24, Z
     56a:	8f 93       	push	r24
     56c:	8d e2       	ldi	r24, 0x2D	; 45
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	9f 93       	push	r25
     572:	8f 93       	push	r24
     574:	ce 01       	movw	r24, r28
     576:	01 96       	adiw	r24, 0x01	; 1
     578:	9f 93       	push	r25
     57a:	8f 93       	push	r24
     57c:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <sprintf>
	
	if (*current_mode == FORWARD)
     580:	f8 01       	movw	r30, r16
     582:	80 81       	ld	r24, Z
     584:	91 81       	ldd	r25, Z+1	; 0x01
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	0f 90       	pop	r0
     58c:	0f 90       	pop	r0
     58e:	0f 90       	pop	r0
     590:	0f 90       	pop	r0
     592:	00 97       	sbiw	r24, 0x00	; 0
     594:	31 f4       	brne	.+12     	; 0x5a2 <I2C_LCD_Test+0x5a>
	{
		I2C_LCD_write_string_XY(0,4,"FORWARD   ");
     596:	41 e3       	ldi	r20, 0x31	; 49
     598:	51 e0       	ldi	r21, 0x01	; 1
     59a:	64 e0       	ldi	r22, 0x04	; 4
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	cb df       	rcall	.-106    	; 0x536 <I2C_LCD_write_string_XY>
     5a0:	19 c0       	rjmp	.+50     	; 0x5d4 <I2C_LCD_Test+0x8c>
		
	}
	else if (*current_mode == BACKWARD)
     5a2:	81 30       	cpi	r24, 0x01	; 1
     5a4:	91 05       	cpc	r25, r1
     5a6:	31 f4       	brne	.+12     	; 0x5b4 <I2C_LCD_Test+0x6c>
	{
		I2C_LCD_write_string_XY(0,4,"BACKWARD  ");
     5a8:	4c e3       	ldi	r20, 0x3C	; 60
     5aa:	51 e0       	ldi	r21, 0x01	; 1
     5ac:	64 e0       	ldi	r22, 0x04	; 4
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	c2 df       	rcall	.-124    	; 0x536 <I2C_LCD_write_string_XY>
     5b2:	10 c0       	rjmp	.+32     	; 0x5d4 <I2C_LCD_Test+0x8c>
	}
	else if (*current_mode == TURN_LEFT)
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	91 05       	cpc	r25, r1
     5b8:	31 f4       	brne	.+12     	; 0x5c6 <I2C_LCD_Test+0x7e>
	{
		I2C_LCD_write_string_XY(0,4,"TURN LEFT ");
     5ba:	47 e4       	ldi	r20, 0x47	; 71
     5bc:	51 e0       	ldi	r21, 0x01	; 1
     5be:	64 e0       	ldi	r22, 0x04	; 4
     5c0:	80 e0       	ldi	r24, 0x00	; 0
     5c2:	b9 df       	rcall	.-142    	; 0x536 <I2C_LCD_write_string_XY>
     5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <I2C_LCD_Test+0x8c>
	}
	else if (*current_mode == TURN_RIGHT)
     5c6:	03 97       	sbiw	r24, 0x03	; 3
     5c8:	29 f4       	brne	.+10     	; 0x5d4 <I2C_LCD_Test+0x8c>
	{
		I2C_LCD_write_string_XY(0,4,"TURN RIGHT");
     5ca:	42 e5       	ldi	r20, 0x52	; 82
     5cc:	51 e0       	ldi	r21, 0x01	; 1
     5ce:	64 e0       	ldi	r22, 0x04	; 4
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	b1 df       	rcall	.-158    	; 0x536 <I2C_LCD_write_string_XY>
	}
	I2C_LCD_write_string_XY(1,0,"Current Speed");
     5d4:	4d e5       	ldi	r20, 0x5D	; 93
     5d6:	51 e0       	ldi	r21, 0x01	; 1
     5d8:	60 e0       	ldi	r22, 0x00	; 0
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	ac df       	rcall	.-168    	; 0x536 <I2C_LCD_write_string_XY>
	I2C_LCD_write_string_XY(1,13,sbuf);
     5de:	ae 01       	movw	r20, r28
     5e0:	4f 5f       	subi	r20, 0xFF	; 255
     5e2:	5f 4f       	sbci	r21, 0xFF	; 255
     5e4:	6d e0       	ldi	r22, 0x0D	; 13
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	a6 df       	rcall	.-180    	; 0x536 <I2C_LCD_write_string_XY>
	

}
     5ea:	64 96       	adiw	r28, 0x14	; 20
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	f8 94       	cli
     5f0:	de bf       	out	0x3e, r29	; 62
     5f2:	0f be       	out	0x3f, r0	; 63
     5f4:	cd bf       	out	0x3d, r28	; 61
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	1f 91       	pop	r17
     5fc:	0f 91       	pop	r16
     5fe:	08 95       	ret

00000600 <init_led>:
     600:	e4 e6       	ldi	r30, 0x64	; 100
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	80 81       	ld	r24, Z
     606:	88 60       	ori	r24, 0x08	; 8
     608:	80 83       	st	Z, r24
     60a:	08 95       	ret

0000060c <manual_mode>:
     60c:	e0 91 00 08 	lds	r30, 0x0800	; 0x800800 <bt_data>
     610:	8e 2f       	mov	r24, r30
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	fc 01       	movw	r30, r24
     616:	e2 54       	subi	r30, 0x42	; 66
     618:	f1 09       	sbc	r31, r1
     61a:	e2 33       	cpi	r30, 0x32	; 50
     61c:	f1 05       	cpc	r31, r1
     61e:	a8 f4       	brcc	.+42     	; 0x64a <manual_mode+0x3e>
     620:	ea 5b       	subi	r30, 0xBA	; 186
     622:	ff 4f       	sbci	r31, 0xFF	; 255
     624:	0c 94 32 0b 	jmp	0x1664	; 0x1664 <__tablejump2__>
     628:	84 ef       	ldi	r24, 0xF4	; 244
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	89 d0       	rcall	.+274    	; 0x740 <forward>
     62e:	0d c0       	rjmp	.+26     	; 0x64a <manual_mode+0x3e>
     630:	84 ef       	ldi	r24, 0xF4	; 244
     632:	91 e0       	ldi	r25, 0x01	; 1
     634:	98 d0       	rcall	.+304    	; 0x766 <backward>
     636:	09 c0       	rjmp	.+18     	; 0x64a <manual_mode+0x3e>
     638:	8c eb       	ldi	r24, 0xBC	; 188
     63a:	92 e0       	ldi	r25, 0x02	; 2
     63c:	a7 d0       	rcall	.+334    	; 0x78c <turn_left>
     63e:	05 c0       	rjmp	.+10     	; 0x64a <manual_mode+0x3e>
     640:	8c eb       	ldi	r24, 0xBC	; 188
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	b3 d0       	rcall	.+358    	; 0x7ac <turn_right>
     646:	01 c0       	rjmp	.+2      	; 0x64a <manual_mode+0x3e>
     648:	e6 d0       	rcall	.+460    	; 0x816 <stop>
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <func_state+0x1>
     652:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <func_state>
     656:	08 95       	ret

00000658 <__vector_16>:
     658:	1f 92       	push	r1
     65a:	0f 92       	push	r0
     65c:	0f b6       	in	r0, 0x3f	; 63
     65e:	0f 92       	push	r0
     660:	11 24       	eor	r1, r1
     662:	8f 93       	push	r24
     664:	9f 93       	push	r25
     666:	af 93       	push	r26
     668:	bf 93       	push	r27
     66a:	86 e0       	ldi	r24, 0x06	; 6
     66c:	82 bf       	out	0x32, r24	; 50
     66e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <msec_count>
     672:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <msec_count+0x1>
     676:	a0 91 b0 01 	lds	r26, 0x01B0	; 0x8001b0 <msec_count+0x2>
     67a:	b0 91 b1 01 	lds	r27, 0x01B1	; 0x8001b1 <msec_count+0x3>
     67e:	01 96       	adiw	r24, 0x01	; 1
     680:	a1 1d       	adc	r26, r1
     682:	b1 1d       	adc	r27, r1
     684:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <msec_count>
     688:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <msec_count+0x1>
     68c:	a0 93 b0 01 	sts	0x01B0, r26	; 0x8001b0 <msec_count+0x2>
     690:	b0 93 b1 01 	sts	0x01B1, r27	; 0x8001b1 <msec_count+0x3>
     694:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <fnd_refreshrate>
     698:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <fnd_refreshrate+0x1>
     69c:	a0 91 ac 01 	lds	r26, 0x01AC	; 0x8001ac <fnd_refreshrate+0x2>
     6a0:	b0 91 ad 01 	lds	r27, 0x01AD	; 0x8001ad <fnd_refreshrate+0x3>
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	a1 1d       	adc	r26, r1
     6a8:	b1 1d       	adc	r27, r1
     6aa:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <fnd_refreshrate>
     6ae:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <fnd_refreshrate+0x1>
     6b2:	a0 93 ac 01 	sts	0x01AC, r26	; 0x8001ac <fnd_refreshrate+0x2>
     6b6:	b0 93 ad 01 	sts	0x01AD, r27	; 0x8001ad <fnd_refreshrate+0x3>
     6ba:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
     6be:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
     6c2:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
     6c6:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
     6ca:	01 96       	adiw	r24, 0x01	; 1
     6cc:	a1 1d       	adc	r26, r1
     6ce:	b1 1d       	adc	r27, r1
     6d0:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <ultrasonic_check_timer>
     6d4:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <ultrasonic_check_timer+0x1>
     6d8:	a0 93 a8 01 	sts	0x01A8, r26	; 0x8001a8 <ultrasonic_check_timer+0x2>
     6dc:	b0 93 a9 01 	sts	0x01A9, r27	; 0x8001a9 <ultrasonic_check_timer+0x3>
     6e0:	bf 91       	pop	r27
     6e2:	af 91       	pop	r26
     6e4:	9f 91       	pop	r25
     6e6:	8f 91       	pop	r24
     6e8:	0f 90       	pop	r0
     6ea:	0f be       	out	0x3f, r0	; 63
     6ec:	0f 90       	pop	r0
     6ee:	1f 90       	pop	r1
     6f0:	18 95       	reti

000006f2 <init_timer0>:
     6f2:	86 e0       	ldi	r24, 0x06	; 6
     6f4:	82 bf       	out	0x32, r24	; 50
     6f6:	83 b7       	in	r24, 0x33	; 51
     6f8:	84 60       	ori	r24, 0x04	; 4
     6fa:	83 bf       	out	0x33, r24	; 51
     6fc:	87 b7       	in	r24, 0x37	; 55
     6fe:	81 60       	ori	r24, 0x01	; 1
     700:	87 bf       	out	0x37, r24	; 55
     702:	08 95       	ret

00000704 <main>:
     704:	dd de       	rcall	.-582    	; 0x4c0 <I2C_LCD_init>
     706:	7c df       	rcall	.-264    	; 0x600 <init_led>
     708:	88 dd       	rcall	.-1264   	; 0x21a <init_fnd>
     70a:	11 dd       	rcall	.-1502   	; 0x12e <init_button>
     70c:	f2 df       	rcall	.-28     	; 0x6f2 <init_timer0>
     70e:	c8 d3       	rcall	.+1936   	; 0xea0 <init_uart0>
     710:	09 d4       	rcall	.+2066   	; 0xf24 <init_uart1>
     712:	5c d0       	rcall	.+184    	; 0x7cc <init_n289n>
     714:	6c d0       	rcall	.+216    	; 0x7ee <init_timer1_pwm>
     716:	02 d5       	rcall	.+2564   	; 0x111c <init_ultrasonic>
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	91 e0       	ldi	r25, 0x01	; 1
     71c:	90 93 04 08 	sts	0x0804, r25	; 0x800804 <__iob+0x3>
     720:	80 93 03 08 	sts	0x0803, r24	; 0x800803 <__iob+0x2>
     724:	78 94       	sei
     726:	e0 91 a4 01 	lds	r30, 0x01A4	; 0x8001a4 <func_state>
     72a:	f0 91 a5 01 	lds	r31, 0x01A5	; 0x8001a5 <func_state+0x1>
     72e:	ee 0f       	add	r30, r30
     730:	ff 1f       	adc	r31, r31
     732:	e2 5f       	subi	r30, 0xF2	; 242
     734:	fe 4f       	sbci	r31, 0xFE	; 254
     736:	01 90       	ld	r0, Z+
     738:	f0 81       	ld	r31, Z
     73a:	e0 2d       	mov	r30, r0
     73c:	09 95       	icall
     73e:	f3 cf       	rjmp	.-26     	; 0x726 <main+0x22>

00000740 <forward>:
	ICR1 = 0x3ff;  // 1023 ==> 4ms TOP : PWM 값
}

///////////////////////////////           수동모드          //////////////////////////////////////
void forward(int *speed)
{
     740:	dc 01       	movw	r26, r24
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     742:	e2 e6       	ldi	r30, 0x62	; 98
     744:	f0 e0       	ldi	r31, 0x00	; 0
     746:	90 81       	ld	r25, Z
     748:	90 7f       	andi	r25, 0xF0	; 240
     74a:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 2 | 1 << 0;  // 전진 모드로 설정
     74c:	90 81       	ld	r25, Z
     74e:	95 60       	ori	r25, 0x05	; 5
     750:	90 83       	st	Z, r25
	
	OCR1A = *speed;  // PB5 PWM 출력 port left
     752:	8d 91       	ld	r24, X+
     754:	9c 91       	ld	r25, X
     756:	11 97       	sbiw	r26, 0x01	; 1
     758:	9b bd       	out	0x2b, r25	; 43
     75a:	8a bd       	out	0x2a, r24	; 42
	OCR1B = *speed;  // PB6 PWM 출력 port right
     75c:	8d 91       	ld	r24, X+
     75e:	9c 91       	ld	r25, X
     760:	99 bd       	out	0x29, r25	; 41
     762:	88 bd       	out	0x28, r24	; 40
     764:	08 95       	ret

00000766 <backward>:
}

void backward(int *speed)
{
     766:	dc 01       	movw	r26, r24
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     768:	e2 e6       	ldi	r30, 0x62	; 98
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	90 81       	ld	r25, Z
     76e:	90 7f       	andi	r25, 0xF0	; 240
     770:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 3 | 1 << 1;  // 1010 후진 모드
     772:	90 81       	ld	r25, Z
     774:	9a 60       	ori	r25, 0x0A	; 10
     776:	90 83       	st	Z, r25
	
	OCR1A = *speed;  // PB5 PWM 출력 port left
     778:	8d 91       	ld	r24, X+
     77a:	9c 91       	ld	r25, X
     77c:	11 97       	sbiw	r26, 0x01	; 1
     77e:	9b bd       	out	0x2b, r25	; 43
     780:	8a bd       	out	0x2a, r24	; 42
	OCR1B = *speed;  // PB6 PWM 출력 port right
     782:	8d 91       	ld	r24, X+
     784:	9c 91       	ld	r25, X
     786:	99 bd       	out	0x29, r25	; 41
     788:	88 bd       	out	0x28, r24	; 40
     78a:	08 95       	ret

0000078c <turn_left>:
}

void turn_left(int *speed)
{
     78c:	dc 01       	movw	r26, r24
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     78e:	e2 e6       	ldi	r30, 0x62	; 98
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	90 81       	ld	r25, Z
     794:	90 7f       	andi	r25, 0xF0	; 240
     796:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 2 | 1 << 0;  // 전진 모드로 설정
     798:	90 81       	ld	r25, Z
     79a:	95 60       	ori	r25, 0x05	; 5
     79c:	90 83       	st	Z, r25
	
	OCR1A = 0;  // PB5 PWM 출력 port left
     79e:	1b bc       	out	0x2b, r1	; 43
     7a0:	1a bc       	out	0x2a, r1	; 42
	OCR1B = *speed;  // PB6 PWM 출력 port right
     7a2:	8d 91       	ld	r24, X+
     7a4:	9c 91       	ld	r25, X
     7a6:	99 bd       	out	0x29, r25	; 41
     7a8:	88 bd       	out	0x28, r24	; 40
     7aa:	08 95       	ret

000007ac <turn_right>:
}

void turn_right(int *speed)
{
     7ac:	dc 01       	movw	r26, r24
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     7ae:	e2 e6       	ldi	r30, 0x62	; 98
     7b0:	f0 e0       	ldi	r31, 0x00	; 0
     7b2:	90 81       	ld	r25, Z
     7b4:	90 7f       	andi	r25, 0xF0	; 240
     7b6:	90 83       	st	Z, r25
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 2 | 1 << 0;  // 전진 모드로 설정
     7b8:	90 81       	ld	r25, Z
     7ba:	95 60       	ori	r25, 0x05	; 5
     7bc:	90 83       	st	Z, r25
	
	OCR1A = *speed;  // PB5 PWM 출력 port left
     7be:	8d 91       	ld	r24, X+
     7c0:	9c 91       	ld	r25, X
     7c2:	9b bd       	out	0x2b, r25	; 43
     7c4:	8a bd       	out	0x2a, r24	; 42
	OCR1B = 0;  // PB6 PWM 출력 port right
     7c6:	19 bc       	out	0x29, r1	; 41
     7c8:	18 bc       	out	0x28, r1	; 40
     7ca:	08 95       	ret

000007cc <init_n289n>:
	   1         1   : STOP
*/

void init_n289n(void)
{
	MOTOR_PWM_DDR |= 1 << MOTOR_LEFT_PORT_DDR | 1 << MOTOR_RIGHT_PORT_DDR; // DDR설정
     7cc:	87 b3       	in	r24, 0x17	; 23
     7ce:	80 66       	ori	r24, 0x60	; 96
     7d0:	87 bb       	out	0x17, r24	; 23
	MOTOR_DRIVER_DIRECTION_PORT_DDR |= 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3; // PF1234 출력으로 설정
     7d2:	e1 e6       	ldi	r30, 0x61	; 97
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	80 81       	ld	r24, Z
     7d8:	8f 60       	ori	r24, 0x0F	; 15
     7da:	80 83       	st	Z, r24
	
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     7dc:	e2 e6       	ldi	r30, 0x62	; 98
     7de:	f0 e0       	ldi	r31, 0x00	; 0
     7e0:	80 81       	ld	r24, Z
     7e2:	80 7f       	andi	r24, 0xF0	; 240
     7e4:	80 83       	st	Z, r24
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 2; // 자동차를 전진모드로 
     7e6:	80 81       	ld	r24, Z
     7e8:	85 60       	ori	r24, 0x05	; 5
     7ea:	80 83       	st	Z, r24
     7ec:	08 95       	ret

000007ee <init_timer1_pwm>:
	// 분주비 : 64 16000000HZ/64 ==> 250000HZ(250kHZ)
	// T=1/f 1/250000HZ ==> 0.000004sec (4us)
	// 250000HZ에서 256개의 펄스를 count하면 소요시간 : 1.02ms
	//              127                             : 0.5ms
	//              0x3ff(1023) --> 4ms
	TCCR1B |= 1 << CS11 | 1 << CS10;   // 분주비 64  P318 표14-1
     7ee:	8e b5       	in	r24, 0x2e	; 46
     7f0:	83 60       	ori	r24, 0x03	; 3
     7f2:	8e bd       	out	0x2e, r24	; 46
	
	// 모드 14: 고속 PWM timer1사용  (P327 표14-5)
	TCCR1A |= 1 << WGM11;   // TOP --> ICR1에 설정
     7f4:	8f b5       	in	r24, 0x2f	; 47
     7f6:	82 60       	ori	r24, 0x02	; 2
     7f8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 1 << WGM13 | 1 << WGM12;
     7fa:	8e b5       	in	r24, 0x2e	; 46
     7fc:	88 61       	ori	r24, 0x18	; 24
     7fe:	8e bd       	out	0x2e, r24	; 46
	
	// 비반전모드 top: ICR1 비교일치값(PWM) 지정 : OCR1A, OCR1B P350 표15-7
	// 비교일치 발생시 OCR1A, OCR1B의 출력 핀은 LOW로 바뀌고 BOTTOM에서 HIGH로 바뀐다.
	TCCR1A |= 1 << COM1A1;
     800:	8f b5       	in	r24, 0x2f	; 47
     802:	80 68       	ori	r24, 0x80	; 128
     804:	8f bd       	out	0x2f, r24	; 47
	TCCR1A |= 1 << COM1B1;
     806:	8f b5       	in	r24, 0x2f	; 47
     808:	80 62       	ori	r24, 0x20	; 32
     80a:	8f bd       	out	0x2f, r24	; 47

	ICR1 = 0x3ff;  // 1023 ==> 4ms TOP : PWM 값
     80c:	8f ef       	ldi	r24, 0xFF	; 255
     80e:	93 e0       	ldi	r25, 0x03	; 3
     810:	97 bd       	out	0x27, r25	; 39
     812:	86 bd       	out	0x26, r24	; 38
     814:	08 95       	ret

00000816 <stop>:
	OCR1B = 0;  // PB6 PWM 출력 port right
}

void stop(void)
{
	MOTOR_DRIVER_DIRECTION_PORT &= ~(1 << 0 | 1 << 1 | 1 << 2 | 1 << 3);
     816:	e2 e6       	ldi	r30, 0x62	; 98
     818:	f0 e0       	ldi	r31, 0x00	; 0
     81a:	80 81       	ld	r24, Z
     81c:	80 7f       	andi	r24, 0xF0	; 240
     81e:	80 83       	st	Z, r24
	MOTOR_DRIVER_DIRECTION_PORT |= 1 << 0 | 1 << 1 | 1 << 2 | 1 << 3;  // stop 모드로 설정
     820:	80 81       	ld	r24, Z
     822:	8f 60       	ori	r24, 0x0F	; 15
     824:	80 83       	st	Z, r24
	
	OCR1A = 0;  // PB5 PWM 출력 port left
     826:	1b bc       	out	0x2b, r1	; 43
     828:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;  // PB6 PWM 출력 port right
     82a:	19 bc       	out	0x29, r1	; 41
     82c:	18 bc       	out	0x28, r1	; 40
     82e:	08 95       	ret

00000830 <auto_start>:
}
////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////         자동모드            //////////////////////////////////
void auto_start(void)
{
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	00 d0       	rcall	.+0      	; 0x836 <auto_start+0x6>
     836:	cd b7       	in	r28, 0x3d	; 61
     838:	de b7       	in	r29, 0x3e	; 62
	int run_state;
	sec_count = 120;
     83a:	88 e7       	ldi	r24, 0x78	; 120
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	a0 e0       	ldi	r26, 0x00	; 0
     840:	b0 e0       	ldi	r27, 0x00	; 0
     842:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <sec_count>
     846:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <sec_count+0x1>
     84a:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <sec_count+0x2>
     84e:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <sec_count+0x3>
	char sbuf[20];

	while(sec_count > 0)
     852:	96 c2       	rjmp	.+1324   	; 0xd80 <auto_start+0x550>
	{
		ultrasonic_trigger();
     854:	93 d4       	rcall	.+2342   	; 0x117c <ultrasonic_trigger>
		if (msec_count >= 1000)
     856:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <msec_count>
     85a:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <msec_count+0x1>
     85e:	a0 91 b0 01 	lds	r26, 0x01B0	; 0x8001b0 <msec_count+0x2>
     862:	b0 91 b1 01 	lds	r27, 0x01B1	; 0x8001b1 <msec_count+0x3>
     866:	88 3e       	cpi	r24, 0xE8	; 232
     868:	93 40       	sbci	r25, 0x03	; 3
     86a:	a1 05       	cpc	r26, r1
     86c:	b1 05       	cpc	r27, r1
     86e:	d8 f0       	brcs	.+54     	; 0x8a6 <auto_start+0x76>
		{
			msec_count = 0;
     870:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <msec_count>
     874:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <msec_count+0x1>
     878:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <msec_count+0x2>
     87c:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msec_count+0x3>
			sec_count--;
     880:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sec_count>
     884:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sec_count+0x1>
     888:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <sec_count+0x2>
     88c:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <sec_count+0x3>
     890:	01 97       	sbiw	r24, 0x01	; 1
     892:	a1 09       	sbc	r26, r1
     894:	b1 09       	sbc	r27, r1
     896:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <sec_count>
     89a:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <sec_count+0x1>
     89e:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <sec_count+0x2>
     8a2:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <sec_count+0x3>
		} // 1초씩 감소

		if (fnd_refreshrate >= 2)
     8a6:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <fnd_refreshrate>
     8aa:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <fnd_refreshrate+0x1>
     8ae:	a0 91 ac 01 	lds	r26, 0x01AC	; 0x8001ac <fnd_refreshrate+0x2>
     8b2:	b0 91 ad 01 	lds	r27, 0x01AD	; 0x8001ad <fnd_refreshrate+0x3>
     8b6:	02 97       	sbiw	r24, 0x02	; 2
     8b8:	a1 05       	cpc	r26, r1
     8ba:	b1 05       	cpc	r27, r1
     8bc:	58 f0       	brcs	.+22     	; 0x8d4 <auto_start+0xa4>
		{
			fnd_refreshrate = 0;
     8be:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <fnd_refreshrate>
     8c2:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <fnd_refreshrate+0x1>
     8c6:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <fnd_refreshrate+0x2>
     8ca:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <fnd_refreshrate+0x3>
			fnd_display(&run_state);
     8ce:	ce 01       	movw	r24, r28
     8d0:	01 96       	adiw	r24, 0x01	; 1
     8d2:	ac dc       	rcall	.-1704   	; 0x22c <fnd_display>
// 		volatile int gap1= ultrasonic_right_distance - ultrasonic_left_distance;
// 		volatile int gap2= ultrasonic_left_distance - ultrasonic_right_distance;

		//sprintf(sbuf,"%3d", run_state);
		
		 if (ultrasonic_right_distance <= 3 && ultrasonic_center_distance <= 3)
     8d4:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     8d8:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     8dc:	04 97       	sbiw	r24, 0x04	; 4
     8de:	ac f4       	brge	.+42     	; 0x90a <auto_start+0xda>
     8e0:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     8e4:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     8e8:	04 97       	sbiw	r24, 0x04	; 4
     8ea:	7c f4       	brge	.+30     	; 0x90a <auto_start+0xda>
		{
			run_state = BACKWARD;
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	9a 83       	std	Y+2, r25	; 0x02
     8f2:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     8f4:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     8f8:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(600);
			current_speed = 600;
     8fc:	88 e5       	ldi	r24, 0x58	; 88
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     904:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     908:	2a c2       	rjmp	.+1108   	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if (ultrasonic_left_distance <= 3 && ultrasonic_center_distance <= 3)
     90a:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     90e:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     912:	04 97       	sbiw	r24, 0x04	; 4
     914:	ac f4       	brge	.+42     	; 0x940 <auto_start+0x110>
     916:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     91a:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     91e:	04 97       	sbiw	r24, 0x04	; 4
     920:	7c f4       	brge	.+30     	; 0x940 <auto_start+0x110>
		{
			run_state = BACKWARD;
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	9a 83       	std	Y+2, r25	; 0x02
     928:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     92a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     92e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(600);
			current_speed = 600;
     932:	88 e5       	ldi	r24, 0x58	; 88
     934:	92 e0       	ldi	r25, 0x02	; 2
     936:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     93a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     93e:	0f c2       	rjmp	.+1054   	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if (ultrasonic_left_distance <= 3 && ultrasonic_right_distance <= 3)
     940:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     944:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     948:	04 97       	sbiw	r24, 0x04	; 4
     94a:	ac f4       	brge	.+42     	; 0x976 <auto_start+0x146>
     94c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     950:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     954:	04 97       	sbiw	r24, 0x04	; 4
     956:	7c f4       	brge	.+30     	; 0x976 <auto_start+0x146>
		{
			run_state = BACKWARD;
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	9a 83       	std	Y+2, r25	; 0x02
     95e:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     960:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     964:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(600);
			current_speed = 600;
     968:	88 e5       	ldi	r24, 0x58	; 88
     96a:	92 e0       	ldi	r25, 0x02	; 2
     96c:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     970:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     974:	f4 c1       	rjmp	.+1000   	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if(ultrasonic_center_distance <= 4)
     976:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     97a:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     97e:	05 97       	sbiw	r24, 0x05	; 5
     980:	7c f4       	brge	.+30     	; 0x9a0 <auto_start+0x170>
		{
			run_state = BACKWARD;
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	9a 83       	std	Y+2, r25	; 0x02
     988:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     98a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     98e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(600);
			current_speed = 600;
     992:	88 e5       	ldi	r24, 0x58	; 88
     994:	92 e0       	ldi	r25, 0x02	; 2
     996:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     99a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     99e:	df c1       	rjmp	.+958    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if (ultrasonic_right_distance <= 4)
     9a0:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     9a4:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     9a8:	05 97       	sbiw	r24, 0x05	; 5
     9aa:	7c f4       	brge	.+30     	; 0x9ca <auto_start+0x19a>
		{
			run_state = TURN_LEFT;
     9ac:	82 e0       	ldi	r24, 0x02	; 2
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	9a 83       	std	Y+2, r25	; 0x02
     9b2:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_LEFT;
     9b4:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     9b8:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_left(500);
			current_speed = 500;
     9bc:	84 ef       	ldi	r24, 0xF4	; 244
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     9c4:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     9c8:	ca c1       	rjmp	.+916    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if (ultrasonic_left_distance <= 4)
     9ca:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     9ce:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     9d2:	05 97       	sbiw	r24, 0x05	; 5
     9d4:	7c f4       	brge	.+30     	; 0x9f4 <auto_start+0x1c4>
		{
			run_state = TURN_RIGHT;
     9d6:	83 e0       	ldi	r24, 0x03	; 3
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	9a 83       	std	Y+2, r25	; 0x02
     9dc:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_RIGHT;
     9de:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     9e2:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_right(500);
			current_speed = 500;
     9e6:	84 ef       	ldi	r24, 0xF4	; 244
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     9ee:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     9f2:	b5 c1       	rjmp	.+874    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if (ultrasonic_left_distance <= 3 && ultrasonic_center_distance <= 3 && ultrasonic_right_distance <= 3)
     9f4:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     9f8:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     9fc:	04 97       	sbiw	r24, 0x04	; 4
     9fe:	dc f4       	brge	.+54     	; 0xa36 <auto_start+0x206>
     a00:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     a04:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     a08:	04 97       	sbiw	r24, 0x04	; 4
     a0a:	ac f4       	brge	.+42     	; 0xa36 <auto_start+0x206>
     a0c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     a10:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     a14:	04 97       	sbiw	r24, 0x04	; 4
     a16:	7c f4       	brge	.+30     	; 0xa36 <auto_start+0x206>
		{
			run_state = BACKWARD;
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	9a 83       	std	Y+2, r25	; 0x02
     a1e:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     a20:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     a24:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(600);
			current_speed = 600;
     a28:	88 e5       	ldi	r24, 0x58	; 88
     a2a:	92 e0       	ldi	r25, 0x02	; 2
     a2c:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     a30:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     a34:	94 c1       	rjmp	.+808    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
		else if(ultrasonic_right_distance - ultrasonic_left_distance < 4 && ultrasonic_left_distance - ultrasonic_right_distance < 4 && ultrasonic_center_distance >= 10)
     a36:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     a3a:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     a3e:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     a42:	30 91 bf 01 	lds	r19, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     a46:	82 1b       	sub	r24, r18
     a48:	93 0b       	sbc	r25, r19
     a4a:	04 97       	sbiw	r24, 0x04	; 4
     a4c:	fc f4       	brge	.+62     	; 0xa8c <auto_start+0x25c>
     a4e:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     a52:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     a56:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     a5a:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     a5e:	82 1b       	sub	r24, r18
     a60:	93 0b       	sbc	r25, r19
     a62:	04 97       	sbiw	r24, 0x04	; 4
     a64:	9c f4       	brge	.+38     	; 0xa8c <auto_start+0x25c>
     a66:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     a6a:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     a6e:	0a 97       	sbiw	r24, 0x0a	; 10
     a70:	6c f0       	brlt	.+26     	; 0xa8c <auto_start+0x25c>
		{
			run_state = FORWARD;
     a72:	1a 82       	std	Y+2, r1	; 0x02
     a74:	19 82       	std	Y+1, r1	; 0x01
			current_mode = FORWARD;
     a76:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <current_mode+0x1>
     a7a:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <current_mode>
			//forward(300);
			current_speed = 300;
     a7e:	8c e2       	ldi	r24, 0x2C	; 44
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     a86:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     a8a:	69 c1       	rjmp	.+722    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "FORWARD";
		}
		else if (ultrasonic_center_distance >= 800 || ultrasonic_left_distance >= 800 || ultrasonic_right_distance >= 800)
     a8c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     a90:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     a94:	80 32       	cpi	r24, 0x20	; 32
     a96:	93 40       	sbci	r25, 0x03	; 3
     a98:	74 f4       	brge	.+28     	; 0xab6 <auto_start+0x286>
     a9a:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     a9e:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     aa2:	80 32       	cpi	r24, 0x20	; 32
     aa4:	93 40       	sbci	r25, 0x03	; 3
     aa6:	3c f4       	brge	.+14     	; 0xab6 <auto_start+0x286>
     aa8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     aac:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     ab0:	80 32       	cpi	r24, 0x20	; 32
     ab2:	93 40       	sbci	r25, 0x03	; 3
     ab4:	7c f0       	brlt	.+30     	; 0xad4 <auto_start+0x2a4>
		{
			run_state = BACKWARD;
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	9a 83       	std	Y+2, r25	; 0x02
     abc:	89 83       	std	Y+1, r24	; 0x01
			current_mode = BACKWARD;
     abe:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     ac2:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//backward(400);
			current_speed = 400;
     ac6:	80 e9       	ldi	r24, 0x90	; 144
     ac8:	91 e0       	ldi	r25, 0x01	; 1
     aca:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     ace:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     ad2:	45 c1       	rjmp	.+650    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "BACKWARD";
		}
 		
		 ///좁은 길
		else if (ultrasonic_right_distance <= 7 && ultrasonic_center_distance <= 15 && ultrasonic_right_distance > 3 && ultrasonic_center_distance > 3)
     ad4:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     ad8:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     adc:	08 97       	sbiw	r24, 0x08	; 8
     ade:	0c f5       	brge	.+66     	; 0xb22 <auto_start+0x2f2>
     ae0:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     ae4:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     ae8:	40 97       	sbiw	r24, 0x10	; 16
     aea:	dc f4       	brge	.+54     	; 0xb22 <auto_start+0x2f2>
     aec:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     af0:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     af4:	04 97       	sbiw	r24, 0x04	; 4
     af6:	ac f0       	brlt	.+42     	; 0xb22 <auto_start+0x2f2>
     af8:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     afc:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     b00:	04 97       	sbiw	r24, 0x04	; 4
     b02:	7c f0       	brlt	.+30     	; 0xb22 <auto_start+0x2f2>
		{
			run_state = TURN_LEFT;
     b04:	82 e0       	ldi	r24, 0x02	; 2
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	9a 83       	std	Y+2, r25	; 0x02
     b0a:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_LEFT;
     b0c:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     b10:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_left(400);
			current_speed = 400;
     b14:	80 e9       	ldi	r24, 0x90	; 144
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     b1c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     b20:	1e c1       	rjmp	.+572    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "TRUN LEFT";
		}
		else if (ultrasonic_left_distance <= 7 && ultrasonic_center_distance <= 15 && ultrasonic_left_distance > 3 && ultrasonic_center_distance > 3)
     b22:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     b26:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     b2a:	08 97       	sbiw	r24, 0x08	; 8
     b2c:	0c f5       	brge	.+66     	; 0xb70 <auto_start+0x340>
     b2e:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     b32:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     b36:	40 97       	sbiw	r24, 0x10	; 16
     b38:	dc f4       	brge	.+54     	; 0xb70 <auto_start+0x340>
     b3a:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     b3e:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     b42:	04 97       	sbiw	r24, 0x04	; 4
     b44:	ac f0       	brlt	.+42     	; 0xb70 <auto_start+0x340>
     b46:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     b4a:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     b4e:	04 97       	sbiw	r24, 0x04	; 4
     b50:	7c f0       	brlt	.+30     	; 0xb70 <auto_start+0x340>
		{
			run_state = TURN_RIGHT;
     b52:	83 e0       	ldi	r24, 0x03	; 3
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	9a 83       	std	Y+2, r25	; 0x02
     b58:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_RIGHT;
     b5a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     b5e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_right(400);
			current_speed = 400;
     b62:	80 e9       	ldi	r24, 0x90	; 144
     b64:	91 e0       	ldi	r25, 0x01	; 1
     b66:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     b6a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     b6e:	f7 c0       	rjmp	.+494    	; 0xd5e <auto_start+0x52e>
		}		
		
		 ///
		 
		 /// 넓은 길
		 else if (ultrasonic_right_distance <= 20 && ultrasonic_center_distance <= 30 && ultrasonic_right_distance > 3 && ultrasonic_center_distance > 3)
     b70:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     b74:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     b78:	45 97       	sbiw	r24, 0x15	; 21
     b7a:	0c f5       	brge	.+66     	; 0xbbe <auto_start+0x38e>
     b7c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     b80:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     b84:	4f 97       	sbiw	r24, 0x1f	; 31
     b86:	dc f4       	brge	.+54     	; 0xbbe <auto_start+0x38e>
     b88:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     b8c:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     b90:	04 97       	sbiw	r24, 0x04	; 4
     b92:	ac f0       	brlt	.+42     	; 0xbbe <auto_start+0x38e>
     b94:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     b98:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     b9c:	04 97       	sbiw	r24, 0x04	; 4
     b9e:	7c f0       	brlt	.+30     	; 0xbbe <auto_start+0x38e>
		 {
			 run_state = TURN_LEFT;
     ba0:	82 e0       	ldi	r24, 0x02	; 2
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	9a 83       	std	Y+2, r25	; 0x02
     ba6:	89 83       	std	Y+1, r24	; 0x01
			 current_mode = TURN_LEFT;
     ba8:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     bac:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			 //turn_left(500);
			 current_speed = 500;
     bb0:	84 ef       	ldi	r24, 0xF4	; 244
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     bb8:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     bbc:	d0 c0       	rjmp	.+416    	; 0xd5e <auto_start+0x52e>
			 //sbuf[20] = "TRUN LEFT";
		 }
		 else if (ultrasonic_left_distance <= 20 && ultrasonic_center_distance <= 30 && ultrasonic_left_distance > 3 && ultrasonic_center_distance > 3)
     bbe:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     bc2:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     bc6:	45 97       	sbiw	r24, 0x15	; 21
     bc8:	0c f5       	brge	.+66     	; 0xc0c <auto_start+0x3dc>
     bca:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     bce:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     bd2:	4f 97       	sbiw	r24, 0x1f	; 31
     bd4:	dc f4       	brge	.+54     	; 0xc0c <auto_start+0x3dc>
     bd6:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     bda:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     bde:	04 97       	sbiw	r24, 0x04	; 4
     be0:	ac f0       	brlt	.+42     	; 0xc0c <auto_start+0x3dc>
     be2:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     be6:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     bea:	04 97       	sbiw	r24, 0x04	; 4
     bec:	7c f0       	brlt	.+30     	; 0xc0c <auto_start+0x3dc>
		 {
			 run_state = TURN_RIGHT;
     bee:	83 e0       	ldi	r24, 0x03	; 3
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	9a 83       	std	Y+2, r25	; 0x02
     bf4:	89 83       	std	Y+1, r24	; 0x01
			 current_mode = TURN_RIGHT;
     bf6:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     bfa:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			 //turn_right(500);
			 current_speed = 500;
     bfe:	84 ef       	ldi	r24, 0xF4	; 244
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     c06:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     c0a:	a9 c0       	rjmp	.+338    	; 0xd5e <auto_start+0x52e>
			 //sbuf[20] = "TRUN RIGHT";
		 }
		 ///
		 else if (ultrasonic_right_distance <= 20)
     c0c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     c10:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     c14:	45 97       	sbiw	r24, 0x15	; 21
     c16:	7c f4       	brge	.+30     	; 0xc36 <auto_start+0x406>
		 {
			 run_state = TURN_LEFT;
     c18:	82 e0       	ldi	r24, 0x02	; 2
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	9a 83       	std	Y+2, r25	; 0x02
     c1e:	89 83       	std	Y+1, r24	; 0x01
			 current_mode = TURN_LEFT;
     c20:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     c24:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			 //turn_left(500);
			 current_speed = 500;
     c28:	84 ef       	ldi	r24, 0xF4	; 244
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     c30:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     c34:	94 c0       	rjmp	.+296    	; 0xd5e <auto_start+0x52e>
			 //sbuf[20] = "TRUN LEFT";
		 }
		 else if (ultrasonic_left_distance <= 20)
     c36:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     c3a:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     c3e:	45 97       	sbiw	r24, 0x15	; 21
     c40:	7c f4       	brge	.+30     	; 0xc60 <auto_start+0x430>
		 {
			 run_state = TURN_RIGHT;
     c42:	83 e0       	ldi	r24, 0x03	; 3
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	9a 83       	std	Y+2, r25	; 0x02
     c48:	89 83       	std	Y+1, r24	; 0x01
			 current_mode = TURN_RIGHT;
     c4a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     c4e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			 //turn_right(500);
			 current_speed = 500;
     c52:	84 ef       	ldi	r24, 0xF4	; 244
     c54:	91 e0       	ldi	r25, 0x01	; 1
     c56:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     c5a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     c5e:	7f c0       	rjmp	.+254    	; 0xd5e <auto_start+0x52e>
			 //sbuf[20] = "TRUN RIGHT";
		 }
		 
		
		else if ((ultrasonic_left_distance - ultrasonic_right_distance <= 2 && ultrasonic_right_distance - ultrasonic_left_distance <= 2) || ultrasonic_center_distance >= 20 && ultrasonic_center_distance <= 200)
     c60:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     c64:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     c68:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     c6c:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     c70:	82 1b       	sub	r24, r18
     c72:	93 0b       	sbc	r25, r19
     c74:	03 97       	sbiw	r24, 0x03	; 3
     c76:	64 f4       	brge	.+24     	; 0xc90 <auto_start+0x460>
     c78:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     c7c:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     c80:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     c84:	30 91 bf 01 	lds	r19, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     c88:	82 1b       	sub	r24, r18
     c8a:	93 0b       	sbc	r25, r19
     c8c:	03 97       	sbiw	r24, 0x03	; 3
     c8e:	6c f0       	brlt	.+26     	; 0xcaa <auto_start+0x47a>
     c90:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     c94:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     c98:	44 97       	sbiw	r24, 0x14	; 20
     c9a:	a4 f0       	brlt	.+40     	; 0xcc4 <auto_start+0x494>
     c9c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     ca0:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     ca4:	89 3c       	cpi	r24, 0xC9	; 201
     ca6:	91 05       	cpc	r25, r1
     ca8:	6c f4       	brge	.+26     	; 0xcc4 <auto_start+0x494>
		{
			run_state = FORWARD;
     caa:	1a 82       	std	Y+2, r1	; 0x02
     cac:	19 82       	std	Y+1, r1	; 0x01
			current_mode = FORWARD;
     cae:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <current_mode+0x1>
     cb2:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <current_mode>
			//forward(350);
			current_speed = 350;
     cb6:	8e e5       	ldi	r24, 0x5E	; 94
     cb8:	91 e0       	ldi	r25, 0x01	; 1
     cba:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     cbe:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     cc2:	4d c0       	rjmp	.+154    	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "FORWARD";
		}
		else if(ultrasonic_right_distance - ultrasonic_left_distance <= 4 && ultrasonic_center_distance <= 7 && ultrasonic_right_distance > 5)
     cc4:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     cc8:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     ccc:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     cd0:	30 91 bf 01 	lds	r19, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     cd4:	82 1b       	sub	r24, r18
     cd6:	93 0b       	sbc	r25, r19
     cd8:	05 97       	sbiw	r24, 0x05	; 5
     cda:	dc f4       	brge	.+54     	; 0xd12 <auto_start+0x4e2>
     cdc:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     ce0:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     ce4:	08 97       	sbiw	r24, 0x08	; 8
     ce6:	ac f4       	brge	.+42     	; 0xd12 <auto_start+0x4e2>
     ce8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     cec:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     cf0:	06 97       	sbiw	r24, 0x06	; 6
     cf2:	7c f0       	brlt	.+30     	; 0xd12 <auto_start+0x4e2>
		{
			run_state = TURN_LEFT;
     cf4:	82 e0       	ldi	r24, 0x02	; 2
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	9a 83       	std	Y+2, r25	; 0x02
     cfa:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_LEFT;
     cfc:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     d00:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_left(500);
			current_speed = 500;
     d04:	84 ef       	ldi	r24, 0xF4	; 244
     d06:	91 e0       	ldi	r25, 0x01	; 1
     d08:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     d0c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
     d10:	26 c0       	rjmp	.+76     	; 0xd5e <auto_start+0x52e>
			//sbuf[20] = "TRUN LEFT";
		}
		else if(ultrasonic_left_distance - ultrasonic_right_distance <= 4 && ultrasonic_center_distance <= 7 && ultrasonic_left_distance > 5)
     d12:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     d16:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     d1a:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
     d1e:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
     d22:	82 1b       	sub	r24, r18
     d24:	93 0b       	sbc	r25, r19
     d26:	05 97       	sbiw	r24, 0x05	; 5
     d28:	d4 f4       	brge	.+52     	; 0xd5e <auto_start+0x52e>
     d2a:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
     d2e:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
     d32:	08 97       	sbiw	r24, 0x08	; 8
     d34:	a4 f4       	brge	.+40     	; 0xd5e <auto_start+0x52e>
     d36:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
     d3a:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
     d3e:	06 97       	sbiw	r24, 0x06	; 6
     d40:	74 f0       	brlt	.+28     	; 0xd5e <auto_start+0x52e>
		{
			run_state = TURN_RIGHT;
     d42:	83 e0       	ldi	r24, 0x03	; 3
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	9a 83       	std	Y+2, r25	; 0x02
     d48:	89 83       	std	Y+1, r24	; 0x01
			current_mode = TURN_RIGHT;
     d4a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <current_mode+0x1>
     d4e:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <current_mode>
			//turn_right(500);
			current_speed = 500;
     d52:	84 ef       	ldi	r24, 0xF4	; 244
     d54:	91 e0       	ldi	r25, 0x01	; 1
     d56:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <current_speed+0x1>
     d5a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <current_speed>
			//sbuf[20] = "TRUN RIGHT";
		}
		
		current_location[run_state](&current_speed);
     d5e:	e9 81       	ldd	r30, Y+1	; 0x01
     d60:	fa 81       	ldd	r31, Y+2	; 0x02
     d62:	ee 0f       	add	r30, r30
     d64:	ff 1f       	adc	r31, r31
     d66:	ea 5e       	subi	r30, 0xEA	; 234
     d68:	fe 4f       	sbci	r31, 0xFE	; 254
     d6a:	01 90       	ld	r0, Z+
     d6c:	f0 81       	ld	r31, Z
     d6e:	e0 2d       	mov	r30, r0
     d70:	84 eb       	ldi	r24, 0xB4	; 180
     d72:	91 e0       	ldi	r25, 0x01	; 1
     d74:	09 95       	icall
		I2C_LCD_Test(&current_speed, &current_mode);
     d76:	62 eb       	ldi	r22, 0xB2	; 178
     d78:	71 e0       	ldi	r23, 0x01	; 1
     d7a:	84 eb       	ldi	r24, 0xB4	; 180
     d7c:	91 e0       	ldi	r25, 0x01	; 1
     d7e:	e4 db       	rcall	.-2104   	; 0x548 <I2C_LCD_Test>
{
	int run_state;
	sec_count = 120;
	char sbuf[20];

	while(sec_count > 0)
     d80:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sec_count>
     d84:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sec_count+0x1>
     d88:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <sec_count+0x2>
     d8c:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <sec_count+0x3>
     d90:	89 2b       	or	r24, r25
     d92:	8a 2b       	or	r24, r26
     d94:	8b 2b       	or	r24, r27
     d96:	09 f0       	breq	.+2      	; 0xd9a <auto_start+0x56a>
     d98:	5d cd       	rjmp	.-1350   	; 0x854 <auto_start+0x24>
		}
		
		current_location[run_state](&current_speed);
		I2C_LCD_Test(&current_speed, &current_mode);
	}
     d9a:	0f 90       	pop	r0
     d9c:	0f 90       	pop	r0
     d9e:	df 91       	pop	r29
     da0:	cf 91       	pop	r28
     da2:	08 95       	ret

00000da4 <__vector_18>:
     da4:	1f 92       	push	r1
     da6:	0f 92       	push	r0
     da8:	0f b6       	in	r0, 0x3f	; 63
     daa:	0f 92       	push	r0
     dac:	11 24       	eor	r1, r1
     dae:	0b b6       	in	r0, 0x3b	; 59
     db0:	0f 92       	push	r0
     db2:	2f 93       	push	r18
     db4:	3f 93       	push	r19
     db6:	4f 93       	push	r20
     db8:	5f 93       	push	r21
     dba:	6f 93       	push	r22
     dbc:	7f 93       	push	r23
     dbe:	8f 93       	push	r24
     dc0:	9f 93       	push	r25
     dc2:	af 93       	push	r26
     dc4:	bf 93       	push	r27
     dc6:	ef 93       	push	r30
     dc8:	ff 93       	push	r31
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	1f 92       	push	r1
     dd0:	cd b7       	in	r28, 0x3d	; 61
     dd2:	de b7       	in	r29, 0x3e	; 62
     dd4:	8c b1       	in	r24, 0x0c	; 12
     dd6:	89 83       	std	Y+1, r24	; 0x01
     dd8:	89 81       	ldd	r24, Y+1	; 0x01
     dda:	8d 30       	cpi	r24, 0x0D	; 13
     ddc:	19 f0       	breq	.+6      	; 0xde4 <__vector_18+0x40>
     dde:	89 81       	ldd	r24, Y+1	; 0x01
     de0:	8a 30       	cpi	r24, 0x0A	; 10
     de2:	61 f5       	brne	.+88     	; 0xe3c <__vector_18+0x98>
     de4:	20 91 b8 01 	lds	r18, 0x01B8	; 0x8001b8 <rear>
     de8:	30 91 b9 01 	lds	r19, 0x01B9	; 0x8001b9 <rear+0x1>
     dec:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <i.1878>
     df0:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <i.1878+0x1>
     df4:	40 e5       	ldi	r20, 0x50	; 80
     df6:	42 9f       	mul	r20, r18
     df8:	f0 01       	movw	r30, r0
     dfa:	43 9f       	mul	r20, r19
     dfc:	f0 0d       	add	r31, r0
     dfe:	11 24       	eor	r1, r1
     e00:	e0 54       	subi	r30, 0x40	; 64
     e02:	fe 4f       	sbci	r31, 0xFE	; 254
     e04:	e8 0f       	add	r30, r24
     e06:	f9 1f       	adc	r31, r25
     e08:	10 82       	st	Z, r1
     e0a:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <i.1878+0x1>
     e0e:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <i.1878>
     e12:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <rear>
     e16:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <rear+0x1>
     e1a:	01 96       	adiw	r24, 0x01	; 1
     e1c:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <rear+0x1>
     e20:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <rear>
     e24:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <rear>
     e28:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <rear+0x1>
     e2c:	6a e0       	ldi	r22, 0x0A	; 10
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	e4 d3       	rcall	.+1992   	; 0x15fa <__divmodhi4>
     e32:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <rear+0x1>
     e36:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <rear>
     e3a:	1c c0       	rjmp	.+56     	; 0xe74 <__vector_18+0xd0>
     e3c:	60 91 b8 01 	lds	r22, 0x01B8	; 0x8001b8 <rear>
     e40:	70 91 b9 01 	lds	r23, 0x01B9	; 0x8001b9 <rear+0x1>
     e44:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <i.1878>
     e48:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <i.1878+0x1>
     e4c:	9c 01       	movw	r18, r24
     e4e:	2f 5f       	subi	r18, 0xFF	; 255
     e50:	3f 4f       	sbci	r19, 0xFF	; 255
     e52:	30 93 b7 01 	sts	0x01B7, r19	; 0x8001b7 <i.1878+0x1>
     e56:	20 93 b6 01 	sts	0x01B6, r18	; 0x8001b6 <i.1878>
     e5a:	49 81       	ldd	r20, Y+1	; 0x01
     e5c:	50 e5       	ldi	r21, 0x50	; 80
     e5e:	56 9f       	mul	r21, r22
     e60:	90 01       	movw	r18, r0
     e62:	57 9f       	mul	r21, r23
     e64:	30 0d       	add	r19, r0
     e66:	11 24       	eor	r1, r1
     e68:	20 54       	subi	r18, 0x40	; 64
     e6a:	3e 4f       	sbci	r19, 0xFE	; 254
     e6c:	f9 01       	movw	r30, r18
     e6e:	e8 0f       	add	r30, r24
     e70:	f9 1f       	adc	r31, r25
     e72:	40 83       	st	Z, r20
     e74:	0f 90       	pop	r0
     e76:	df 91       	pop	r29
     e78:	cf 91       	pop	r28
     e7a:	ff 91       	pop	r31
     e7c:	ef 91       	pop	r30
     e7e:	bf 91       	pop	r27
     e80:	af 91       	pop	r26
     e82:	9f 91       	pop	r25
     e84:	8f 91       	pop	r24
     e86:	7f 91       	pop	r23
     e88:	6f 91       	pop	r22
     e8a:	5f 91       	pop	r21
     e8c:	4f 91       	pop	r20
     e8e:	3f 91       	pop	r19
     e90:	2f 91       	pop	r18
     e92:	0f 90       	pop	r0
     e94:	0b be       	out	0x3b, r0	; 59
     e96:	0f 90       	pop	r0
     e98:	0f be       	out	0x3f, r0	; 63
     e9a:	0f 90       	pop	r0
     e9c:	1f 90       	pop	r1
     e9e:	18 95       	reti

00000ea0 <init_uart0>:
     ea0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     ea4:	8f ec       	ldi	r24, 0xCF	; 207
     ea6:	89 b9       	out	0x09, r24	; 9
     ea8:	8b b1       	in	r24, 0x0b	; 11
     eaa:	82 60       	ori	r24, 0x02	; 2
     eac:	8b b9       	out	0x0b, r24	; 11
     eae:	e5 e9       	ldi	r30, 0x95	; 149
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	80 81       	ld	r24, Z
     eb4:	86 60       	ori	r24, 0x06	; 6
     eb6:	80 83       	st	Z, r24
     eb8:	8a b1       	in	r24, 0x0a	; 10
     eba:	88 69       	ori	r24, 0x98	; 152
     ebc:	8a b9       	out	0x0a, r24	; 10
     ebe:	08 95       	ret

00000ec0 <UART0_transmit>:
     ec0:	5d 9b       	sbis	0x0b, 5	; 11
     ec2:	fe cf       	rjmp	.-4      	; 0xec0 <UART0_transmit>
     ec4:	8c b9       	out	0x0c, r24	; 12
     ec6:	08 95       	ret

00000ec8 <__vector_30>:
     ec8:	1f 92       	push	r1
     eca:	0f 92       	push	r0
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	0f 92       	push	r0
     ed0:	11 24       	eor	r1, r1
     ed2:	0b b6       	in	r0, 0x3b	; 59
     ed4:	0f 92       	push	r0
     ed6:	2f 93       	push	r18
     ed8:	3f 93       	push	r19
     eda:	4f 93       	push	r20
     edc:	5f 93       	push	r21
     ede:	6f 93       	push	r22
     ee0:	7f 93       	push	r23
     ee2:	8f 93       	push	r24
     ee4:	9f 93       	push	r25
     ee6:	af 93       	push	r26
     ee8:	bf 93       	push	r27
     eea:	ef 93       	push	r30
     eec:	ff 93       	push	r31
     eee:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     ef2:	80 93 00 08 	sts	0x0800, r24	; 0x800800 <bt_data>
     ef6:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <bt_data>
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	e1 df       	rcall	.-62     	; 0xec0 <UART0_transmit>
     efe:	ff 91       	pop	r31
     f00:	ef 91       	pop	r30
     f02:	bf 91       	pop	r27
     f04:	af 91       	pop	r26
     f06:	9f 91       	pop	r25
     f08:	8f 91       	pop	r24
     f0a:	7f 91       	pop	r23
     f0c:	6f 91       	pop	r22
     f0e:	5f 91       	pop	r21
     f10:	4f 91       	pop	r20
     f12:	3f 91       	pop	r19
     f14:	2f 91       	pop	r18
     f16:	0f 90       	pop	r0
     f18:	0b be       	out	0x3b, r0	; 59
     f1a:	0f 90       	pop	r0
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	0f 90       	pop	r0
     f20:	1f 90       	pop	r1
     f22:	18 95       	reti

00000f24 <init_uart1>:
     f24:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     f28:	8f ec       	ldi	r24, 0xCF	; 207
     f2a:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     f2e:	eb e9       	ldi	r30, 0x9B	; 155
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	82 60       	ori	r24, 0x02	; 2
     f36:	80 83       	st	Z, r24
     f38:	ed e9       	ldi	r30, 0x9D	; 157
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	86 60       	ori	r24, 0x06	; 6
     f40:	80 83       	st	Z, r24
     f42:	ea e9       	ldi	r30, 0x9A	; 154
     f44:	f0 e0       	ldi	r31, 0x00	; 0
     f46:	80 81       	ld	r24, Z
     f48:	88 69       	ori	r24, 0x98	; 152
     f4a:	80 83       	st	Z, r24
     f4c:	08 95       	ret

00000f4e <__vector_5>:
     f4e:	1f 92       	push	r1
     f50:	0f 92       	push	r0
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	0f 92       	push	r0
     f56:	11 24       	eor	r1, r1
     f58:	0b b6       	in	r0, 0x3b	; 59
     f5a:	0f 92       	push	r0
     f5c:	2f 93       	push	r18
     f5e:	3f 93       	push	r19
     f60:	4f 93       	push	r20
     f62:	5f 93       	push	r21
     f64:	6f 93       	push	r22
     f66:	7f 93       	push	r23
     f68:	8f 93       	push	r24
     f6a:	9f 93       	push	r25
     f6c:	af 93       	push	r26
     f6e:	bf 93       	push	r27
     f70:	ef 93       	push	r30
     f72:	ff 93       	push	r31
     f74:	0c 9b       	sbis	0x01, 4	; 1
     f76:	05 c0       	rjmp	.+10     	; 0xf82 <__vector_5+0x34>
     f78:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     f7c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     f80:	20 c0       	rjmp	.+64     	; 0xfc2 <__vector_5+0x74>
     f82:	60 91 88 00 	lds	r22, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     f86:	70 91 89 00 	lds	r23, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	44 d2       	rcall	.+1160   	; 0x1418 <__floatunsisf>
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	34 e2       	ldi	r19, 0x24	; 36
     f94:	44 e7       	ldi	r20, 0x74	; 116
     f96:	59 e4       	ldi	r21, 0x49	; 73
     f98:	cd d2       	rcall	.+1434   	; 0x1534 <__mulsf3>
     f9a:	20 e0       	ldi	r18, 0x00	; 0
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	40 e8       	ldi	r20, 0x80	; 128
     fa0:	54 e4       	ldi	r21, 0x44	; 68
     fa2:	c8 d2       	rcall	.+1424   	; 0x1534 <__mulsf3>
     fa4:	20 e0       	ldi	r18, 0x00	; 0
     fa6:	34 e2       	ldi	r19, 0x24	; 36
     fa8:	44 e7       	ldi	r20, 0x74	; 116
     faa:	5b e4       	ldi	r21, 0x4B	; 75
     fac:	9c d1       	rcall	.+824    	; 0x12e6 <__divsf3>
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	48 e6       	ldi	r20, 0x68	; 104
     fb4:	52 e4       	ldi	r21, 0x42	; 66
     fb6:	97 d1       	rcall	.+814    	; 0x12e6 <__divsf3>
     fb8:	fe d1       	rcall	.+1020   	; 0x13b6 <__fixsfsi>
     fba:	70 93 bf 01 	sts	0x01BF, r23	; 0x8001bf <ultrasonic_left_distance+0x1>
     fbe:	60 93 be 01 	sts	0x01BE, r22	; 0x8001be <ultrasonic_left_distance>
     fc2:	ff 91       	pop	r31
     fc4:	ef 91       	pop	r30
     fc6:	bf 91       	pop	r27
     fc8:	af 91       	pop	r26
     fca:	9f 91       	pop	r25
     fcc:	8f 91       	pop	r24
     fce:	7f 91       	pop	r23
     fd0:	6f 91       	pop	r22
     fd2:	5f 91       	pop	r21
     fd4:	4f 91       	pop	r20
     fd6:	3f 91       	pop	r19
     fd8:	2f 91       	pop	r18
     fda:	0f 90       	pop	r0
     fdc:	0b be       	out	0x3b, r0	; 59
     fde:	0f 90       	pop	r0
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	0f 90       	pop	r0
     fe4:	1f 90       	pop	r1
     fe6:	18 95       	reti

00000fe8 <__vector_6>:
     fe8:	1f 92       	push	r1
     fea:	0f 92       	push	r0
     fec:	0f b6       	in	r0, 0x3f	; 63
     fee:	0f 92       	push	r0
     ff0:	11 24       	eor	r1, r1
     ff2:	0b b6       	in	r0, 0x3b	; 59
     ff4:	0f 92       	push	r0
     ff6:	2f 93       	push	r18
     ff8:	3f 93       	push	r19
     ffa:	4f 93       	push	r20
     ffc:	5f 93       	push	r21
     ffe:	6f 93       	push	r22
    1000:	7f 93       	push	r23
    1002:	8f 93       	push	r24
    1004:	9f 93       	push	r25
    1006:	af 93       	push	r26
    1008:	bf 93       	push	r27
    100a:	ef 93       	push	r30
    100c:	ff 93       	push	r31
    100e:	0d 9b       	sbis	0x01, 5	; 1
    1010:	05 c0       	rjmp	.+10     	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
    1012:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1016:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    101a:	20 c0       	rjmp	.+64     	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
    101c:	60 91 88 00 	lds	r22, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1020:	70 91 89 00 	lds	r23, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1024:	80 e0       	ldi	r24, 0x00	; 0
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	f7 d1       	rcall	.+1006   	; 0x1418 <__floatunsisf>
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	34 e2       	ldi	r19, 0x24	; 36
    102e:	44 e7       	ldi	r20, 0x74	; 116
    1030:	59 e4       	ldi	r21, 0x49	; 73
    1032:	80 d2       	rcall	.+1280   	; 0x1534 <__mulsf3>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	40 e8       	ldi	r20, 0x80	; 128
    103a:	54 e4       	ldi	r21, 0x44	; 68
    103c:	7b d2       	rcall	.+1270   	; 0x1534 <__mulsf3>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	34 e2       	ldi	r19, 0x24	; 36
    1042:	44 e7       	ldi	r20, 0x74	; 116
    1044:	5b e4       	ldi	r21, 0x4B	; 75
    1046:	4f d1       	rcall	.+670    	; 0x12e6 <__divsf3>
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	48 e6       	ldi	r20, 0x68	; 104
    104e:	52 e4       	ldi	r21, 0x42	; 66
    1050:	4a d1       	rcall	.+660    	; 0x12e6 <__divsf3>
    1052:	b1 d1       	rcall	.+866    	; 0x13b6 <__fixsfsi>
    1054:	70 93 bd 01 	sts	0x01BD, r23	; 0x8001bd <ultrasonic_center_distance+0x1>
    1058:	60 93 bc 01 	sts	0x01BC, r22	; 0x8001bc <ultrasonic_center_distance>
    105c:	ff 91       	pop	r31
    105e:	ef 91       	pop	r30
    1060:	bf 91       	pop	r27
    1062:	af 91       	pop	r26
    1064:	9f 91       	pop	r25
    1066:	8f 91       	pop	r24
    1068:	7f 91       	pop	r23
    106a:	6f 91       	pop	r22
    106c:	5f 91       	pop	r21
    106e:	4f 91       	pop	r20
    1070:	3f 91       	pop	r19
    1072:	2f 91       	pop	r18
    1074:	0f 90       	pop	r0
    1076:	0b be       	out	0x3b, r0	; 59
    1078:	0f 90       	pop	r0
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	0f 90       	pop	r0
    107e:	1f 90       	pop	r1
    1080:	18 95       	reti

00001082 <__vector_7>:
    1082:	1f 92       	push	r1
    1084:	0f 92       	push	r0
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	0b b6       	in	r0, 0x3b	; 59
    108e:	0f 92       	push	r0
    1090:	2f 93       	push	r18
    1092:	3f 93       	push	r19
    1094:	4f 93       	push	r20
    1096:	5f 93       	push	r21
    1098:	6f 93       	push	r22
    109a:	7f 93       	push	r23
    109c:	8f 93       	push	r24
    109e:	9f 93       	push	r25
    10a0:	af 93       	push	r26
    10a2:	bf 93       	push	r27
    10a4:	ef 93       	push	r30
    10a6:	ff 93       	push	r31
    10a8:	0e 9b       	sbis	0x01, 6	; 1
    10aa:	05 c0       	rjmp	.+10     	; 0x10b6 <__vector_7+0x34>
    10ac:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    10b0:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    10b4:	20 c0       	rjmp	.+64     	; 0x10f6 <__vector_7+0x74>
    10b6:	60 91 88 00 	lds	r22, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    10ba:	70 91 89 00 	lds	r23, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    10be:	80 e0       	ldi	r24, 0x00	; 0
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	aa d1       	rcall	.+852    	; 0x1418 <__floatunsisf>
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	34 e2       	ldi	r19, 0x24	; 36
    10c8:	44 e7       	ldi	r20, 0x74	; 116
    10ca:	59 e4       	ldi	r21, 0x49	; 73
    10cc:	33 d2       	rcall	.+1126   	; 0x1534 <__mulsf3>
    10ce:	20 e0       	ldi	r18, 0x00	; 0
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	40 e8       	ldi	r20, 0x80	; 128
    10d4:	54 e4       	ldi	r21, 0x44	; 68
    10d6:	2e d2       	rcall	.+1116   	; 0x1534 <__mulsf3>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	34 e2       	ldi	r19, 0x24	; 36
    10dc:	44 e7       	ldi	r20, 0x74	; 116
    10de:	5b e4       	ldi	r21, 0x4B	; 75
    10e0:	02 d1       	rcall	.+516    	; 0x12e6 <__divsf3>
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	48 e6       	ldi	r20, 0x68	; 104
    10e8:	52 e4       	ldi	r21, 0x42	; 66
    10ea:	fd d0       	rcall	.+506    	; 0x12e6 <__divsf3>
    10ec:	64 d1       	rcall	.+712    	; 0x13b6 <__fixsfsi>
    10ee:	70 93 bb 01 	sts	0x01BB, r23	; 0x8001bb <ultrasonic_right_distance+0x1>
    10f2:	60 93 ba 01 	sts	0x01BA, r22	; 0x8001ba <ultrasonic_right_distance>
    10f6:	ff 91       	pop	r31
    10f8:	ef 91       	pop	r30
    10fa:	bf 91       	pop	r27
    10fc:	af 91       	pop	r26
    10fe:	9f 91       	pop	r25
    1100:	8f 91       	pop	r24
    1102:	7f 91       	pop	r23
    1104:	6f 91       	pop	r22
    1106:	5f 91       	pop	r21
    1108:	4f 91       	pop	r20
    110a:	3f 91       	pop	r19
    110c:	2f 91       	pop	r18
    110e:	0f 90       	pop	r0
    1110:	0b be       	out	0x3b, r0	; 59
    1112:	0f 90       	pop	r0
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	0f 90       	pop	r0
    1118:	1f 90       	pop	r1
    111a:	18 95       	reti

0000111c <init_ultrasonic>:
    111c:	8a b3       	in	r24, 0x1a	; 26
    111e:	81 60       	ori	r24, 0x01	; 1
    1120:	8a bb       	out	0x1a, r24	; 26
    1122:	82 b1       	in	r24, 0x02	; 2
    1124:	8f 7e       	andi	r24, 0xEF	; 239
    1126:	82 b9       	out	0x02, r24	; 2
    1128:	8a b7       	in	r24, 0x3a	; 58
    112a:	81 60       	ori	r24, 0x01	; 1
    112c:	8a bf       	out	0x3a, r24	; 58
    112e:	ea e8       	ldi	r30, 0x8A	; 138
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	80 81       	ld	r24, Z
    1134:	85 60       	ori	r24, 0x05	; 5
    1136:	80 83       	st	Z, r24
    1138:	89 b7       	in	r24, 0x39	; 57
    113a:	80 61       	ori	r24, 0x10	; 16
    113c:	89 bf       	out	0x39, r24	; 57
    113e:	8a b3       	in	r24, 0x1a	; 26
    1140:	82 60       	ori	r24, 0x02	; 2
    1142:	8a bb       	out	0x1a, r24	; 26
    1144:	82 b1       	in	r24, 0x02	; 2
    1146:	8f 7d       	andi	r24, 0xDF	; 223
    1148:	82 b9       	out	0x02, r24	; 2
    114a:	8a b7       	in	r24, 0x3a	; 58
    114c:	84 60       	ori	r24, 0x04	; 4
    114e:	8a bf       	out	0x3a, r24	; 58
    1150:	80 81       	ld	r24, Z
    1152:	85 60       	ori	r24, 0x05	; 5
    1154:	80 83       	st	Z, r24
    1156:	89 b7       	in	r24, 0x39	; 57
    1158:	80 62       	ori	r24, 0x20	; 32
    115a:	89 bf       	out	0x39, r24	; 57
    115c:	8a b3       	in	r24, 0x1a	; 26
    115e:	84 60       	ori	r24, 0x04	; 4
    1160:	8a bb       	out	0x1a, r24	; 26
    1162:	82 b1       	in	r24, 0x02	; 2
    1164:	8f 7b       	andi	r24, 0xBF	; 191
    1166:	82 b9       	out	0x02, r24	; 2
    1168:	8a b7       	in	r24, 0x3a	; 58
    116a:	80 61       	ori	r24, 0x10	; 16
    116c:	8a bf       	out	0x3a, r24	; 58
    116e:	80 81       	ld	r24, Z
    1170:	85 60       	ori	r24, 0x05	; 5
    1172:	80 83       	st	Z, r24
    1174:	89 b7       	in	r24, 0x39	; 57
    1176:	80 64       	ori	r24, 0x40	; 64
    1178:	89 bf       	out	0x39, r24	; 57
    117a:	08 95       	ret

0000117c <ultrasonic_trigger>:
    117c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    1180:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    1184:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    1188:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    118c:	05 97       	sbiw	r24, 0x05	; 5
    118e:	a1 05       	cpc	r26, r1
    1190:	b1 05       	cpc	r27, r1
    1192:	80 f4       	brcc	.+32     	; 0x11b4 <ultrasonic_trigger+0x38>
    1194:	8b b3       	in	r24, 0x1b	; 27
    1196:	8e 7f       	andi	r24, 0xFE	; 254
    1198:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    119a:	85 e0       	ldi	r24, 0x05	; 5
    119c:	8a 95       	dec	r24
    119e:	f1 f7       	brne	.-4      	; 0x119c <ultrasonic_trigger+0x20>
    11a0:	00 00       	nop
    11a2:	8b b3       	in	r24, 0x1b	; 27
    11a4:	81 60       	ori	r24, 0x01	; 1
    11a6:	8b bb       	out	0x1b, r24	; 27
    11a8:	80 e5       	ldi	r24, 0x50	; 80
    11aa:	8a 95       	dec	r24
    11ac:	f1 f7       	brne	.-4      	; 0x11aa <ultrasonic_trigger+0x2e>
    11ae:	8b b3       	in	r24, 0x1b	; 27
    11b0:	8e 7f       	andi	r24, 0xFE	; 254
    11b2:	8b bb       	out	0x1b, r24	; 27
    11b4:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    11b8:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    11bc:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    11c0:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    11c4:	8c 97       	sbiw	r24, 0x2c	; 44
    11c6:	a1 05       	cpc	r26, r1
    11c8:	b1 05       	cpc	r27, r1
    11ca:	e0 f0       	brcs	.+56     	; 0x1204 <ultrasonic_trigger+0x88>
    11cc:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    11d0:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    11d4:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    11d8:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    11dc:	c1 97       	sbiw	r24, 0x31	; 49
    11de:	a1 05       	cpc	r26, r1
    11e0:	b1 05       	cpc	r27, r1
    11e2:	80 f4       	brcc	.+32     	; 0x1204 <ultrasonic_trigger+0x88>
    11e4:	8b b3       	in	r24, 0x1b	; 27
    11e6:	8d 7f       	andi	r24, 0xFD	; 253
    11e8:	8b bb       	out	0x1b, r24	; 27
    11ea:	85 e0       	ldi	r24, 0x05	; 5
    11ec:	8a 95       	dec	r24
    11ee:	f1 f7       	brne	.-4      	; 0x11ec <ultrasonic_trigger+0x70>
    11f0:	00 00       	nop
    11f2:	8b b3       	in	r24, 0x1b	; 27
    11f4:	82 60       	ori	r24, 0x02	; 2
    11f6:	8b bb       	out	0x1b, r24	; 27
    11f8:	80 e5       	ldi	r24, 0x50	; 80
    11fa:	8a 95       	dec	r24
    11fc:	f1 f7       	brne	.-4      	; 0x11fa <ultrasonic_trigger+0x7e>
    11fe:	8b b3       	in	r24, 0x1b	; 27
    1200:	8d 7f       	andi	r24, 0xFD	; 253
    1202:	8b bb       	out	0x1b, r24	; 27
    1204:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    1208:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    120c:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    1210:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    1214:	88 35       	cpi	r24, 0x58	; 88
    1216:	91 05       	cpc	r25, r1
    1218:	a1 05       	cpc	r26, r1
    121a:	b1 05       	cpc	r27, r1
    121c:	e8 f0       	brcs	.+58     	; 0x1258 <ultrasonic_trigger+0xdc>
    121e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    1222:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    1226:	a0 91 a8 01 	lds	r26, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    122a:	b0 91 a9 01 	lds	r27, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    122e:	8d 35       	cpi	r24, 0x5D	; 93
    1230:	91 05       	cpc	r25, r1
    1232:	a1 05       	cpc	r26, r1
    1234:	b1 05       	cpc	r27, r1
    1236:	80 f4       	brcc	.+32     	; 0x1258 <ultrasonic_trigger+0xdc>
    1238:	8b b3       	in	r24, 0x1b	; 27
    123a:	8b 7f       	andi	r24, 0xFB	; 251
    123c:	8b bb       	out	0x1b, r24	; 27
    123e:	85 e0       	ldi	r24, 0x05	; 5
    1240:	8a 95       	dec	r24
    1242:	f1 f7       	brne	.-4      	; 0x1240 <ultrasonic_trigger+0xc4>
    1244:	00 00       	nop
    1246:	8b b3       	in	r24, 0x1b	; 27
    1248:	84 60       	ori	r24, 0x04	; 4
    124a:	8b bb       	out	0x1b, r24	; 27
    124c:	80 e5       	ldi	r24, 0x50	; 80
    124e:	8a 95       	dec	r24
    1250:	f1 f7       	brne	.-4      	; 0x124e <ultrasonic_trigger+0xd2>
    1252:	8b b3       	in	r24, 0x1b	; 27
    1254:	8b 7f       	andi	r24, 0xFB	; 251
    1256:	8b bb       	out	0x1b, r24	; 27
    1258:	60 91 a6 01 	lds	r22, 0x01A6	; 0x8001a6 <ultrasonic_check_timer>
    125c:	70 91 a7 01 	lds	r23, 0x01A7	; 0x8001a7 <ultrasonic_check_timer+0x1>
    1260:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <ultrasonic_check_timer+0x2>
    1264:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <ultrasonic_check_timer+0x3>
    1268:	2f e5       	ldi	r18, 0x5F	; 95
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	40 e0       	ldi	r20, 0x00	; 0
    126e:	50 e0       	ldi	r21, 0x00	; 0
    1270:	d7 d1       	rcall	.+942    	; 0x1620 <__udivmodsi4>
    1272:	60 93 a6 01 	sts	0x01A6, r22	; 0x8001a6 <ultrasonic_check_timer>
    1276:	70 93 a7 01 	sts	0x01A7, r23	; 0x8001a7 <ultrasonic_check_timer+0x1>
    127a:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <ultrasonic_check_timer+0x2>
    127e:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <ultrasonic_check_timer+0x3>
    1282:	08 95       	ret

00001284 <distance_check>:
    1284:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <ultrasonic_left_distance>
    1288:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <ultrasonic_left_distance+0x1>
    128c:	9f 93       	push	r25
    128e:	8f 93       	push	r24
    1290:	8b e6       	ldi	r24, 0x6B	; 107
    1292:	91 e0       	ldi	r25, 0x01	; 1
    1294:	9f 93       	push	r25
    1296:	8f 93       	push	r24
    1298:	02 d2       	rcall	.+1028   	; 0x169e <printf>
    129a:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <ultrasonic_center_distance>
    129e:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <ultrasonic_center_distance+0x1>
    12a2:	9f 93       	push	r25
    12a4:	8f 93       	push	r24
    12a6:	8a e7       	ldi	r24, 0x7A	; 122
    12a8:	91 e0       	ldi	r25, 0x01	; 1
    12aa:	9f 93       	push	r25
    12ac:	8f 93       	push	r24
    12ae:	f7 d1       	rcall	.+1006   	; 0x169e <printf>
    12b0:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ultrasonic_right_distance>
    12b4:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ultrasonic_right_distance+0x1>
    12b8:	9f 93       	push	r25
    12ba:	8f 93       	push	r24
    12bc:	89 e8       	ldi	r24, 0x89	; 137
    12be:	91 e0       	ldi	r25, 0x01	; 1
    12c0:	9f 93       	push	r25
    12c2:	8f 93       	push	r24
    12c4:	ec d1       	rcall	.+984    	; 0x169e <printf>
    12c6:	5a df       	rcall	.-332    	; 0x117c <ultrasonic_trigger>
    12c8:	82 e0       	ldi	r24, 0x02	; 2
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <func_state+0x1>
    12d0:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <func_state>
    12d4:	8d b7       	in	r24, 0x3d	; 61
    12d6:	9e b7       	in	r25, 0x3e	; 62
    12d8:	0c 96       	adiw	r24, 0x0c	; 12
    12da:	0f b6       	in	r0, 0x3f	; 63
    12dc:	f8 94       	cli
    12de:	9e bf       	out	0x3e, r25	; 62
    12e0:	0f be       	out	0x3f, r0	; 63
    12e2:	8d bf       	out	0x3d, r24	; 61
    12e4:	08 95       	ret

000012e6 <__divsf3>:
    12e6:	0c d0       	rcall	.+24     	; 0x1300 <__divsf3x>
    12e8:	eb c0       	rjmp	.+470    	; 0x14c0 <__fp_round>
    12ea:	e3 d0       	rcall	.+454    	; 0x14b2 <__fp_pscB>
    12ec:	40 f0       	brcs	.+16     	; 0x12fe <__divsf3+0x18>
    12ee:	da d0       	rcall	.+436    	; 0x14a4 <__fp_pscA>
    12f0:	30 f0       	brcs	.+12     	; 0x12fe <__divsf3+0x18>
    12f2:	21 f4       	brne	.+8      	; 0x12fc <__divsf3+0x16>
    12f4:	5f 3f       	cpi	r21, 0xFF	; 255
    12f6:	19 f0       	breq	.+6      	; 0x12fe <__divsf3+0x18>
    12f8:	cc c0       	rjmp	.+408    	; 0x1492 <__fp_inf>
    12fa:	51 11       	cpse	r21, r1
    12fc:	15 c1       	rjmp	.+554    	; 0x1528 <__fp_szero>
    12fe:	cf c0       	rjmp	.+414    	; 0x149e <__fp_nan>

00001300 <__divsf3x>:
    1300:	f0 d0       	rcall	.+480    	; 0x14e2 <__fp_split3>
    1302:	98 f3       	brcs	.-26     	; 0x12ea <__divsf3+0x4>

00001304 <__divsf3_pse>:
    1304:	99 23       	and	r25, r25
    1306:	c9 f3       	breq	.-14     	; 0x12fa <__divsf3+0x14>
    1308:	55 23       	and	r21, r21
    130a:	b1 f3       	breq	.-20     	; 0x12f8 <__divsf3+0x12>
    130c:	95 1b       	sub	r25, r21
    130e:	55 0b       	sbc	r21, r21
    1310:	bb 27       	eor	r27, r27
    1312:	aa 27       	eor	r26, r26
    1314:	62 17       	cp	r22, r18
    1316:	73 07       	cpc	r23, r19
    1318:	84 07       	cpc	r24, r20
    131a:	38 f0       	brcs	.+14     	; 0x132a <__divsf3_pse+0x26>
    131c:	9f 5f       	subi	r25, 0xFF	; 255
    131e:	5f 4f       	sbci	r21, 0xFF	; 255
    1320:	22 0f       	add	r18, r18
    1322:	33 1f       	adc	r19, r19
    1324:	44 1f       	adc	r20, r20
    1326:	aa 1f       	adc	r26, r26
    1328:	a9 f3       	breq	.-22     	; 0x1314 <__divsf3_pse+0x10>
    132a:	33 d0       	rcall	.+102    	; 0x1392 <__divsf3_pse+0x8e>
    132c:	0e 2e       	mov	r0, r30
    132e:	3a f0       	brmi	.+14     	; 0x133e <__divsf3_pse+0x3a>
    1330:	e0 e8       	ldi	r30, 0x80	; 128
    1332:	30 d0       	rcall	.+96     	; 0x1394 <__divsf3_pse+0x90>
    1334:	91 50       	subi	r25, 0x01	; 1
    1336:	50 40       	sbci	r21, 0x00	; 0
    1338:	e6 95       	lsr	r30
    133a:	00 1c       	adc	r0, r0
    133c:	ca f7       	brpl	.-14     	; 0x1330 <__divsf3_pse+0x2c>
    133e:	29 d0       	rcall	.+82     	; 0x1392 <__divsf3_pse+0x8e>
    1340:	fe 2f       	mov	r31, r30
    1342:	27 d0       	rcall	.+78     	; 0x1392 <__divsf3_pse+0x8e>
    1344:	66 0f       	add	r22, r22
    1346:	77 1f       	adc	r23, r23
    1348:	88 1f       	adc	r24, r24
    134a:	bb 1f       	adc	r27, r27
    134c:	26 17       	cp	r18, r22
    134e:	37 07       	cpc	r19, r23
    1350:	48 07       	cpc	r20, r24
    1352:	ab 07       	cpc	r26, r27
    1354:	b0 e8       	ldi	r27, 0x80	; 128
    1356:	09 f0       	breq	.+2      	; 0x135a <__divsf3_pse+0x56>
    1358:	bb 0b       	sbc	r27, r27
    135a:	80 2d       	mov	r24, r0
    135c:	bf 01       	movw	r22, r30
    135e:	ff 27       	eor	r31, r31
    1360:	93 58       	subi	r25, 0x83	; 131
    1362:	5f 4f       	sbci	r21, 0xFF	; 255
    1364:	2a f0       	brmi	.+10     	; 0x1370 <__divsf3_pse+0x6c>
    1366:	9e 3f       	cpi	r25, 0xFE	; 254
    1368:	51 05       	cpc	r21, r1
    136a:	68 f0       	brcs	.+26     	; 0x1386 <__divsf3_pse+0x82>
    136c:	92 c0       	rjmp	.+292    	; 0x1492 <__fp_inf>
    136e:	dc c0       	rjmp	.+440    	; 0x1528 <__fp_szero>
    1370:	5f 3f       	cpi	r21, 0xFF	; 255
    1372:	ec f3       	brlt	.-6      	; 0x136e <__divsf3_pse+0x6a>
    1374:	98 3e       	cpi	r25, 0xE8	; 232
    1376:	dc f3       	brlt	.-10     	; 0x136e <__divsf3_pse+0x6a>
    1378:	86 95       	lsr	r24
    137a:	77 95       	ror	r23
    137c:	67 95       	ror	r22
    137e:	b7 95       	ror	r27
    1380:	f7 95       	ror	r31
    1382:	9f 5f       	subi	r25, 0xFF	; 255
    1384:	c9 f7       	brne	.-14     	; 0x1378 <__divsf3_pse+0x74>
    1386:	88 0f       	add	r24, r24
    1388:	91 1d       	adc	r25, r1
    138a:	96 95       	lsr	r25
    138c:	87 95       	ror	r24
    138e:	97 f9       	bld	r25, 7
    1390:	08 95       	ret
    1392:	e1 e0       	ldi	r30, 0x01	; 1
    1394:	66 0f       	add	r22, r22
    1396:	77 1f       	adc	r23, r23
    1398:	88 1f       	adc	r24, r24
    139a:	bb 1f       	adc	r27, r27
    139c:	62 17       	cp	r22, r18
    139e:	73 07       	cpc	r23, r19
    13a0:	84 07       	cpc	r24, r20
    13a2:	ba 07       	cpc	r27, r26
    13a4:	20 f0       	brcs	.+8      	; 0x13ae <__divsf3_pse+0xaa>
    13a6:	62 1b       	sub	r22, r18
    13a8:	73 0b       	sbc	r23, r19
    13aa:	84 0b       	sbc	r24, r20
    13ac:	ba 0b       	sbc	r27, r26
    13ae:	ee 1f       	adc	r30, r30
    13b0:	88 f7       	brcc	.-30     	; 0x1394 <__divsf3_pse+0x90>
    13b2:	e0 95       	com	r30
    13b4:	08 95       	ret

000013b6 <__fixsfsi>:
    13b6:	04 d0       	rcall	.+8      	; 0x13c0 <__fixunssfsi>
    13b8:	68 94       	set
    13ba:	b1 11       	cpse	r27, r1
    13bc:	b5 c0       	rjmp	.+362    	; 0x1528 <__fp_szero>
    13be:	08 95       	ret

000013c0 <__fixunssfsi>:
    13c0:	98 d0       	rcall	.+304    	; 0x14f2 <__fp_splitA>
    13c2:	88 f0       	brcs	.+34     	; 0x13e6 <__fixunssfsi+0x26>
    13c4:	9f 57       	subi	r25, 0x7F	; 127
    13c6:	90 f0       	brcs	.+36     	; 0x13ec <__fixunssfsi+0x2c>
    13c8:	b9 2f       	mov	r27, r25
    13ca:	99 27       	eor	r25, r25
    13cc:	b7 51       	subi	r27, 0x17	; 23
    13ce:	a0 f0       	brcs	.+40     	; 0x13f8 <__fixunssfsi+0x38>
    13d0:	d1 f0       	breq	.+52     	; 0x1406 <__fixunssfsi+0x46>
    13d2:	66 0f       	add	r22, r22
    13d4:	77 1f       	adc	r23, r23
    13d6:	88 1f       	adc	r24, r24
    13d8:	99 1f       	adc	r25, r25
    13da:	1a f0       	brmi	.+6      	; 0x13e2 <__fixunssfsi+0x22>
    13dc:	ba 95       	dec	r27
    13de:	c9 f7       	brne	.-14     	; 0x13d2 <__fixunssfsi+0x12>
    13e0:	12 c0       	rjmp	.+36     	; 0x1406 <__fixunssfsi+0x46>
    13e2:	b1 30       	cpi	r27, 0x01	; 1
    13e4:	81 f0       	breq	.+32     	; 0x1406 <__fixunssfsi+0x46>
    13e6:	9f d0       	rcall	.+318    	; 0x1526 <__fp_zero>
    13e8:	b1 e0       	ldi	r27, 0x01	; 1
    13ea:	08 95       	ret
    13ec:	9c c0       	rjmp	.+312    	; 0x1526 <__fp_zero>
    13ee:	67 2f       	mov	r22, r23
    13f0:	78 2f       	mov	r23, r24
    13f2:	88 27       	eor	r24, r24
    13f4:	b8 5f       	subi	r27, 0xF8	; 248
    13f6:	39 f0       	breq	.+14     	; 0x1406 <__fixunssfsi+0x46>
    13f8:	b9 3f       	cpi	r27, 0xF9	; 249
    13fa:	cc f3       	brlt	.-14     	; 0x13ee <__fixunssfsi+0x2e>
    13fc:	86 95       	lsr	r24
    13fe:	77 95       	ror	r23
    1400:	67 95       	ror	r22
    1402:	b3 95       	inc	r27
    1404:	d9 f7       	brne	.-10     	; 0x13fc <__fixunssfsi+0x3c>
    1406:	3e f4       	brtc	.+14     	; 0x1416 <__fixunssfsi+0x56>
    1408:	90 95       	com	r25
    140a:	80 95       	com	r24
    140c:	70 95       	com	r23
    140e:	61 95       	neg	r22
    1410:	7f 4f       	sbci	r23, 0xFF	; 255
    1412:	8f 4f       	sbci	r24, 0xFF	; 255
    1414:	9f 4f       	sbci	r25, 0xFF	; 255
    1416:	08 95       	ret

00001418 <__floatunsisf>:
    1418:	e8 94       	clt
    141a:	09 c0       	rjmp	.+18     	; 0x142e <__floatsisf+0x12>

0000141c <__floatsisf>:
    141c:	97 fb       	bst	r25, 7
    141e:	3e f4       	brtc	.+14     	; 0x142e <__floatsisf+0x12>
    1420:	90 95       	com	r25
    1422:	80 95       	com	r24
    1424:	70 95       	com	r23
    1426:	61 95       	neg	r22
    1428:	7f 4f       	sbci	r23, 0xFF	; 255
    142a:	8f 4f       	sbci	r24, 0xFF	; 255
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	99 23       	and	r25, r25
    1430:	a9 f0       	breq	.+42     	; 0x145c <__floatsisf+0x40>
    1432:	f9 2f       	mov	r31, r25
    1434:	96 e9       	ldi	r25, 0x96	; 150
    1436:	bb 27       	eor	r27, r27
    1438:	93 95       	inc	r25
    143a:	f6 95       	lsr	r31
    143c:	87 95       	ror	r24
    143e:	77 95       	ror	r23
    1440:	67 95       	ror	r22
    1442:	b7 95       	ror	r27
    1444:	f1 11       	cpse	r31, r1
    1446:	f8 cf       	rjmp	.-16     	; 0x1438 <__floatsisf+0x1c>
    1448:	fa f4       	brpl	.+62     	; 0x1488 <__floatsisf+0x6c>
    144a:	bb 0f       	add	r27, r27
    144c:	11 f4       	brne	.+4      	; 0x1452 <__floatsisf+0x36>
    144e:	60 ff       	sbrs	r22, 0
    1450:	1b c0       	rjmp	.+54     	; 0x1488 <__floatsisf+0x6c>
    1452:	6f 5f       	subi	r22, 0xFF	; 255
    1454:	7f 4f       	sbci	r23, 0xFF	; 255
    1456:	8f 4f       	sbci	r24, 0xFF	; 255
    1458:	9f 4f       	sbci	r25, 0xFF	; 255
    145a:	16 c0       	rjmp	.+44     	; 0x1488 <__floatsisf+0x6c>
    145c:	88 23       	and	r24, r24
    145e:	11 f0       	breq	.+4      	; 0x1464 <__floatsisf+0x48>
    1460:	96 e9       	ldi	r25, 0x96	; 150
    1462:	11 c0       	rjmp	.+34     	; 0x1486 <__floatsisf+0x6a>
    1464:	77 23       	and	r23, r23
    1466:	21 f0       	breq	.+8      	; 0x1470 <__floatsisf+0x54>
    1468:	9e e8       	ldi	r25, 0x8E	; 142
    146a:	87 2f       	mov	r24, r23
    146c:	76 2f       	mov	r23, r22
    146e:	05 c0       	rjmp	.+10     	; 0x147a <__floatsisf+0x5e>
    1470:	66 23       	and	r22, r22
    1472:	71 f0       	breq	.+28     	; 0x1490 <__floatsisf+0x74>
    1474:	96 e8       	ldi	r25, 0x86	; 134
    1476:	86 2f       	mov	r24, r22
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	2a f0       	brmi	.+10     	; 0x1488 <__floatsisf+0x6c>
    147e:	9a 95       	dec	r25
    1480:	66 0f       	add	r22, r22
    1482:	77 1f       	adc	r23, r23
    1484:	88 1f       	adc	r24, r24
    1486:	da f7       	brpl	.-10     	; 0x147e <__floatsisf+0x62>
    1488:	88 0f       	add	r24, r24
    148a:	96 95       	lsr	r25
    148c:	87 95       	ror	r24
    148e:	97 f9       	bld	r25, 7
    1490:	08 95       	ret

00001492 <__fp_inf>:
    1492:	97 f9       	bld	r25, 7
    1494:	9f 67       	ori	r25, 0x7F	; 127
    1496:	80 e8       	ldi	r24, 0x80	; 128
    1498:	70 e0       	ldi	r23, 0x00	; 0
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	08 95       	ret

0000149e <__fp_nan>:
    149e:	9f ef       	ldi	r25, 0xFF	; 255
    14a0:	80 ec       	ldi	r24, 0xC0	; 192
    14a2:	08 95       	ret

000014a4 <__fp_pscA>:
    14a4:	00 24       	eor	r0, r0
    14a6:	0a 94       	dec	r0
    14a8:	16 16       	cp	r1, r22
    14aa:	17 06       	cpc	r1, r23
    14ac:	18 06       	cpc	r1, r24
    14ae:	09 06       	cpc	r0, r25
    14b0:	08 95       	ret

000014b2 <__fp_pscB>:
    14b2:	00 24       	eor	r0, r0
    14b4:	0a 94       	dec	r0
    14b6:	12 16       	cp	r1, r18
    14b8:	13 06       	cpc	r1, r19
    14ba:	14 06       	cpc	r1, r20
    14bc:	05 06       	cpc	r0, r21
    14be:	08 95       	ret

000014c0 <__fp_round>:
    14c0:	09 2e       	mov	r0, r25
    14c2:	03 94       	inc	r0
    14c4:	00 0c       	add	r0, r0
    14c6:	11 f4       	brne	.+4      	; 0x14cc <__fp_round+0xc>
    14c8:	88 23       	and	r24, r24
    14ca:	52 f0       	brmi	.+20     	; 0x14e0 <__fp_round+0x20>
    14cc:	bb 0f       	add	r27, r27
    14ce:	40 f4       	brcc	.+16     	; 0x14e0 <__fp_round+0x20>
    14d0:	bf 2b       	or	r27, r31
    14d2:	11 f4       	brne	.+4      	; 0x14d8 <__fp_round+0x18>
    14d4:	60 ff       	sbrs	r22, 0
    14d6:	04 c0       	rjmp	.+8      	; 0x14e0 <__fp_round+0x20>
    14d8:	6f 5f       	subi	r22, 0xFF	; 255
    14da:	7f 4f       	sbci	r23, 0xFF	; 255
    14dc:	8f 4f       	sbci	r24, 0xFF	; 255
    14de:	9f 4f       	sbci	r25, 0xFF	; 255
    14e0:	08 95       	ret

000014e2 <__fp_split3>:
    14e2:	57 fd       	sbrc	r21, 7
    14e4:	90 58       	subi	r25, 0x80	; 128
    14e6:	44 0f       	add	r20, r20
    14e8:	55 1f       	adc	r21, r21
    14ea:	59 f0       	breq	.+22     	; 0x1502 <__fp_splitA+0x10>
    14ec:	5f 3f       	cpi	r21, 0xFF	; 255
    14ee:	71 f0       	breq	.+28     	; 0x150c <__fp_splitA+0x1a>
    14f0:	47 95       	ror	r20

000014f2 <__fp_splitA>:
    14f2:	88 0f       	add	r24, r24
    14f4:	97 fb       	bst	r25, 7
    14f6:	99 1f       	adc	r25, r25
    14f8:	61 f0       	breq	.+24     	; 0x1512 <__fp_splitA+0x20>
    14fa:	9f 3f       	cpi	r25, 0xFF	; 255
    14fc:	79 f0       	breq	.+30     	; 0x151c <__fp_splitA+0x2a>
    14fe:	87 95       	ror	r24
    1500:	08 95       	ret
    1502:	12 16       	cp	r1, r18
    1504:	13 06       	cpc	r1, r19
    1506:	14 06       	cpc	r1, r20
    1508:	55 1f       	adc	r21, r21
    150a:	f2 cf       	rjmp	.-28     	; 0x14f0 <__fp_split3+0xe>
    150c:	46 95       	lsr	r20
    150e:	f1 df       	rcall	.-30     	; 0x14f2 <__fp_splitA>
    1510:	08 c0       	rjmp	.+16     	; 0x1522 <__fp_splitA+0x30>
    1512:	16 16       	cp	r1, r22
    1514:	17 06       	cpc	r1, r23
    1516:	18 06       	cpc	r1, r24
    1518:	99 1f       	adc	r25, r25
    151a:	f1 cf       	rjmp	.-30     	; 0x14fe <__fp_splitA+0xc>
    151c:	86 95       	lsr	r24
    151e:	71 05       	cpc	r23, r1
    1520:	61 05       	cpc	r22, r1
    1522:	08 94       	sec
    1524:	08 95       	ret

00001526 <__fp_zero>:
    1526:	e8 94       	clt

00001528 <__fp_szero>:
    1528:	bb 27       	eor	r27, r27
    152a:	66 27       	eor	r22, r22
    152c:	77 27       	eor	r23, r23
    152e:	cb 01       	movw	r24, r22
    1530:	97 f9       	bld	r25, 7
    1532:	08 95       	ret

00001534 <__mulsf3>:
    1534:	0b d0       	rcall	.+22     	; 0x154c <__mulsf3x>
    1536:	c4 cf       	rjmp	.-120    	; 0x14c0 <__fp_round>
    1538:	b5 df       	rcall	.-150    	; 0x14a4 <__fp_pscA>
    153a:	28 f0       	brcs	.+10     	; 0x1546 <__mulsf3+0x12>
    153c:	ba df       	rcall	.-140    	; 0x14b2 <__fp_pscB>
    153e:	18 f0       	brcs	.+6      	; 0x1546 <__mulsf3+0x12>
    1540:	95 23       	and	r25, r21
    1542:	09 f0       	breq	.+2      	; 0x1546 <__mulsf3+0x12>
    1544:	a6 cf       	rjmp	.-180    	; 0x1492 <__fp_inf>
    1546:	ab cf       	rjmp	.-170    	; 0x149e <__fp_nan>
    1548:	11 24       	eor	r1, r1
    154a:	ee cf       	rjmp	.-36     	; 0x1528 <__fp_szero>

0000154c <__mulsf3x>:
    154c:	ca df       	rcall	.-108    	; 0x14e2 <__fp_split3>
    154e:	a0 f3       	brcs	.-24     	; 0x1538 <__mulsf3+0x4>

00001550 <__mulsf3_pse>:
    1550:	95 9f       	mul	r25, r21
    1552:	d1 f3       	breq	.-12     	; 0x1548 <__mulsf3+0x14>
    1554:	95 0f       	add	r25, r21
    1556:	50 e0       	ldi	r21, 0x00	; 0
    1558:	55 1f       	adc	r21, r21
    155a:	62 9f       	mul	r22, r18
    155c:	f0 01       	movw	r30, r0
    155e:	72 9f       	mul	r23, r18
    1560:	bb 27       	eor	r27, r27
    1562:	f0 0d       	add	r31, r0
    1564:	b1 1d       	adc	r27, r1
    1566:	63 9f       	mul	r22, r19
    1568:	aa 27       	eor	r26, r26
    156a:	f0 0d       	add	r31, r0
    156c:	b1 1d       	adc	r27, r1
    156e:	aa 1f       	adc	r26, r26
    1570:	64 9f       	mul	r22, r20
    1572:	66 27       	eor	r22, r22
    1574:	b0 0d       	add	r27, r0
    1576:	a1 1d       	adc	r26, r1
    1578:	66 1f       	adc	r22, r22
    157a:	82 9f       	mul	r24, r18
    157c:	22 27       	eor	r18, r18
    157e:	b0 0d       	add	r27, r0
    1580:	a1 1d       	adc	r26, r1
    1582:	62 1f       	adc	r22, r18
    1584:	73 9f       	mul	r23, r19
    1586:	b0 0d       	add	r27, r0
    1588:	a1 1d       	adc	r26, r1
    158a:	62 1f       	adc	r22, r18
    158c:	83 9f       	mul	r24, r19
    158e:	a0 0d       	add	r26, r0
    1590:	61 1d       	adc	r22, r1
    1592:	22 1f       	adc	r18, r18
    1594:	74 9f       	mul	r23, r20
    1596:	33 27       	eor	r19, r19
    1598:	a0 0d       	add	r26, r0
    159a:	61 1d       	adc	r22, r1
    159c:	23 1f       	adc	r18, r19
    159e:	84 9f       	mul	r24, r20
    15a0:	60 0d       	add	r22, r0
    15a2:	21 1d       	adc	r18, r1
    15a4:	82 2f       	mov	r24, r18
    15a6:	76 2f       	mov	r23, r22
    15a8:	6a 2f       	mov	r22, r26
    15aa:	11 24       	eor	r1, r1
    15ac:	9f 57       	subi	r25, 0x7F	; 127
    15ae:	50 40       	sbci	r21, 0x00	; 0
    15b0:	8a f0       	brmi	.+34     	; 0x15d4 <__mulsf3_pse+0x84>
    15b2:	e1 f0       	breq	.+56     	; 0x15ec <__mulsf3_pse+0x9c>
    15b4:	88 23       	and	r24, r24
    15b6:	4a f0       	brmi	.+18     	; 0x15ca <__mulsf3_pse+0x7a>
    15b8:	ee 0f       	add	r30, r30
    15ba:	ff 1f       	adc	r31, r31
    15bc:	bb 1f       	adc	r27, r27
    15be:	66 1f       	adc	r22, r22
    15c0:	77 1f       	adc	r23, r23
    15c2:	88 1f       	adc	r24, r24
    15c4:	91 50       	subi	r25, 0x01	; 1
    15c6:	50 40       	sbci	r21, 0x00	; 0
    15c8:	a9 f7       	brne	.-22     	; 0x15b4 <__mulsf3_pse+0x64>
    15ca:	9e 3f       	cpi	r25, 0xFE	; 254
    15cc:	51 05       	cpc	r21, r1
    15ce:	70 f0       	brcs	.+28     	; 0x15ec <__mulsf3_pse+0x9c>
    15d0:	60 cf       	rjmp	.-320    	; 0x1492 <__fp_inf>
    15d2:	aa cf       	rjmp	.-172    	; 0x1528 <__fp_szero>
    15d4:	5f 3f       	cpi	r21, 0xFF	; 255
    15d6:	ec f3       	brlt	.-6      	; 0x15d2 <__mulsf3_pse+0x82>
    15d8:	98 3e       	cpi	r25, 0xE8	; 232
    15da:	dc f3       	brlt	.-10     	; 0x15d2 <__mulsf3_pse+0x82>
    15dc:	86 95       	lsr	r24
    15de:	77 95       	ror	r23
    15e0:	67 95       	ror	r22
    15e2:	b7 95       	ror	r27
    15e4:	f7 95       	ror	r31
    15e6:	e7 95       	ror	r30
    15e8:	9f 5f       	subi	r25, 0xFF	; 255
    15ea:	c1 f7       	brne	.-16     	; 0x15dc <__mulsf3_pse+0x8c>
    15ec:	fe 2b       	or	r31, r30
    15ee:	88 0f       	add	r24, r24
    15f0:	91 1d       	adc	r25, r1
    15f2:	96 95       	lsr	r25
    15f4:	87 95       	ror	r24
    15f6:	97 f9       	bld	r25, 7
    15f8:	08 95       	ret

000015fa <__divmodhi4>:
    15fa:	97 fb       	bst	r25, 7
    15fc:	07 2e       	mov	r0, r23
    15fe:	16 f4       	brtc	.+4      	; 0x1604 <__divmodhi4+0xa>
    1600:	00 94       	com	r0
    1602:	06 d0       	rcall	.+12     	; 0x1610 <__divmodhi4_neg1>
    1604:	77 fd       	sbrc	r23, 7
    1606:	08 d0       	rcall	.+16     	; 0x1618 <__divmodhi4_neg2>
    1608:	36 d0       	rcall	.+108    	; 0x1676 <__udivmodhi4>
    160a:	07 fc       	sbrc	r0, 7
    160c:	05 d0       	rcall	.+10     	; 0x1618 <__divmodhi4_neg2>
    160e:	3e f4       	brtc	.+14     	; 0x161e <__divmodhi4_exit>

00001610 <__divmodhi4_neg1>:
    1610:	90 95       	com	r25
    1612:	81 95       	neg	r24
    1614:	9f 4f       	sbci	r25, 0xFF	; 255
    1616:	08 95       	ret

00001618 <__divmodhi4_neg2>:
    1618:	70 95       	com	r23
    161a:	61 95       	neg	r22
    161c:	7f 4f       	sbci	r23, 0xFF	; 255

0000161e <__divmodhi4_exit>:
    161e:	08 95       	ret

00001620 <__udivmodsi4>:
    1620:	a1 e2       	ldi	r26, 0x21	; 33
    1622:	1a 2e       	mov	r1, r26
    1624:	aa 1b       	sub	r26, r26
    1626:	bb 1b       	sub	r27, r27
    1628:	fd 01       	movw	r30, r26
    162a:	0d c0       	rjmp	.+26     	; 0x1646 <__udivmodsi4_ep>

0000162c <__udivmodsi4_loop>:
    162c:	aa 1f       	adc	r26, r26
    162e:	bb 1f       	adc	r27, r27
    1630:	ee 1f       	adc	r30, r30
    1632:	ff 1f       	adc	r31, r31
    1634:	a2 17       	cp	r26, r18
    1636:	b3 07       	cpc	r27, r19
    1638:	e4 07       	cpc	r30, r20
    163a:	f5 07       	cpc	r31, r21
    163c:	20 f0       	brcs	.+8      	; 0x1646 <__udivmodsi4_ep>
    163e:	a2 1b       	sub	r26, r18
    1640:	b3 0b       	sbc	r27, r19
    1642:	e4 0b       	sbc	r30, r20
    1644:	f5 0b       	sbc	r31, r21

00001646 <__udivmodsi4_ep>:
    1646:	66 1f       	adc	r22, r22
    1648:	77 1f       	adc	r23, r23
    164a:	88 1f       	adc	r24, r24
    164c:	99 1f       	adc	r25, r25
    164e:	1a 94       	dec	r1
    1650:	69 f7       	brne	.-38     	; 0x162c <__udivmodsi4_loop>
    1652:	60 95       	com	r22
    1654:	70 95       	com	r23
    1656:	80 95       	com	r24
    1658:	90 95       	com	r25
    165a:	9b 01       	movw	r18, r22
    165c:	ac 01       	movw	r20, r24
    165e:	bd 01       	movw	r22, r26
    1660:	cf 01       	movw	r24, r30
    1662:	08 95       	ret

00001664 <__tablejump2__>:
    1664:	ee 0f       	add	r30, r30
    1666:	ff 1f       	adc	r31, r31
    1668:	00 24       	eor	r0, r0
    166a:	00 1c       	adc	r0, r0
    166c:	0b be       	out	0x3b, r0	; 59
    166e:	07 90       	elpm	r0, Z+
    1670:	f6 91       	elpm	r31, Z
    1672:	e0 2d       	mov	r30, r0
    1674:	09 94       	ijmp

00001676 <__udivmodhi4>:
    1676:	aa 1b       	sub	r26, r26
    1678:	bb 1b       	sub	r27, r27
    167a:	51 e1       	ldi	r21, 0x11	; 17
    167c:	07 c0       	rjmp	.+14     	; 0x168c <__udivmodhi4_ep>

0000167e <__udivmodhi4_loop>:
    167e:	aa 1f       	adc	r26, r26
    1680:	bb 1f       	adc	r27, r27
    1682:	a6 17       	cp	r26, r22
    1684:	b7 07       	cpc	r27, r23
    1686:	10 f0       	brcs	.+4      	; 0x168c <__udivmodhi4_ep>
    1688:	a6 1b       	sub	r26, r22
    168a:	b7 0b       	sbc	r27, r23

0000168c <__udivmodhi4_ep>:
    168c:	88 1f       	adc	r24, r24
    168e:	99 1f       	adc	r25, r25
    1690:	5a 95       	dec	r21
    1692:	a9 f7       	brne	.-22     	; 0x167e <__udivmodhi4_loop>
    1694:	80 95       	com	r24
    1696:	90 95       	com	r25
    1698:	bc 01       	movw	r22, r24
    169a:	cd 01       	movw	r24, r26
    169c:	08 95       	ret

0000169e <printf>:
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	cd b7       	in	r28, 0x3d	; 61
    16a4:	de b7       	in	r29, 0x3e	; 62
    16a6:	ae 01       	movw	r20, r28
    16a8:	4b 5f       	subi	r20, 0xFB	; 251
    16aa:	5f 4f       	sbci	r21, 0xFF	; 255
    16ac:	fa 01       	movw	r30, r20
    16ae:	61 91       	ld	r22, Z+
    16b0:	71 91       	ld	r23, Z+
    16b2:	af 01       	movw	r20, r30
    16b4:	80 91 03 08 	lds	r24, 0x0803	; 0x800803 <__iob+0x2>
    16b8:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__iob+0x3>
    16bc:	31 d0       	rcall	.+98     	; 0x1720 <vfprintf>
    16be:	df 91       	pop	r29
    16c0:	cf 91       	pop	r28
    16c2:	08 95       	ret

000016c4 <sprintf>:
    16c4:	0f 93       	push	r16
    16c6:	1f 93       	push	r17
    16c8:	cf 93       	push	r28
    16ca:	df 93       	push	r29
    16cc:	cd b7       	in	r28, 0x3d	; 61
    16ce:	de b7       	in	r29, 0x3e	; 62
    16d0:	2e 97       	sbiw	r28, 0x0e	; 14
    16d2:	0f b6       	in	r0, 0x3f	; 63
    16d4:	f8 94       	cli
    16d6:	de bf       	out	0x3e, r29	; 62
    16d8:	0f be       	out	0x3f, r0	; 63
    16da:	cd bf       	out	0x3d, r28	; 61
    16dc:	0d 89       	ldd	r16, Y+21	; 0x15
    16de:	1e 89       	ldd	r17, Y+22	; 0x16
    16e0:	86 e0       	ldi	r24, 0x06	; 6
    16e2:	8c 83       	std	Y+4, r24	; 0x04
    16e4:	1a 83       	std	Y+2, r17	; 0x02
    16e6:	09 83       	std	Y+1, r16	; 0x01
    16e8:	8f ef       	ldi	r24, 0xFF	; 255
    16ea:	9f e7       	ldi	r25, 0x7F	; 127
    16ec:	9e 83       	std	Y+6, r25	; 0x06
    16ee:	8d 83       	std	Y+5, r24	; 0x05
    16f0:	ae 01       	movw	r20, r28
    16f2:	47 5e       	subi	r20, 0xE7	; 231
    16f4:	5f 4f       	sbci	r21, 0xFF	; 255
    16f6:	6f 89       	ldd	r22, Y+23	; 0x17
    16f8:	78 8d       	ldd	r23, Y+24	; 0x18
    16fa:	ce 01       	movw	r24, r28
    16fc:	01 96       	adiw	r24, 0x01	; 1
    16fe:	10 d0       	rcall	.+32     	; 0x1720 <vfprintf>
    1700:	ef 81       	ldd	r30, Y+7	; 0x07
    1702:	f8 85       	ldd	r31, Y+8	; 0x08
    1704:	e0 0f       	add	r30, r16
    1706:	f1 1f       	adc	r31, r17
    1708:	10 82       	st	Z, r1
    170a:	2e 96       	adiw	r28, 0x0e	; 14
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
    1716:	df 91       	pop	r29
    1718:	cf 91       	pop	r28
    171a:	1f 91       	pop	r17
    171c:	0f 91       	pop	r16
    171e:	08 95       	ret

00001720 <vfprintf>:
    1720:	2f 92       	push	r2
    1722:	3f 92       	push	r3
    1724:	4f 92       	push	r4
    1726:	5f 92       	push	r5
    1728:	6f 92       	push	r6
    172a:	7f 92       	push	r7
    172c:	8f 92       	push	r8
    172e:	9f 92       	push	r9
    1730:	af 92       	push	r10
    1732:	bf 92       	push	r11
    1734:	cf 92       	push	r12
    1736:	df 92       	push	r13
    1738:	ef 92       	push	r14
    173a:	ff 92       	push	r15
    173c:	0f 93       	push	r16
    173e:	1f 93       	push	r17
    1740:	cf 93       	push	r28
    1742:	df 93       	push	r29
    1744:	cd b7       	in	r28, 0x3d	; 61
    1746:	de b7       	in	r29, 0x3e	; 62
    1748:	2b 97       	sbiw	r28, 0x0b	; 11
    174a:	0f b6       	in	r0, 0x3f	; 63
    174c:	f8 94       	cli
    174e:	de bf       	out	0x3e, r29	; 62
    1750:	0f be       	out	0x3f, r0	; 63
    1752:	cd bf       	out	0x3d, r28	; 61
    1754:	6c 01       	movw	r12, r24
    1756:	7b 01       	movw	r14, r22
    1758:	8a 01       	movw	r16, r20
    175a:	fc 01       	movw	r30, r24
    175c:	17 82       	std	Z+7, r1	; 0x07
    175e:	16 82       	std	Z+6, r1	; 0x06
    1760:	83 81       	ldd	r24, Z+3	; 0x03
    1762:	81 ff       	sbrs	r24, 1
    1764:	bf c1       	rjmp	.+894    	; 0x1ae4 <vfprintf+0x3c4>
    1766:	ce 01       	movw	r24, r28
    1768:	01 96       	adiw	r24, 0x01	; 1
    176a:	3c 01       	movw	r6, r24
    176c:	f6 01       	movw	r30, r12
    176e:	93 81       	ldd	r25, Z+3	; 0x03
    1770:	f7 01       	movw	r30, r14
    1772:	93 fd       	sbrc	r25, 3
    1774:	85 91       	lpm	r24, Z+
    1776:	93 ff       	sbrs	r25, 3
    1778:	81 91       	ld	r24, Z+
    177a:	7f 01       	movw	r14, r30
    177c:	88 23       	and	r24, r24
    177e:	09 f4       	brne	.+2      	; 0x1782 <vfprintf+0x62>
    1780:	ad c1       	rjmp	.+858    	; 0x1adc <vfprintf+0x3bc>
    1782:	85 32       	cpi	r24, 0x25	; 37
    1784:	39 f4       	brne	.+14     	; 0x1794 <vfprintf+0x74>
    1786:	93 fd       	sbrc	r25, 3
    1788:	85 91       	lpm	r24, Z+
    178a:	93 ff       	sbrs	r25, 3
    178c:	81 91       	ld	r24, Z+
    178e:	7f 01       	movw	r14, r30
    1790:	85 32       	cpi	r24, 0x25	; 37
    1792:	21 f4       	brne	.+8      	; 0x179c <vfprintf+0x7c>
    1794:	b6 01       	movw	r22, r12
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	d6 d1       	rcall	.+940    	; 0x1b46 <fputc>
    179a:	e8 cf       	rjmp	.-48     	; 0x176c <vfprintf+0x4c>
    179c:	91 2c       	mov	r9, r1
    179e:	21 2c       	mov	r2, r1
    17a0:	31 2c       	mov	r3, r1
    17a2:	ff e1       	ldi	r31, 0x1F	; 31
    17a4:	f3 15       	cp	r31, r3
    17a6:	d8 f0       	brcs	.+54     	; 0x17de <vfprintf+0xbe>
    17a8:	8b 32       	cpi	r24, 0x2B	; 43
    17aa:	79 f0       	breq	.+30     	; 0x17ca <vfprintf+0xaa>
    17ac:	38 f4       	brcc	.+14     	; 0x17bc <vfprintf+0x9c>
    17ae:	80 32       	cpi	r24, 0x20	; 32
    17b0:	79 f0       	breq	.+30     	; 0x17d0 <vfprintf+0xb0>
    17b2:	83 32       	cpi	r24, 0x23	; 35
    17b4:	a1 f4       	brne	.+40     	; 0x17de <vfprintf+0xbe>
    17b6:	23 2d       	mov	r18, r3
    17b8:	20 61       	ori	r18, 0x10	; 16
    17ba:	1d c0       	rjmp	.+58     	; 0x17f6 <vfprintf+0xd6>
    17bc:	8d 32       	cpi	r24, 0x2D	; 45
    17be:	61 f0       	breq	.+24     	; 0x17d8 <vfprintf+0xb8>
    17c0:	80 33       	cpi	r24, 0x30	; 48
    17c2:	69 f4       	brne	.+26     	; 0x17de <vfprintf+0xbe>
    17c4:	23 2d       	mov	r18, r3
    17c6:	21 60       	ori	r18, 0x01	; 1
    17c8:	16 c0       	rjmp	.+44     	; 0x17f6 <vfprintf+0xd6>
    17ca:	83 2d       	mov	r24, r3
    17cc:	82 60       	ori	r24, 0x02	; 2
    17ce:	38 2e       	mov	r3, r24
    17d0:	e3 2d       	mov	r30, r3
    17d2:	e4 60       	ori	r30, 0x04	; 4
    17d4:	3e 2e       	mov	r3, r30
    17d6:	2a c0       	rjmp	.+84     	; 0x182c <vfprintf+0x10c>
    17d8:	f3 2d       	mov	r31, r3
    17da:	f8 60       	ori	r31, 0x08	; 8
    17dc:	1d c0       	rjmp	.+58     	; 0x1818 <vfprintf+0xf8>
    17de:	37 fc       	sbrc	r3, 7
    17e0:	2d c0       	rjmp	.+90     	; 0x183c <vfprintf+0x11c>
    17e2:	20 ed       	ldi	r18, 0xD0	; 208
    17e4:	28 0f       	add	r18, r24
    17e6:	2a 30       	cpi	r18, 0x0A	; 10
    17e8:	40 f0       	brcs	.+16     	; 0x17fa <vfprintf+0xda>
    17ea:	8e 32       	cpi	r24, 0x2E	; 46
    17ec:	b9 f4       	brne	.+46     	; 0x181c <vfprintf+0xfc>
    17ee:	36 fc       	sbrc	r3, 6
    17f0:	75 c1       	rjmp	.+746    	; 0x1adc <vfprintf+0x3bc>
    17f2:	23 2d       	mov	r18, r3
    17f4:	20 64       	ori	r18, 0x40	; 64
    17f6:	32 2e       	mov	r3, r18
    17f8:	19 c0       	rjmp	.+50     	; 0x182c <vfprintf+0x10c>
    17fa:	36 fe       	sbrs	r3, 6
    17fc:	06 c0       	rjmp	.+12     	; 0x180a <vfprintf+0xea>
    17fe:	8a e0       	ldi	r24, 0x0A	; 10
    1800:	98 9e       	mul	r9, r24
    1802:	20 0d       	add	r18, r0
    1804:	11 24       	eor	r1, r1
    1806:	92 2e       	mov	r9, r18
    1808:	11 c0       	rjmp	.+34     	; 0x182c <vfprintf+0x10c>
    180a:	ea e0       	ldi	r30, 0x0A	; 10
    180c:	2e 9e       	mul	r2, r30
    180e:	20 0d       	add	r18, r0
    1810:	11 24       	eor	r1, r1
    1812:	22 2e       	mov	r2, r18
    1814:	f3 2d       	mov	r31, r3
    1816:	f0 62       	ori	r31, 0x20	; 32
    1818:	3f 2e       	mov	r3, r31
    181a:	08 c0       	rjmp	.+16     	; 0x182c <vfprintf+0x10c>
    181c:	8c 36       	cpi	r24, 0x6C	; 108
    181e:	21 f4       	brne	.+8      	; 0x1828 <vfprintf+0x108>
    1820:	83 2d       	mov	r24, r3
    1822:	80 68       	ori	r24, 0x80	; 128
    1824:	38 2e       	mov	r3, r24
    1826:	02 c0       	rjmp	.+4      	; 0x182c <vfprintf+0x10c>
    1828:	88 36       	cpi	r24, 0x68	; 104
    182a:	41 f4       	brne	.+16     	; 0x183c <vfprintf+0x11c>
    182c:	f7 01       	movw	r30, r14
    182e:	93 fd       	sbrc	r25, 3
    1830:	85 91       	lpm	r24, Z+
    1832:	93 ff       	sbrs	r25, 3
    1834:	81 91       	ld	r24, Z+
    1836:	7f 01       	movw	r14, r30
    1838:	81 11       	cpse	r24, r1
    183a:	b3 cf       	rjmp	.-154    	; 0x17a2 <vfprintf+0x82>
    183c:	98 2f       	mov	r25, r24
    183e:	9f 7d       	andi	r25, 0xDF	; 223
    1840:	95 54       	subi	r25, 0x45	; 69
    1842:	93 30       	cpi	r25, 0x03	; 3
    1844:	28 f4       	brcc	.+10     	; 0x1850 <vfprintf+0x130>
    1846:	0c 5f       	subi	r16, 0xFC	; 252
    1848:	1f 4f       	sbci	r17, 0xFF	; 255
    184a:	9f e3       	ldi	r25, 0x3F	; 63
    184c:	99 83       	std	Y+1, r25	; 0x01
    184e:	0d c0       	rjmp	.+26     	; 0x186a <vfprintf+0x14a>
    1850:	83 36       	cpi	r24, 0x63	; 99
    1852:	31 f0       	breq	.+12     	; 0x1860 <vfprintf+0x140>
    1854:	83 37       	cpi	r24, 0x73	; 115
    1856:	71 f0       	breq	.+28     	; 0x1874 <vfprintf+0x154>
    1858:	83 35       	cpi	r24, 0x53	; 83
    185a:	09 f0       	breq	.+2      	; 0x185e <vfprintf+0x13e>
    185c:	55 c0       	rjmp	.+170    	; 0x1908 <vfprintf+0x1e8>
    185e:	20 c0       	rjmp	.+64     	; 0x18a0 <vfprintf+0x180>
    1860:	f8 01       	movw	r30, r16
    1862:	80 81       	ld	r24, Z
    1864:	89 83       	std	Y+1, r24	; 0x01
    1866:	0e 5f       	subi	r16, 0xFE	; 254
    1868:	1f 4f       	sbci	r17, 0xFF	; 255
    186a:	88 24       	eor	r8, r8
    186c:	83 94       	inc	r8
    186e:	91 2c       	mov	r9, r1
    1870:	53 01       	movw	r10, r6
    1872:	12 c0       	rjmp	.+36     	; 0x1898 <vfprintf+0x178>
    1874:	28 01       	movw	r4, r16
    1876:	f2 e0       	ldi	r31, 0x02	; 2
    1878:	4f 0e       	add	r4, r31
    187a:	51 1c       	adc	r5, r1
    187c:	f8 01       	movw	r30, r16
    187e:	a0 80       	ld	r10, Z
    1880:	b1 80       	ldd	r11, Z+1	; 0x01
    1882:	36 fe       	sbrs	r3, 6
    1884:	03 c0       	rjmp	.+6      	; 0x188c <vfprintf+0x16c>
    1886:	69 2d       	mov	r22, r9
    1888:	70 e0       	ldi	r23, 0x00	; 0
    188a:	02 c0       	rjmp	.+4      	; 0x1890 <vfprintf+0x170>
    188c:	6f ef       	ldi	r22, 0xFF	; 255
    188e:	7f ef       	ldi	r23, 0xFF	; 255
    1890:	c5 01       	movw	r24, r10
    1892:	4e d1       	rcall	.+668    	; 0x1b30 <strnlen>
    1894:	4c 01       	movw	r8, r24
    1896:	82 01       	movw	r16, r4
    1898:	f3 2d       	mov	r31, r3
    189a:	ff 77       	andi	r31, 0x7F	; 127
    189c:	3f 2e       	mov	r3, r31
    189e:	15 c0       	rjmp	.+42     	; 0x18ca <vfprintf+0x1aa>
    18a0:	28 01       	movw	r4, r16
    18a2:	22 e0       	ldi	r18, 0x02	; 2
    18a4:	42 0e       	add	r4, r18
    18a6:	51 1c       	adc	r5, r1
    18a8:	f8 01       	movw	r30, r16
    18aa:	a0 80       	ld	r10, Z
    18ac:	b1 80       	ldd	r11, Z+1	; 0x01
    18ae:	36 fe       	sbrs	r3, 6
    18b0:	03 c0       	rjmp	.+6      	; 0x18b8 <vfprintf+0x198>
    18b2:	69 2d       	mov	r22, r9
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x19c>
    18b8:	6f ef       	ldi	r22, 0xFF	; 255
    18ba:	7f ef       	ldi	r23, 0xFF	; 255
    18bc:	c5 01       	movw	r24, r10
    18be:	2d d1       	rcall	.+602    	; 0x1b1a <strnlen_P>
    18c0:	4c 01       	movw	r8, r24
    18c2:	f3 2d       	mov	r31, r3
    18c4:	f0 68       	ori	r31, 0x80	; 128
    18c6:	3f 2e       	mov	r3, r31
    18c8:	82 01       	movw	r16, r4
    18ca:	33 fc       	sbrc	r3, 3
    18cc:	19 c0       	rjmp	.+50     	; 0x1900 <vfprintf+0x1e0>
    18ce:	82 2d       	mov	r24, r2
    18d0:	90 e0       	ldi	r25, 0x00	; 0
    18d2:	88 16       	cp	r8, r24
    18d4:	99 06       	cpc	r9, r25
    18d6:	a0 f4       	brcc	.+40     	; 0x1900 <vfprintf+0x1e0>
    18d8:	b6 01       	movw	r22, r12
    18da:	80 e2       	ldi	r24, 0x20	; 32
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	33 d1       	rcall	.+614    	; 0x1b46 <fputc>
    18e0:	2a 94       	dec	r2
    18e2:	f5 cf       	rjmp	.-22     	; 0x18ce <vfprintf+0x1ae>
    18e4:	f5 01       	movw	r30, r10
    18e6:	37 fc       	sbrc	r3, 7
    18e8:	85 91       	lpm	r24, Z+
    18ea:	37 fe       	sbrs	r3, 7
    18ec:	81 91       	ld	r24, Z+
    18ee:	5f 01       	movw	r10, r30
    18f0:	b6 01       	movw	r22, r12
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	28 d1       	rcall	.+592    	; 0x1b46 <fputc>
    18f6:	21 10       	cpse	r2, r1
    18f8:	2a 94       	dec	r2
    18fa:	21 e0       	ldi	r18, 0x01	; 1
    18fc:	82 1a       	sub	r8, r18
    18fe:	91 08       	sbc	r9, r1
    1900:	81 14       	cp	r8, r1
    1902:	91 04       	cpc	r9, r1
    1904:	79 f7       	brne	.-34     	; 0x18e4 <vfprintf+0x1c4>
    1906:	e1 c0       	rjmp	.+450    	; 0x1aca <vfprintf+0x3aa>
    1908:	84 36       	cpi	r24, 0x64	; 100
    190a:	11 f0       	breq	.+4      	; 0x1910 <vfprintf+0x1f0>
    190c:	89 36       	cpi	r24, 0x69	; 105
    190e:	39 f5       	brne	.+78     	; 0x195e <vfprintf+0x23e>
    1910:	f8 01       	movw	r30, r16
    1912:	37 fe       	sbrs	r3, 7
    1914:	07 c0       	rjmp	.+14     	; 0x1924 <vfprintf+0x204>
    1916:	60 81       	ld	r22, Z
    1918:	71 81       	ldd	r23, Z+1	; 0x01
    191a:	82 81       	ldd	r24, Z+2	; 0x02
    191c:	93 81       	ldd	r25, Z+3	; 0x03
    191e:	0c 5f       	subi	r16, 0xFC	; 252
    1920:	1f 4f       	sbci	r17, 0xFF	; 255
    1922:	08 c0       	rjmp	.+16     	; 0x1934 <vfprintf+0x214>
    1924:	60 81       	ld	r22, Z
    1926:	71 81       	ldd	r23, Z+1	; 0x01
    1928:	07 2e       	mov	r0, r23
    192a:	00 0c       	add	r0, r0
    192c:	88 0b       	sbc	r24, r24
    192e:	99 0b       	sbc	r25, r25
    1930:	0e 5f       	subi	r16, 0xFE	; 254
    1932:	1f 4f       	sbci	r17, 0xFF	; 255
    1934:	f3 2d       	mov	r31, r3
    1936:	ff 76       	andi	r31, 0x6F	; 111
    1938:	3f 2e       	mov	r3, r31
    193a:	97 ff       	sbrs	r25, 7
    193c:	09 c0       	rjmp	.+18     	; 0x1950 <vfprintf+0x230>
    193e:	90 95       	com	r25
    1940:	80 95       	com	r24
    1942:	70 95       	com	r23
    1944:	61 95       	neg	r22
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	8f 4f       	sbci	r24, 0xFF	; 255
    194a:	9f 4f       	sbci	r25, 0xFF	; 255
    194c:	f0 68       	ori	r31, 0x80	; 128
    194e:	3f 2e       	mov	r3, r31
    1950:	2a e0       	ldi	r18, 0x0A	; 10
    1952:	30 e0       	ldi	r19, 0x00	; 0
    1954:	a3 01       	movw	r20, r6
    1956:	33 d1       	rcall	.+614    	; 0x1bbe <__ultoa_invert>
    1958:	88 2e       	mov	r8, r24
    195a:	86 18       	sub	r8, r6
    195c:	44 c0       	rjmp	.+136    	; 0x19e6 <vfprintf+0x2c6>
    195e:	85 37       	cpi	r24, 0x75	; 117
    1960:	31 f4       	brne	.+12     	; 0x196e <vfprintf+0x24e>
    1962:	23 2d       	mov	r18, r3
    1964:	2f 7e       	andi	r18, 0xEF	; 239
    1966:	b2 2e       	mov	r11, r18
    1968:	2a e0       	ldi	r18, 0x0A	; 10
    196a:	30 e0       	ldi	r19, 0x00	; 0
    196c:	25 c0       	rjmp	.+74     	; 0x19b8 <vfprintf+0x298>
    196e:	93 2d       	mov	r25, r3
    1970:	99 7f       	andi	r25, 0xF9	; 249
    1972:	b9 2e       	mov	r11, r25
    1974:	8f 36       	cpi	r24, 0x6F	; 111
    1976:	c1 f0       	breq	.+48     	; 0x19a8 <vfprintf+0x288>
    1978:	18 f4       	brcc	.+6      	; 0x1980 <vfprintf+0x260>
    197a:	88 35       	cpi	r24, 0x58	; 88
    197c:	79 f0       	breq	.+30     	; 0x199c <vfprintf+0x27c>
    197e:	ae c0       	rjmp	.+348    	; 0x1adc <vfprintf+0x3bc>
    1980:	80 37       	cpi	r24, 0x70	; 112
    1982:	19 f0       	breq	.+6      	; 0x198a <vfprintf+0x26a>
    1984:	88 37       	cpi	r24, 0x78	; 120
    1986:	21 f0       	breq	.+8      	; 0x1990 <vfprintf+0x270>
    1988:	a9 c0       	rjmp	.+338    	; 0x1adc <vfprintf+0x3bc>
    198a:	e9 2f       	mov	r30, r25
    198c:	e0 61       	ori	r30, 0x10	; 16
    198e:	be 2e       	mov	r11, r30
    1990:	b4 fe       	sbrs	r11, 4
    1992:	0d c0       	rjmp	.+26     	; 0x19ae <vfprintf+0x28e>
    1994:	fb 2d       	mov	r31, r11
    1996:	f4 60       	ori	r31, 0x04	; 4
    1998:	bf 2e       	mov	r11, r31
    199a:	09 c0       	rjmp	.+18     	; 0x19ae <vfprintf+0x28e>
    199c:	34 fe       	sbrs	r3, 4
    199e:	0a c0       	rjmp	.+20     	; 0x19b4 <vfprintf+0x294>
    19a0:	29 2f       	mov	r18, r25
    19a2:	26 60       	ori	r18, 0x06	; 6
    19a4:	b2 2e       	mov	r11, r18
    19a6:	06 c0       	rjmp	.+12     	; 0x19b4 <vfprintf+0x294>
    19a8:	28 e0       	ldi	r18, 0x08	; 8
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	05 c0       	rjmp	.+10     	; 0x19b8 <vfprintf+0x298>
    19ae:	20 e1       	ldi	r18, 0x10	; 16
    19b0:	30 e0       	ldi	r19, 0x00	; 0
    19b2:	02 c0       	rjmp	.+4      	; 0x19b8 <vfprintf+0x298>
    19b4:	20 e1       	ldi	r18, 0x10	; 16
    19b6:	32 e0       	ldi	r19, 0x02	; 2
    19b8:	f8 01       	movw	r30, r16
    19ba:	b7 fe       	sbrs	r11, 7
    19bc:	07 c0       	rjmp	.+14     	; 0x19cc <vfprintf+0x2ac>
    19be:	60 81       	ld	r22, Z
    19c0:	71 81       	ldd	r23, Z+1	; 0x01
    19c2:	82 81       	ldd	r24, Z+2	; 0x02
    19c4:	93 81       	ldd	r25, Z+3	; 0x03
    19c6:	0c 5f       	subi	r16, 0xFC	; 252
    19c8:	1f 4f       	sbci	r17, 0xFF	; 255
    19ca:	06 c0       	rjmp	.+12     	; 0x19d8 <vfprintf+0x2b8>
    19cc:	60 81       	ld	r22, Z
    19ce:	71 81       	ldd	r23, Z+1	; 0x01
    19d0:	80 e0       	ldi	r24, 0x00	; 0
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	0e 5f       	subi	r16, 0xFE	; 254
    19d6:	1f 4f       	sbci	r17, 0xFF	; 255
    19d8:	a3 01       	movw	r20, r6
    19da:	f1 d0       	rcall	.+482    	; 0x1bbe <__ultoa_invert>
    19dc:	88 2e       	mov	r8, r24
    19de:	86 18       	sub	r8, r6
    19e0:	fb 2d       	mov	r31, r11
    19e2:	ff 77       	andi	r31, 0x7F	; 127
    19e4:	3f 2e       	mov	r3, r31
    19e6:	36 fe       	sbrs	r3, 6
    19e8:	0d c0       	rjmp	.+26     	; 0x1a04 <vfprintf+0x2e4>
    19ea:	23 2d       	mov	r18, r3
    19ec:	2e 7f       	andi	r18, 0xFE	; 254
    19ee:	a2 2e       	mov	r10, r18
    19f0:	89 14       	cp	r8, r9
    19f2:	58 f4       	brcc	.+22     	; 0x1a0a <vfprintf+0x2ea>
    19f4:	34 fe       	sbrs	r3, 4
    19f6:	0b c0       	rjmp	.+22     	; 0x1a0e <vfprintf+0x2ee>
    19f8:	32 fc       	sbrc	r3, 2
    19fa:	09 c0       	rjmp	.+18     	; 0x1a0e <vfprintf+0x2ee>
    19fc:	83 2d       	mov	r24, r3
    19fe:	8e 7e       	andi	r24, 0xEE	; 238
    1a00:	a8 2e       	mov	r10, r24
    1a02:	05 c0       	rjmp	.+10     	; 0x1a0e <vfprintf+0x2ee>
    1a04:	b8 2c       	mov	r11, r8
    1a06:	a3 2c       	mov	r10, r3
    1a08:	03 c0       	rjmp	.+6      	; 0x1a10 <vfprintf+0x2f0>
    1a0a:	b8 2c       	mov	r11, r8
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <vfprintf+0x2f0>
    1a0e:	b9 2c       	mov	r11, r9
    1a10:	a4 fe       	sbrs	r10, 4
    1a12:	0f c0       	rjmp	.+30     	; 0x1a32 <vfprintf+0x312>
    1a14:	fe 01       	movw	r30, r28
    1a16:	e8 0d       	add	r30, r8
    1a18:	f1 1d       	adc	r31, r1
    1a1a:	80 81       	ld	r24, Z
    1a1c:	80 33       	cpi	r24, 0x30	; 48
    1a1e:	21 f4       	brne	.+8      	; 0x1a28 <vfprintf+0x308>
    1a20:	9a 2d       	mov	r25, r10
    1a22:	99 7e       	andi	r25, 0xE9	; 233
    1a24:	a9 2e       	mov	r10, r25
    1a26:	09 c0       	rjmp	.+18     	; 0x1a3a <vfprintf+0x31a>
    1a28:	a2 fe       	sbrs	r10, 2
    1a2a:	06 c0       	rjmp	.+12     	; 0x1a38 <vfprintf+0x318>
    1a2c:	b3 94       	inc	r11
    1a2e:	b3 94       	inc	r11
    1a30:	04 c0       	rjmp	.+8      	; 0x1a3a <vfprintf+0x31a>
    1a32:	8a 2d       	mov	r24, r10
    1a34:	86 78       	andi	r24, 0x86	; 134
    1a36:	09 f0       	breq	.+2      	; 0x1a3a <vfprintf+0x31a>
    1a38:	b3 94       	inc	r11
    1a3a:	a3 fc       	sbrc	r10, 3
    1a3c:	10 c0       	rjmp	.+32     	; 0x1a5e <vfprintf+0x33e>
    1a3e:	a0 fe       	sbrs	r10, 0
    1a40:	06 c0       	rjmp	.+12     	; 0x1a4e <vfprintf+0x32e>
    1a42:	b2 14       	cp	r11, r2
    1a44:	80 f4       	brcc	.+32     	; 0x1a66 <vfprintf+0x346>
    1a46:	28 0c       	add	r2, r8
    1a48:	92 2c       	mov	r9, r2
    1a4a:	9b 18       	sub	r9, r11
    1a4c:	0d c0       	rjmp	.+26     	; 0x1a68 <vfprintf+0x348>
    1a4e:	b2 14       	cp	r11, r2
    1a50:	58 f4       	brcc	.+22     	; 0x1a68 <vfprintf+0x348>
    1a52:	b6 01       	movw	r22, r12
    1a54:	80 e2       	ldi	r24, 0x20	; 32
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	76 d0       	rcall	.+236    	; 0x1b46 <fputc>
    1a5a:	b3 94       	inc	r11
    1a5c:	f8 cf       	rjmp	.-16     	; 0x1a4e <vfprintf+0x32e>
    1a5e:	b2 14       	cp	r11, r2
    1a60:	18 f4       	brcc	.+6      	; 0x1a68 <vfprintf+0x348>
    1a62:	2b 18       	sub	r2, r11
    1a64:	02 c0       	rjmp	.+4      	; 0x1a6a <vfprintf+0x34a>
    1a66:	98 2c       	mov	r9, r8
    1a68:	21 2c       	mov	r2, r1
    1a6a:	a4 fe       	sbrs	r10, 4
    1a6c:	0f c0       	rjmp	.+30     	; 0x1a8c <vfprintf+0x36c>
    1a6e:	b6 01       	movw	r22, r12
    1a70:	80 e3       	ldi	r24, 0x30	; 48
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	68 d0       	rcall	.+208    	; 0x1b46 <fputc>
    1a76:	a2 fe       	sbrs	r10, 2
    1a78:	16 c0       	rjmp	.+44     	; 0x1aa6 <vfprintf+0x386>
    1a7a:	a1 fc       	sbrc	r10, 1
    1a7c:	03 c0       	rjmp	.+6      	; 0x1a84 <vfprintf+0x364>
    1a7e:	88 e7       	ldi	r24, 0x78	; 120
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	02 c0       	rjmp	.+4      	; 0x1a88 <vfprintf+0x368>
    1a84:	88 e5       	ldi	r24, 0x58	; 88
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	b6 01       	movw	r22, r12
    1a8a:	0c c0       	rjmp	.+24     	; 0x1aa4 <vfprintf+0x384>
    1a8c:	8a 2d       	mov	r24, r10
    1a8e:	86 78       	andi	r24, 0x86	; 134
    1a90:	51 f0       	breq	.+20     	; 0x1aa6 <vfprintf+0x386>
    1a92:	a1 fe       	sbrs	r10, 1
    1a94:	02 c0       	rjmp	.+4      	; 0x1a9a <vfprintf+0x37a>
    1a96:	8b e2       	ldi	r24, 0x2B	; 43
    1a98:	01 c0       	rjmp	.+2      	; 0x1a9c <vfprintf+0x37c>
    1a9a:	80 e2       	ldi	r24, 0x20	; 32
    1a9c:	a7 fc       	sbrc	r10, 7
    1a9e:	8d e2       	ldi	r24, 0x2D	; 45
    1aa0:	b6 01       	movw	r22, r12
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	50 d0       	rcall	.+160    	; 0x1b46 <fputc>
    1aa6:	89 14       	cp	r8, r9
    1aa8:	30 f4       	brcc	.+12     	; 0x1ab6 <vfprintf+0x396>
    1aaa:	b6 01       	movw	r22, r12
    1aac:	80 e3       	ldi	r24, 0x30	; 48
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	4a d0       	rcall	.+148    	; 0x1b46 <fputc>
    1ab2:	9a 94       	dec	r9
    1ab4:	f8 cf       	rjmp	.-16     	; 0x1aa6 <vfprintf+0x386>
    1ab6:	8a 94       	dec	r8
    1ab8:	f3 01       	movw	r30, r6
    1aba:	e8 0d       	add	r30, r8
    1abc:	f1 1d       	adc	r31, r1
    1abe:	80 81       	ld	r24, Z
    1ac0:	b6 01       	movw	r22, r12
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	40 d0       	rcall	.+128    	; 0x1b46 <fputc>
    1ac6:	81 10       	cpse	r8, r1
    1ac8:	f6 cf       	rjmp	.-20     	; 0x1ab6 <vfprintf+0x396>
    1aca:	22 20       	and	r2, r2
    1acc:	09 f4       	brne	.+2      	; 0x1ad0 <vfprintf+0x3b0>
    1ace:	4e ce       	rjmp	.-868    	; 0x176c <vfprintf+0x4c>
    1ad0:	b6 01       	movw	r22, r12
    1ad2:	80 e2       	ldi	r24, 0x20	; 32
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	37 d0       	rcall	.+110    	; 0x1b46 <fputc>
    1ad8:	2a 94       	dec	r2
    1ada:	f7 cf       	rjmp	.-18     	; 0x1aca <vfprintf+0x3aa>
    1adc:	f6 01       	movw	r30, r12
    1ade:	86 81       	ldd	r24, Z+6	; 0x06
    1ae0:	97 81       	ldd	r25, Z+7	; 0x07
    1ae2:	02 c0       	rjmp	.+4      	; 0x1ae8 <vfprintf+0x3c8>
    1ae4:	8f ef       	ldi	r24, 0xFF	; 255
    1ae6:	9f ef       	ldi	r25, 0xFF	; 255
    1ae8:	2b 96       	adiw	r28, 0x0b	; 11
    1aea:	0f b6       	in	r0, 0x3f	; 63
    1aec:	f8 94       	cli
    1aee:	de bf       	out	0x3e, r29	; 62
    1af0:	0f be       	out	0x3f, r0	; 63
    1af2:	cd bf       	out	0x3d, r28	; 61
    1af4:	df 91       	pop	r29
    1af6:	cf 91       	pop	r28
    1af8:	1f 91       	pop	r17
    1afa:	0f 91       	pop	r16
    1afc:	ff 90       	pop	r15
    1afe:	ef 90       	pop	r14
    1b00:	df 90       	pop	r13
    1b02:	cf 90       	pop	r12
    1b04:	bf 90       	pop	r11
    1b06:	af 90       	pop	r10
    1b08:	9f 90       	pop	r9
    1b0a:	8f 90       	pop	r8
    1b0c:	7f 90       	pop	r7
    1b0e:	6f 90       	pop	r6
    1b10:	5f 90       	pop	r5
    1b12:	4f 90       	pop	r4
    1b14:	3f 90       	pop	r3
    1b16:	2f 90       	pop	r2
    1b18:	08 95       	ret

00001b1a <strnlen_P>:
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	05 90       	lpm	r0, Z+
    1b1e:	61 50       	subi	r22, 0x01	; 1
    1b20:	70 40       	sbci	r23, 0x00	; 0
    1b22:	01 10       	cpse	r0, r1
    1b24:	d8 f7       	brcc	.-10     	; 0x1b1c <strnlen_P+0x2>
    1b26:	80 95       	com	r24
    1b28:	90 95       	com	r25
    1b2a:	8e 0f       	add	r24, r30
    1b2c:	9f 1f       	adc	r25, r31
    1b2e:	08 95       	ret

00001b30 <strnlen>:
    1b30:	fc 01       	movw	r30, r24
    1b32:	61 50       	subi	r22, 0x01	; 1
    1b34:	70 40       	sbci	r23, 0x00	; 0
    1b36:	01 90       	ld	r0, Z+
    1b38:	01 10       	cpse	r0, r1
    1b3a:	d8 f7       	brcc	.-10     	; 0x1b32 <strnlen+0x2>
    1b3c:	80 95       	com	r24
    1b3e:	90 95       	com	r25
    1b40:	8e 0f       	add	r24, r30
    1b42:	9f 1f       	adc	r25, r31
    1b44:	08 95       	ret

00001b46 <fputc>:
    1b46:	0f 93       	push	r16
    1b48:	1f 93       	push	r17
    1b4a:	cf 93       	push	r28
    1b4c:	df 93       	push	r29
    1b4e:	fb 01       	movw	r30, r22
    1b50:	23 81       	ldd	r18, Z+3	; 0x03
    1b52:	21 fd       	sbrc	r18, 1
    1b54:	03 c0       	rjmp	.+6      	; 0x1b5c <fputc+0x16>
    1b56:	8f ef       	ldi	r24, 0xFF	; 255
    1b58:	9f ef       	ldi	r25, 0xFF	; 255
    1b5a:	2c c0       	rjmp	.+88     	; 0x1bb4 <fputc+0x6e>
    1b5c:	22 ff       	sbrs	r18, 2
    1b5e:	16 c0       	rjmp	.+44     	; 0x1b8c <fputc+0x46>
    1b60:	46 81       	ldd	r20, Z+6	; 0x06
    1b62:	57 81       	ldd	r21, Z+7	; 0x07
    1b64:	24 81       	ldd	r18, Z+4	; 0x04
    1b66:	35 81       	ldd	r19, Z+5	; 0x05
    1b68:	42 17       	cp	r20, r18
    1b6a:	53 07       	cpc	r21, r19
    1b6c:	44 f4       	brge	.+16     	; 0x1b7e <fputc+0x38>
    1b6e:	a0 81       	ld	r26, Z
    1b70:	b1 81       	ldd	r27, Z+1	; 0x01
    1b72:	9d 01       	movw	r18, r26
    1b74:	2f 5f       	subi	r18, 0xFF	; 255
    1b76:	3f 4f       	sbci	r19, 0xFF	; 255
    1b78:	31 83       	std	Z+1, r19	; 0x01
    1b7a:	20 83       	st	Z, r18
    1b7c:	8c 93       	st	X, r24
    1b7e:	26 81       	ldd	r18, Z+6	; 0x06
    1b80:	37 81       	ldd	r19, Z+7	; 0x07
    1b82:	2f 5f       	subi	r18, 0xFF	; 255
    1b84:	3f 4f       	sbci	r19, 0xFF	; 255
    1b86:	37 83       	std	Z+7, r19	; 0x07
    1b88:	26 83       	std	Z+6, r18	; 0x06
    1b8a:	14 c0       	rjmp	.+40     	; 0x1bb4 <fputc+0x6e>
    1b8c:	8b 01       	movw	r16, r22
    1b8e:	ec 01       	movw	r28, r24
    1b90:	fb 01       	movw	r30, r22
    1b92:	00 84       	ldd	r0, Z+8	; 0x08
    1b94:	f1 85       	ldd	r31, Z+9	; 0x09
    1b96:	e0 2d       	mov	r30, r0
    1b98:	09 95       	icall
    1b9a:	89 2b       	or	r24, r25
    1b9c:	e1 f6       	brne	.-72     	; 0x1b56 <fputc+0x10>
    1b9e:	d8 01       	movw	r26, r16
    1ba0:	16 96       	adiw	r26, 0x06	; 6
    1ba2:	8d 91       	ld	r24, X+
    1ba4:	9c 91       	ld	r25, X
    1ba6:	17 97       	sbiw	r26, 0x07	; 7
    1ba8:	01 96       	adiw	r24, 0x01	; 1
    1baa:	17 96       	adiw	r26, 0x07	; 7
    1bac:	9c 93       	st	X, r25
    1bae:	8e 93       	st	-X, r24
    1bb0:	16 97       	sbiw	r26, 0x06	; 6
    1bb2:	ce 01       	movw	r24, r28
    1bb4:	df 91       	pop	r29
    1bb6:	cf 91       	pop	r28
    1bb8:	1f 91       	pop	r17
    1bba:	0f 91       	pop	r16
    1bbc:	08 95       	ret

00001bbe <__ultoa_invert>:
    1bbe:	fa 01       	movw	r30, r20
    1bc0:	aa 27       	eor	r26, r26
    1bc2:	28 30       	cpi	r18, 0x08	; 8
    1bc4:	51 f1       	breq	.+84     	; 0x1c1a <__ultoa_invert+0x5c>
    1bc6:	20 31       	cpi	r18, 0x10	; 16
    1bc8:	81 f1       	breq	.+96     	; 0x1c2a <__ultoa_invert+0x6c>
    1bca:	e8 94       	clt
    1bcc:	6f 93       	push	r22
    1bce:	6e 7f       	andi	r22, 0xFE	; 254
    1bd0:	6e 5f       	subi	r22, 0xFE	; 254
    1bd2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd4:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd8:	af 4f       	sbci	r26, 0xFF	; 255
    1bda:	b1 e0       	ldi	r27, 0x01	; 1
    1bdc:	3e d0       	rcall	.+124    	; 0x1c5a <__ultoa_invert+0x9c>
    1bde:	b4 e0       	ldi	r27, 0x04	; 4
    1be0:	3c d0       	rcall	.+120    	; 0x1c5a <__ultoa_invert+0x9c>
    1be2:	67 0f       	add	r22, r23
    1be4:	78 1f       	adc	r23, r24
    1be6:	89 1f       	adc	r24, r25
    1be8:	9a 1f       	adc	r25, r26
    1bea:	a1 1d       	adc	r26, r1
    1bec:	68 0f       	add	r22, r24
    1bee:	79 1f       	adc	r23, r25
    1bf0:	8a 1f       	adc	r24, r26
    1bf2:	91 1d       	adc	r25, r1
    1bf4:	a1 1d       	adc	r26, r1
    1bf6:	6a 0f       	add	r22, r26
    1bf8:	71 1d       	adc	r23, r1
    1bfa:	81 1d       	adc	r24, r1
    1bfc:	91 1d       	adc	r25, r1
    1bfe:	a1 1d       	adc	r26, r1
    1c00:	20 d0       	rcall	.+64     	; 0x1c42 <__ultoa_invert+0x84>
    1c02:	09 f4       	brne	.+2      	; 0x1c06 <__ultoa_invert+0x48>
    1c04:	68 94       	set
    1c06:	3f 91       	pop	r19
    1c08:	2a e0       	ldi	r18, 0x0A	; 10
    1c0a:	26 9f       	mul	r18, r22
    1c0c:	11 24       	eor	r1, r1
    1c0e:	30 19       	sub	r19, r0
    1c10:	30 5d       	subi	r19, 0xD0	; 208
    1c12:	31 93       	st	Z+, r19
    1c14:	de f6       	brtc	.-74     	; 0x1bcc <__ultoa_invert+0xe>
    1c16:	cf 01       	movw	r24, r30
    1c18:	08 95       	ret
    1c1a:	46 2f       	mov	r20, r22
    1c1c:	47 70       	andi	r20, 0x07	; 7
    1c1e:	40 5d       	subi	r20, 0xD0	; 208
    1c20:	41 93       	st	Z+, r20
    1c22:	b3 e0       	ldi	r27, 0x03	; 3
    1c24:	0f d0       	rcall	.+30     	; 0x1c44 <__ultoa_invert+0x86>
    1c26:	c9 f7       	brne	.-14     	; 0x1c1a <__ultoa_invert+0x5c>
    1c28:	f6 cf       	rjmp	.-20     	; 0x1c16 <__ultoa_invert+0x58>
    1c2a:	46 2f       	mov	r20, r22
    1c2c:	4f 70       	andi	r20, 0x0F	; 15
    1c2e:	40 5d       	subi	r20, 0xD0	; 208
    1c30:	4a 33       	cpi	r20, 0x3A	; 58
    1c32:	18 f0       	brcs	.+6      	; 0x1c3a <__ultoa_invert+0x7c>
    1c34:	49 5d       	subi	r20, 0xD9	; 217
    1c36:	31 fd       	sbrc	r19, 1
    1c38:	40 52       	subi	r20, 0x20	; 32
    1c3a:	41 93       	st	Z+, r20
    1c3c:	02 d0       	rcall	.+4      	; 0x1c42 <__ultoa_invert+0x84>
    1c3e:	a9 f7       	brne	.-22     	; 0x1c2a <__ultoa_invert+0x6c>
    1c40:	ea cf       	rjmp	.-44     	; 0x1c16 <__ultoa_invert+0x58>
    1c42:	b4 e0       	ldi	r27, 0x04	; 4
    1c44:	a6 95       	lsr	r26
    1c46:	97 95       	ror	r25
    1c48:	87 95       	ror	r24
    1c4a:	77 95       	ror	r23
    1c4c:	67 95       	ror	r22
    1c4e:	ba 95       	dec	r27
    1c50:	c9 f7       	brne	.-14     	; 0x1c44 <__ultoa_invert+0x86>
    1c52:	00 97       	sbiw	r24, 0x00	; 0
    1c54:	61 05       	cpc	r22, r1
    1c56:	71 05       	cpc	r23, r1
    1c58:	08 95       	ret
    1c5a:	9b 01       	movw	r18, r22
    1c5c:	ac 01       	movw	r20, r24
    1c5e:	0a 2e       	mov	r0, r26
    1c60:	06 94       	lsr	r0
    1c62:	57 95       	ror	r21
    1c64:	47 95       	ror	r20
    1c66:	37 95       	ror	r19
    1c68:	27 95       	ror	r18
    1c6a:	ba 95       	dec	r27
    1c6c:	c9 f7       	brne	.-14     	; 0x1c60 <__ultoa_invert+0xa2>
    1c6e:	62 0f       	add	r22, r18
    1c70:	73 1f       	adc	r23, r19
    1c72:	84 1f       	adc	r24, r20
    1c74:	95 1f       	adc	r25, r21
    1c76:	a0 1d       	adc	r26, r0
    1c78:	08 95       	ret

00001c7a <_exit>:
    1c7a:	f8 94       	cli

00001c7c <__stop_program>:
    1c7c:	ff cf       	rjmp	.-2      	; 0x1c7c <__stop_program>
