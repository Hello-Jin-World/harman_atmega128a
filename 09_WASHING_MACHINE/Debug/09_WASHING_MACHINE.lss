
09_WASHING_MACHINE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  00001948  000019dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001948  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000006a0  0080014e  0080014e  00001a2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00001ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c31  00000000  00000000  00001c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001148  00000000  00000000  000038b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010b0  00000000  00000000  000049f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000450  00000000  00000000  00005aac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008e9  00000000  00000000  00005efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  000067e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00007153  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c7       	rjmp	.+3830   	; 0xf0c <__vector_5>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	62 c5       	rjmp	.+2756   	; 0xb06 <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3b c6       	rjmp	.+3190   	; 0xcc0 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	b5 c6       	rjmp	.+3434   	; 0xde4 <__vector_30>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e4       	ldi	r30, 0x48	; 72
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 34       	cpi	r26, 0x4E	; 78
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	27 e0       	ldi	r18, 0x07	; 7
      b4:	ae e4       	ldi	r26, 0x4E	; 78
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ae 3e       	cpi	r26, 0xEE	; 238
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	8a d5       	rcall	.+2836   	; 0xbd8 <main>
      c4:	0c 94 a2 0c 	jmp	0x1944	; 0x1944 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <init_button>:
      ca:	81 b3       	in	r24, 0x11	; 17
      cc:	8f 70       	andi	r24, 0x0F	; 15
      ce:	81 bb       	out	0x11, r24	; 17
      d0:	08 95       	ret

000000d2 <get_button>:
      d2:	20 b3       	in	r18, 0x10	; 16
      d4:	42 2f       	mov	r20, r18
      d6:	50 e0       	ldi	r21, 0x00	; 0
      d8:	21 e0       	ldi	r18, 0x01	; 1
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <get_button+0x10>
      de:	22 0f       	add	r18, r18
      e0:	33 1f       	adc	r19, r19
      e2:	6a 95       	dec	r22
      e4:	e2 f7       	brpl	.-8      	; 0xde <get_button+0xc>
      e6:	24 23       	and	r18, r20
      e8:	35 23       	and	r19, r21
      ea:	21 15       	cp	r18, r1
      ec:	31 05       	cpc	r19, r1
      ee:	b9 f0       	breq	.+46     	; 0x11e <get_button+0x4c>
      f0:	fc 01       	movw	r30, r24
      f2:	e2 5b       	subi	r30, 0xB2	; 178
      f4:	fe 4f       	sbci	r31, 0xFE	; 254
      f6:	40 81       	ld	r20, Z
      f8:	41 11       	cpse	r20, r1
      fa:	11 c0       	rjmp	.+34     	; 0x11e <get_button+0x4c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	2f ef       	ldi	r18, 0xFF	; 255
      fe:	3d ee       	ldi	r19, 0xED	; 237
     100:	42 e0       	ldi	r20, 0x02	; 2
     102:	21 50       	subi	r18, 0x01	; 1
     104:	30 40       	sbci	r19, 0x00	; 0
     106:	40 40       	sbci	r20, 0x00	; 0
     108:	e1 f7       	brne	.-8      	; 0x102 <get_button+0x30>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <get_button+0x3a>
     10c:	00 00       	nop
     10e:	fc 01       	movw	r30, r24
     110:	e2 5b       	subi	r30, 0xB2	; 178
     112:	fe 4f       	sbci	r31, 0xFE	; 254
     114:	21 e0       	ldi	r18, 0x01	; 1
     116:	20 83       	st	Z, r18
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	08 95       	ret
     11e:	fc 01       	movw	r30, r24
     120:	e2 5b       	subi	r30, 0xB2	; 178
     122:	fe 4f       	sbci	r31, 0xFE	; 254
     124:	40 81       	ld	r20, Z
     126:	41 30       	cpi	r20, 0x01	; 1
     128:	91 f4       	brne	.+36     	; 0x14e <get_button+0x7c>
     12a:	23 2b       	or	r18, r19
     12c:	99 f4       	brne	.+38     	; 0x154 <get_button+0x82>
     12e:	fc 01       	movw	r30, r24
     130:	e2 5b       	subi	r30, 0xB2	; 178
     132:	fe 4f       	sbci	r31, 0xFE	; 254
     134:	10 82       	st	Z, r1
     136:	8f ef       	ldi	r24, 0xFF	; 255
     138:	9d ee       	ldi	r25, 0xED	; 237
     13a:	22 e0       	ldi	r18, 0x02	; 2
     13c:	81 50       	subi	r24, 0x01	; 1
     13e:	90 40       	sbci	r25, 0x00	; 0
     140:	20 40       	sbci	r18, 0x00	; 0
     142:	e1 f7       	brne	.-8      	; 0x13c <get_button+0x6a>
     144:	00 c0       	rjmp	.+0      	; 0x146 <get_button+0x74>
     146:	00 00       	nop
     148:	81 e0       	ldi	r24, 0x01	; 1
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	08 95       	ret
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	08 95       	ret
     154:	80 e0       	ldi	r24, 0x00	; 0
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	08 95       	ret

0000015a <fast_wash>:
	
}

void fast_wash(void) // 쾌속 세탁
{
	sec_count = 2;
     15a:	82 e0       	ldi	r24, 0x02	; 2
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	a0 e0       	ldi	r26, 0x00	; 0
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     166:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     16a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     16e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
     172:	08 95       	ret

00000174 <rinse_and_spindry>:
	
}

void rinse_and_spindry(void) // 헹굼 + 탈수
{
	sec_count = 3;
     174:	83 e0       	ldi	r24, 0x03	; 3
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     180:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     184:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     188:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
     18c:	08 95       	ret

0000018e <only_spindry>:
}

void only_spindry(void) // 탈수
{
	sec_count = 4;
     18e:	84 e0       	ldi	r24, 0x04	; 4
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	a0 e0       	ldi	r26, 0x00	; 0
     194:	b0 e0       	ldi	r27, 0x00	; 0
     196:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     19a:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     19e:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     1a2:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
     1a6:	08 95       	ret

000001a8 <main_screen>:
}

void main_screen(void) // 메인 화면
{
	PORTA = 0;
     1a8:	1b ba       	out	0x1b, r1	; 27
	sec_count = 754; // 1234 표시 12 * 60 + 34
     1aa:	82 ef       	ldi	r24, 0xF2	; 242
     1ac:	92 e0       	ldi	r25, 0x02	; 2
     1ae:	a0 e0       	ldi	r26, 0x00	; 0
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     1b6:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     1ba:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     1be:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
     1c2:	08 95       	ret

000001c4 <dumy_fanc>:
	sec_count = 0; // 다 끝나면 끝
	auto_wash_mode = 4;
}

void dumy_fanc()
{
     1c4:	08 95       	ret

000001c6 <init_fnd>:

////////////////////////////////////////////fnd 초기화 및 fnd 표시 함수들 ///////////////////////////////////////////////////////////

void init_fnd(void)
{
	FND_DATA_DDR = 0xff; // 출력모드로 설정
     1c6:	8f ef       	ldi	r24, 0xFF	; 255
     1c8:	84 bb       	out	0x14, r24	; 20

	FND_DIGIT_DDR |= 1 << FND_DIGIT_D1 | 1 << FND_DIGIT_D2 |
     1ca:	87 b3       	in	r24, 0x17	; 23
     1cc:	80 6f       	ori	r24, 0xF0	; 240
     1ce:	87 bb       	out	0x17, r24	; 23
					 1 << FND_DIGIT_D3 | 1 << FND_DIGIT_D4;

	FND_DATA_PORT = 0x00; // FND를 all off
     1d0:	15 ba       	out	0x15, r1	; 21
     1d2:	08 95       	ret

000001d4 <fnd_display>:
}

void fnd_display(void)
{
     1d4:	cf 93       	push	r28
     1d6:	df 93       	push	r29
     1d8:	cd b7       	in	r28, 0x3d	; 61
     1da:	de b7       	in	r29, 0x3e	; 62
     1dc:	2b 97       	sbiw	r28, 0x0b	; 11
     1de:	0f b6       	in	r0, 0x3f	; 63
     1e0:	f8 94       	cli
     1e2:	de bf       	out	0x3e, r29	; 62
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	cd bf       	out	0x3d, r28	; 61
						//  0      1       2      3      4      5      6     7      8       9      .
	uint8_t fnd_font[] = {~0xc0, ~0xf9, ~0xa4, ~0xb0, ~0x99, ~0x92, ~0x82, ~0xd8, ~0x80, ~0x90, ~0x7f};
     1e8:	8b e0       	ldi	r24, 0x0B	; 11
     1ea:	ee e2       	ldi	r30, 0x2E	; 46
     1ec:	f1 e0       	ldi	r31, 0x01	; 1
     1ee:	de 01       	movw	r26, r28
     1f0:	11 96       	adiw	r26, 0x01	; 1
     1f2:	01 90       	ld	r0, Z+
     1f4:	0d 92       	st	X+, r0
     1f6:	8a 95       	dec	r24
     1f8:	e1 f7       	brne	.-8      	; 0x1f2 <fnd_display+0x1e>

	static int digit_select = 0; // 자리수 선택 변수 0~3   static : 전역변수처럼 작동

	switch(digit_select)
     1fa:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <digit_select.1826>
     1fe:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <digit_select.1826+0x1>
     202:	81 30       	cpi	r24, 0x01	; 1
     204:	91 05       	cpc	r25, r1
     206:	21 f1       	breq	.+72     	; 0x250 <fnd_display+0x7c>
     208:	1c f4       	brge	.+6      	; 0x210 <fnd_display+0x3c>
     20a:	89 2b       	or	r24, r25
     20c:	41 f0       	breq	.+16     	; 0x21e <fnd_display+0x4a>
     20e:	84 c0       	rjmp	.+264    	; 0x318 <fnd_display+0x144>
     210:	82 30       	cpi	r24, 0x02	; 2
     212:	91 05       	cpc	r25, r1
     214:	f1 f1       	breq	.+124    	; 0x292 <fnd_display+0xbe>
     216:	03 97       	sbiw	r24, 0x03	; 3
     218:	09 f4       	brne	.+2      	; 0x21c <fnd_display+0x48>
     21a:	5e c0       	rjmp	.+188    	; 0x2d8 <fnd_display+0x104>
     21c:	7d c0       	rjmp	.+250    	; 0x318 <fnd_display+0x144>
	{
		case 0 :
		FND_DIGIT_PORT = ~0x80;
     21e:	8f e7       	ldi	r24, 0x7F	; 127
     220:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_font[sec_count % 10];   // 0~9초
     222:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <sec_count>
     226:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <sec_count+0x1>
     22a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count+0x2>
     22e:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	40 e0       	ldi	r20, 0x00	; 0
     238:	50 e0       	ldi	r21, 0x00	; 0
     23a:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     23e:	e1 e0       	ldi	r30, 0x01	; 1
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	ec 0f       	add	r30, r28
     244:	fd 1f       	adc	r31, r29
     246:	e6 0f       	add	r30, r22
     248:	f7 1f       	adc	r31, r23
     24a:	80 81       	ld	r24, Z
     24c:	85 bb       	out	0x15, r24	; 21
		break;
     24e:	64 c0       	rjmp	.+200    	; 0x318 <fnd_display+0x144>

		case 1 :
		FND_DIGIT_PORT = ~0x40;
     250:	8f eb       	ldi	r24, 0xBF	; 191
     252:	88 bb       	out	0x18, r24	; 24

		FND_DATA_PORT = fnd_font[sec_count / 10 % 6]; // 10단위 초
     254:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <sec_count>
     258:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <sec_count+0x1>
     25c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count+0x2>
     260:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x3>
     264:	2a e0       	ldi	r18, 0x0A	; 10
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     270:	ca 01       	movw	r24, r20
     272:	b9 01       	movw	r22, r18
     274:	26 e0       	ldi	r18, 0x06	; 6
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	40 e0       	ldi	r20, 0x00	; 0
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     280:	e1 e0       	ldi	r30, 0x01	; 1
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	ec 0f       	add	r30, r28
     286:	fd 1f       	adc	r31, r29
     288:	e6 0f       	add	r30, r22
     28a:	f7 1f       	adc	r31, r23
     28c:	80 81       	ld	r24, Z
     28e:	85 bb       	out	0x15, r24	; 21
		break;
     290:	43 c0       	rjmp	.+134    	; 0x318 <fnd_display+0x144>

		case 2 :
		FND_DIGIT_PORT = ~0x20;
     292:	8f ed       	ldi	r24, 0xDF	; 223
     294:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count / 60 % 10] | fnd_font[10]; // 1단위 분
     296:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <sec_count>
     29a:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <sec_count+0x1>
     29e:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count+0x2>
     2a2:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x3>
     2a6:	2c e3       	ldi	r18, 0x3C	; 60
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	50 e0       	ldi	r21, 0x00	; 0
     2ae:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     2b2:	ca 01       	movw	r24, r20
     2b4:	b9 01       	movw	r22, r18
     2b6:	2a e0       	ldi	r18, 0x0A	; 10
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	40 e0       	ldi	r20, 0x00	; 0
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     2c2:	e1 e0       	ldi	r30, 0x01	; 1
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	ec 0f       	add	r30, r28
     2c8:	fd 1f       	adc	r31, r29
     2ca:	e6 0f       	add	r30, r22
     2cc:	f7 1f       	adc	r31, r23
     2ce:	90 81       	ld	r25, Z
     2d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     2d2:	89 2b       	or	r24, r25
     2d4:	85 bb       	out	0x15, r24	; 21
		break;
     2d6:	20 c0       	rjmp	.+64     	; 0x318 <fnd_display+0x144>

		case 3 :
		FND_DIGIT_PORT = ~0x10;
     2d8:	8f ee       	ldi	r24, 0xEF	; 239
     2da:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_font[sec_count / 600 % 6]; // 10단위 분
     2dc:	60 91 58 01 	lds	r22, 0x0158	; 0x800158 <sec_count>
     2e0:	70 91 59 01 	lds	r23, 0x0159	; 0x800159 <sec_count+0x1>
     2e4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count+0x2>
     2e8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x3>
     2ec:	28 e5       	ldi	r18, 0x58	; 88
     2ee:	32 e0       	ldi	r19, 0x02	; 2
     2f0:	40 e0       	ldi	r20, 0x00	; 0
     2f2:	50 e0       	ldi	r21, 0x00	; 0
     2f4:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     2f8:	ca 01       	movw	r24, r20
     2fa:	b9 01       	movw	r22, r18
     2fc:	26 e0       	ldi	r18, 0x06	; 6
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	40 e0       	ldi	r20, 0x00	; 0
     302:	50 e0       	ldi	r21, 0x00	; 0
     304:	0e 94 91 09 	call	0x1322	; 0x1322 <__udivmodsi4>
     308:	e1 e0       	ldi	r30, 0x01	; 1
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	ec 0f       	add	r30, r28
     30e:	fd 1f       	adc	r31, r29
     310:	e6 0f       	add	r30, r22
     312:	f7 1f       	adc	r31, r23
     314:	80 81       	ld	r24, Z
     316:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select++;
     318:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <digit_select.1826>
     31c:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <digit_select.1826+0x1>
     320:	01 96       	adiw	r24, 0x01	; 1
	digit_select %= 4; //다음 표시할 자리수 선택
     322:	83 70       	andi	r24, 0x03	; 3
     324:	90 78       	andi	r25, 0x80	; 128
     326:	99 23       	and	r25, r25
     328:	24 f4       	brge	.+8      	; 0x332 <fnd_display+0x15e>
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	8c 6f       	ori	r24, 0xFC	; 252
     32e:	9f 6f       	ori	r25, 0xFF	; 255
     330:	01 96       	adiw	r24, 0x01	; 1
     332:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <digit_select.1826+0x1>
     336:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <digit_select.1826>
}
     33a:	2b 96       	adiw	r28, 0x0b	; 11
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	08 95       	ret

0000034c <fnd_main>:
	dumy_fanc
};

int fnd_main(void)
{
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
     34c:	8f ef       	ldi	r24, 0xFF	; 255
     34e:	8a bb       	out	0x1a, r24	; 26
	init_fnd(); // fnd 초기화
     350:	3a df       	rcall	.-396    	; 0x1c6 <init_fnd>
	init_button(); // button 초기화
     352:	bb de       	rcall	.-650    	; 0xca <init_button>
     354:	e1 2c       	mov	r14, r1
	
	int button1_state = 0;
	int button2_state = 0;
	int button3_state = 0;
     356:	f1 2c       	mov	r15, r1
     358:	00 e0       	ldi	r16, 0x00	; 0
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
	init_fnd(); // fnd 초기화
	init_button(); // button 초기화
	
	int button1_state = 0;
	int button2_state = 0;
     35a:	10 e0       	ldi	r17, 0x00	; 0
     35c:	c0 e0       	ldi	r28, 0x00	; 0
{
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
	init_fnd(); // fnd 초기화
	init_button(); // button 초기화
	
	int button1_state = 0;
     35e:	d0 e0       	ldi	r29, 0x00	; 0
     360:	64 e0       	ldi	r22, 0x04	; 4
	int button2_state = 0;
	int button3_state = 0;
	
	while(1)
	{
		if (get_button(BUTTON0, BUTTON0PIN)) // 버튼 0을 받으면 자동 세탁 모드로 진입
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	b4 de       	rcall	.-664    	; 0xd2 <get_button>
     36a:	89 2b       	or	r24, r25
     36c:	21 f0       	breq	.+8      	; 0x376 <fnd_main+0x2a>
     36e:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <select_wash_mode+0x1>
		{
			select_wash_mode = AUTO_WASH;
     372:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <select_wash_mode>
     376:	65 e0       	ldi	r22, 0x05	; 5
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	a9 de       	rcall	.-686    	; 0xd2 <get_button>
     380:	89 2b       	or	r24, r25
     382:	b1 f0       	breq	.+44     	; 0x3b0 <fnd_main+0x64>
     384:	81 e0       	ldi	r24, 0x01	; 1
		{
			button1_state = !button1_state;
     386:	20 97       	sbiw	r28, 0x00	; 0
     388:	09 f0       	breq	.+2      	; 0x38c <fnd_main+0x40>
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	cd 2b       	or	r28, r29
			
			if (button1_state) //
     390:	41 f4       	brne	.+16     	; 0x3a2 <fnd_main+0x56>
     392:	21 e0       	ldi	r18, 0x01	; 1
			{
				select_wash_mode = FAST_WASH;
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     39a:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     39e:	ec 01       	movw	r28, r24
			select_wash_mode = AUTO_WASH;
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
		{
			button1_state = !button1_state;
     3a0:	07 c0       	rjmp	.+14     	; 0x3b0 <fnd_main+0x64>
     3a2:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = FAST_WASH;
			}
			else //
			{
				select_wash_mode = MAIN_SCREEN;
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3aa:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3ae:	ec 01       	movw	r28, r24
			select_wash_mode = AUTO_WASH;
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
		{
			button1_state = !button1_state;
     3b0:	66 e0       	ldi	r22, 0x06	; 6
			{
				select_wash_mode = MAIN_SCREEN;
			}
		}
		
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2를 받으면 헹굼 + 탈수 모드로 진입
     3b2:	70 e0       	ldi	r23, 0x00	; 0
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	8c de       	rcall	.-744    	; 0xd2 <get_button>
     3ba:	89 2b       	or	r24, r25
     3bc:	b9 f0       	breq	.+46     	; 0x3ec <fnd_main+0xa0>
     3be:	81 e0       	ldi	r24, 0x01	; 1
		{
			button2_state = !button2_state;\
     3c0:	01 15       	cp	r16, r1
     3c2:	11 05       	cpc	r17, r1
     3c4:	09 f0       	breq	.+2      	; 0x3c8 <fnd_main+0x7c>
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	01 2b       	or	r16, r17
			
			if (button2_state)
     3cc:	41 f4       	brne	.+16     	; 0x3de <fnd_main+0x92>
     3ce:	22 e0       	ldi	r18, 0x02	; 2
			{
				select_wash_mode = RINSE_AND_SPINDRY;
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3d6:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3da:	8c 01       	movw	r16, r24
			}
		}
		
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2를 받으면 헹굼 + 탈수 모드로 진입
		{
			button2_state = !button2_state;\
     3dc:	07 c0       	rjmp	.+14     	; 0x3ec <fnd_main+0xa0>
     3de:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = RINSE_AND_SPINDRY;
			}
			else
			{
				select_wash_mode = MAIN_SCREEN;	
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3e6:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3ea:	8c 01       	movw	r16, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
     3ec:	67 e0       	ldi	r22, 0x07	; 7
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	83 e0       	ldi	r24, 0x03	; 3
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	6e de       	rcall	.-804    	; 0xd2 <get_button>
     3f6:	89 2b       	or	r24, r25
     3f8:	b9 f0       	breq	.+46     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3fa:	81 e0       	ldi	r24, 0x01	; 1
		{
			button3_state = !button3_state;
     3fc:	e1 14       	cp	r14, r1
     3fe:	f1 04       	cpc	r15, r1
     400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	ef 28       	or	r14, r15
			
			if (button3_state) //
     408:	41 f4       	brne	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     40a:	23 e0       	ldi	r18, 0x03	; 3
			{
				select_wash_mode = ONLY_SPINDRY;
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     412:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     416:	7c 01       	movw	r14, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
		{
			button3_state = !button3_state;
     418:	07 c0       	rjmp	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     41a:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = ONLY_SPINDRY;
			}
			else //
			{
				select_wash_mode = MAIN_SCREEN;
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     422:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     426:	7c 01       	movw	r14, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
		{
			button3_state = !button3_state;
     428:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <select_wash_mode>
			else //
			{
				select_wash_mode = MAIN_SCREEN;
			}
		}
		fp_wash_mode[select_wash_mode]();
     42c:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <select_wash_mode+0x1>
     430:	ee 0f       	add	r30, r30
     432:	ff 1f       	adc	r31, r31
     434:	e6 5f       	subi	r30, 0xF6	; 246
     436:	fe 4f       	sbci	r31, 0xFE	; 254
     438:	01 90       	ld	r0, Z+
     43a:	f0 81       	ld	r31, Z
     43c:	e0 2d       	mov	r30, r0
     43e:	09 95       	icall
     440:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
		//auto_wash_led_on(&led_shift_num);
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     444:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     448:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     44c:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     450:	02 97       	sbiw	r24, 0x02	; 2
     452:	a1 05       	cpc	r26, r1
     454:	b1 05       	cpc	r27, r1
     456:	08 f4       	brcc	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     458:	83 cf       	rjmp	.-250    	; 0x360 <fnd_main+0x14>
     45a:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
		{
			fnd_refreshrate = 0;
     45e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     462:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     466:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			fnd_display();
     46a:	b4 de       	rcall	.-664    	; 0x1d4 <fnd_display>
     46c:	79 cf       	rjmp	.-270    	; 0x360 <fnd_main+0x14>

0000046e <auto_wash>:
     46e:	8f ef       	ldi	r24, 0xFF	; 255

////////////////////////////////////////////메인화면에서 동작하는 함수들////////////////////////////////////////////////

void auto_wash(void) // 자동 세탁
{
	PORTA = 0xff;
     470:	8b bb       	out	0x1b, r24	; 27
	sec_count = 1;
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	a0 e0       	ldi	r26, 0x00	; 0
     478:	b0 e0       	ldi	r27, 0x00	; 0
     47a:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     47e:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     482:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     486:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
	
	int auto_step_led = 0;
	
	while (auto_step_led < 4)
     48a:	33 c0       	rjmp	.+102    	; 0x4f2 <auto_wash+0x84>
	{
		if (get_button(BUTTON0, BUTTON0PIN))
		{
			select_wash_mode = 4;
     48c:	84 e0       	ldi	r24, 0x04	; 4
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <select_wash_mode+0x1>
     494:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <select_wash_mode>
	}
	// 여기까지 자동 세탁의 물온도, 헹굼횟수, 탈수 강도를 선택함 밑에서 지정한 시간만큼 모터가 돌아가고 탈수 강도에 맞게 30초 동안 강도에 맞게 진행
	
	//여기에 시간 만큼 회전하는 함수 추가.
	
}
     498:	08 95       	ret
		if (get_button(BUTTON0, BUTTON0PIN))
		{
			select_wash_mode = 4;
			break;
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     49a:	65 e0       	ldi	r22, 0x05	; 5
     49c:	70 e0       	ldi	r23, 0x00	; 0
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	17 de       	rcall	.-978    	; 0xd2 <get_button>
     4a4:	89 2b       	or	r24, r25
     4a6:	21 f0       	breq	.+8      	; 0x4b0 <auto_wash+0x42>
		{
			if (auto_step_led == 0) // 물 온도 선택하기  --- 물온도 변수 필요하고 
			{
				auto_wash_mode = 0;
     4a8:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <auto_wash_mode+0x1>
     4ac:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <auto_wash_mode>
			}
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     4b0:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     4b4:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     4b8:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     4bc:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     4c0:	02 97       	sbiw	r24, 0x02	; 2
     4c2:	a1 05       	cpc	r26, r1
     4c4:	b1 05       	cpc	r27, r1
     4c6:	48 f0       	brcs	.+18     	; 0x4da <auto_wash+0x6c>
		{
			fnd_refreshrate = 0;
     4c8:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
     4cc:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     4d0:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     4d4:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			fnd_display();
     4d8:	7d de       	rcall	.-774    	; 0x1d4 <fnd_display>
		}
		auto_wash_select[auto_wash_mode]();
     4da:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <auto_wash_mode>
     4de:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <auto_wash_mode+0x1>
     4e2:	ee 0f       	add	r30, r30
     4e4:	ff 1f       	adc	r31, r31
     4e6:	e0 50       	subi	r30, 0x00	; 0
     4e8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ea:	01 90       	ld	r0, Z+
     4ec:	f0 81       	ld	r31, Z
     4ee:	e0 2d       	mov	r30, r0
     4f0:	09 95       	icall
	
	int auto_step_led = 0;
	
	while (auto_step_led < 4)
	{
		if (get_button(BUTTON0, BUTTON0PIN))
     4f2:	64 e0       	ldi	r22, 0x04	; 4
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	eb dd       	rcall	.-1066   	; 0xd2 <get_button>
     4fc:	89 2b       	or	r24, r25
     4fe:	69 f2       	breq	.-102    	; 0x49a <auto_wash+0x2c>
     500:	c5 cf       	rjmp	.-118    	; 0x48c <auto_wash+0x1e>

00000502 <water_temperature>:
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////자동 세척 모드에서 동작하는 함수들////////////////////////////////////////////
void water_temperature() // 물 온도 선택
{
     502:	cf 93       	push	r28
     504:	df 93       	push	r29
	PORTA = 0x07;
     506:	87 e0       	ldi	r24, 0x07	; 7
     508:	8b bb       	out	0x1b, r24	; 27
	int water_tem_toggle = 1;
	
	sec_count = 30;  // deflaut 물 온도
     50a:	8e e1       	ldi	r24, 0x1E	; 30
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	a0 e0       	ldi	r26, 0x00	; 0
     510:	b0 e0       	ldi	r27, 0x00	; 0
     512:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     516:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     51a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     51e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>

/////////////////////////////////////////자동 세척 모드에서 동작하는 함수들////////////////////////////////////////////
void water_temperature() // 물 온도 선택
{
	PORTA = 0x07;
	int water_tem_toggle = 1;
     522:	c1 e0       	ldi	r28, 0x01	; 1
     524:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 30;  // deflaut 물 온도
	
	while (water_tem_toggle)
     526:	60 c0       	rjmp	.+192    	; 0x5e8 <water_temperature+0xe6>
	{
		if (get_button(BUTTON2, BUTTON2PIN))
     528:	66 e0       	ldi	r22, 0x06	; 6
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	82 e0       	ldi	r24, 0x02	; 2
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	d0 dd       	rcall	.-1120   	; 0xd2 <get_button>
     532:	89 2b       	or	r24, r25
     534:	99 f0       	breq	.+38     	; 0x55c <water_temperature+0x5a>
		{
			sec_count -= 5;
     536:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     53a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     53e:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     542:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     546:	05 97       	sbiw	r24, 0x05	; 5
     548:	a1 09       	sbc	r26, r1
     54a:	b1 09       	sbc	r27, r1
     54c:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     550:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     554:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     558:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN))
     55c:	67 e0       	ldi	r22, 0x07	; 7
     55e:	70 e0       	ldi	r23, 0x00	; 0
     560:	83 e0       	ldi	r24, 0x03	; 3
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	b6 dd       	rcall	.-1172   	; 0xd2 <get_button>
     566:	89 2b       	or	r24, r25
     568:	99 f0       	breq	.+38     	; 0x590 <water_temperature+0x8e>
		{
			sec_count += 5;
     56a:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     56e:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     572:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     576:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     57a:	05 96       	adiw	r24, 0x05	; 5
     57c:	a1 1d       	adc	r26, r1
     57e:	b1 1d       	adc	r27, r1
     580:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     584:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     588:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     58c:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     590:	65 e0       	ldi	r22, 0x05	; 5
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	9c dd       	rcall	.-1224   	; 0xd2 <get_button>
     59a:	89 2b       	or	r24, r25
     59c:	81 f0       	breq	.+32     	; 0x5be <water_temperature+0xbc>
		{	
			sec_count = 0;
     59e:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <sec_count>
     5a2:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <sec_count+0x1>
     5a6:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count+0x2>
     5aa:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x3>
			auto_wash_mode = 1;
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     5b6:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			water_tem_toggle = 0;
     5ba:	c0 e0       	ldi	r28, 0x00	; 0
     5bc:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     5be:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     5c2:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     5c6:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     5ca:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     5ce:	02 97       	sbiw	r24, 0x02	; 2
     5d0:	a1 05       	cpc	r26, r1
     5d2:	b1 05       	cpc	r27, r1
     5d4:	48 f0       	brcs	.+18     	; 0x5e8 <water_temperature+0xe6>
		{
			fnd_refreshrate = 0;
     5d6:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
     5da:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     5de:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     5e2:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			fnd_display();
     5e6:	f6 dd       	rcall	.-1044   	; 0x1d4 <fnd_display>
	PORTA = 0x07;
	int water_tem_toggle = 1;
	
	sec_count = 30;  // deflaut 물 온도
	
	while (water_tem_toggle)
     5e8:	20 97       	sbiw	r28, 0x00	; 0
     5ea:	09 f0       	breq	.+2      	; 0x5ee <water_temperature+0xec>
     5ec:	9d cf       	rjmp	.-198    	; 0x528 <water_temperature+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <rinse_frequency>:

void rinse_frequency() // 헹굼 횟수 조절
{
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
	PORTA = 0x03;
     5f8:	83 e0       	ldi	r24, 0x03	; 3
     5fa:	8b bb       	out	0x1b, r24	; 27
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 5; // deflaut 헹굼 횟수
     5fc:	85 e0       	ldi	r24, 0x05	; 5
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	a0 e0       	ldi	r26, 0x00	; 0
     602:	b0 e0       	ldi	r27, 0x00	; 0
     604:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     608:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     60c:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     610:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
}

void rinse_frequency() // 헹굼 횟수 조절
{
	PORTA = 0x03;
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
     614:	c1 e0       	ldi	r28, 0x01	; 1
     616:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 5; // deflaut 헹굼 횟수
	
	while (rinse_frequency_toggle)
     618:	79 c0       	rjmp	.+242    	; 0x70c <rinse_frequency+0x118>
	{
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2 누르면 횟수 1 감소
     61a:	66 e0       	ldi	r22, 0x06	; 6
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	57 dd       	rcall	.-1362   	; 0xd2 <get_button>
     624:	89 2b       	or	r24, r25
     626:	99 f0       	breq	.+38     	; 0x64e <rinse_frequency+0x5a>
		{
			sec_count -= 1;
     628:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     62c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     630:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     634:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     638:	01 97       	sbiw	r24, 0x01	; 1
     63a:	a1 09       	sbc	r26, r1
     63c:	b1 09       	sbc	r27, r1
     63e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     642:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     646:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     64a:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3 누르면 횟수 1 증가
     64e:	67 e0       	ldi	r22, 0x07	; 7
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	83 e0       	ldi	r24, 0x03	; 3
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	3d dd       	rcall	.-1414   	; 0xd2 <get_button>
     658:	89 2b       	or	r24, r25
     65a:	99 f0       	breq	.+38     	; 0x682 <rinse_frequency+0x8e>
		{
			sec_count += 1;
     65c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     660:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     664:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     668:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     66c:	01 96       	adiw	r24, 0x01	; 1
     66e:	a1 1d       	adc	r26, r1
     670:	b1 1d       	adc	r27, r1
     672:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     676:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     67a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     67e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     682:	65 e0       	ldi	r22, 0x05	; 5
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	23 dd       	rcall	.-1466   	; 0xd2 <get_button>
     68c:	89 2b       	or	r24, r25
     68e:	49 f1       	breq	.+82     	; 0x6e2 <rinse_frequency+0xee>
		{
			total_wash_time += sec_count * 10; // 버튼 1누르면 횟수 * 10초를 전역변수에 저장하고 다음 단계로 간 다음 탈출
     690:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     694:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     698:	9c 01       	movw	r18, r24
     69a:	22 0f       	add	r18, r18
     69c:	33 1f       	adc	r19, r19
     69e:	88 0f       	add	r24, r24
     6a0:	99 1f       	adc	r25, r25
     6a2:	88 0f       	add	r24, r24
     6a4:	99 1f       	adc	r25, r25
     6a6:	88 0f       	add	r24, r24
     6a8:	99 1f       	adc	r25, r25
     6aa:	82 0f       	add	r24, r18
     6ac:	93 1f       	adc	r25, r19
     6ae:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <total_wash_time>
     6b2:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <total_wash_time+0x1>
     6b6:	82 0f       	add	r24, r18
     6b8:	93 1f       	adc	r25, r19
     6ba:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <total_wash_time+0x1>
     6be:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <total_wash_time>
			sec_count = 0;
     6c2:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <sec_count>
     6c6:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <sec_count+0x1>
     6ca:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count+0x2>
     6ce:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x3>
			auto_wash_mode = 2;
     6d2:	82 e0       	ldi	r24, 0x02	; 2
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     6da:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			rinse_frequency_toggle = 0;
     6de:	c0 e0       	ldi	r28, 0x00	; 0
     6e0:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     6e2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     6e6:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     6ea:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     6ee:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     6f2:	02 97       	sbiw	r24, 0x02	; 2
     6f4:	a1 05       	cpc	r26, r1
     6f6:	b1 05       	cpc	r27, r1
     6f8:	48 f0       	brcs	.+18     	; 0x70c <rinse_frequency+0x118>
		{
			fnd_refreshrate = 0;
     6fa:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
     6fe:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     702:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     706:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			fnd_display();
     70a:	64 dd       	rcall	.-1336   	; 0x1d4 <fnd_display>
	PORTA = 0x03;
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 5; // deflaut 헹굼 횟수
	
	while (rinse_frequency_toggle)
     70c:	20 97       	sbiw	r28, 0x00	; 0
     70e:	09 f0       	breq	.+2      	; 0x712 <rinse_frequency+0x11e>
     710:	84 cf       	rjmp	.-248    	; 0x61a <rinse_frequency+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	08 95       	ret

00000718 <spindry_strength>:

void spindry_strength()
{
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
	PORTA = 0x01;
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	8b bb       	out	0x1b, r24	; 27
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
     720:	83 e0       	ldi	r24, 0x03	; 3
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	a0 e0       	ldi	r26, 0x00	; 0
     726:	b0 e0       	ldi	r27, 0x00	; 0
     728:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     72c:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     730:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     734:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
}

void spindry_strength()
{
	PORTA = 0x01;
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
     738:	c1 e0       	ldi	r28, 0x01	; 1
     73a:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
	
	while (spindry_strength_toggle)
     73c:	98 c0       	rjmp	.+304    	; 0x86e <spindry_strength+0x156>
	{
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2 누르면 횟수 1 감소
     73e:	66 e0       	ldi	r22, 0x06	; 6
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	82 e0       	ldi	r24, 0x02	; 2
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	c5 dc       	rcall	.-1654   	; 0xd2 <get_button>
     748:	89 2b       	or	r24, r25
     74a:	99 f0       	breq	.+38     	; 0x772 <spindry_strength+0x5a>
		{
			sec_count -= 1;
     74c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     750:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     754:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     758:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	a1 09       	sbc	r26, r1
     760:	b1 09       	sbc	r27, r1
     762:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     766:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     76a:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     76e:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3 누르면 횟수 1 증가
     772:	67 e0       	ldi	r22, 0x07	; 7
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	83 e0       	ldi	r24, 0x03	; 3
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	ab dc       	rcall	.-1706   	; 0xd2 <get_button>
     77c:	89 2b       	or	r24, r25
     77e:	99 f0       	breq	.+38     	; 0x7a6 <spindry_strength+0x8e>
		{
			sec_count += 1;
     780:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     784:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     788:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     78c:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     790:	01 96       	adiw	r24, 0x01	; 1
     792:	a1 1d       	adc	r26, r1
     794:	b1 1d       	adc	r27, r1
     796:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     79a:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     79e:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     7a2:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1 누르면 세팅한 강도에 맞는 회전값 반환
     7a6:	65 e0       	ldi	r22, 0x05	; 5
     7a8:	70 e0       	ldi	r23, 0x00	; 0
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	91 dc       	rcall	.-1758   	; 0xd2 <get_button>
     7b0:	89 2b       	or	r24, r25
     7b2:	09 f4       	brne	.+2      	; 0x7b6 <spindry_strength+0x9e>
     7b4:	47 c0       	rjmp	.+142    	; 0x844 <spindry_strength+0x12c>
		{
			if(sec_count == 1)
     7b6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     7ba:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     7be:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     7c2:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     7c6:	81 30       	cpi	r24, 0x01	; 1
     7c8:	91 05       	cpc	r25, r1
     7ca:	a1 05       	cpc	r26, r1
     7cc:	b1 05       	cpc	r27, r1
     7ce:	39 f4       	brne	.+14     	; 0x7de <spindry_strength+0xc6>
			{
				spin_strength_val = 115;
     7d0:	83 e7       	ldi	r24, 0x73	; 115
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     7d8:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     7dc:	22 c0       	rjmp	.+68     	; 0x822 <spindry_strength+0x10a>
			}
			else if (sec_count == 2)
     7de:	82 30       	cpi	r24, 0x02	; 2
     7e0:	91 05       	cpc	r25, r1
     7e2:	a1 05       	cpc	r26, r1
     7e4:	b1 05       	cpc	r27, r1
     7e6:	39 f4       	brne	.+14     	; 0x7f6 <spindry_strength+0xde>
			{
				spin_strength_val = 160;
     7e8:	80 ea       	ldi	r24, 0xA0	; 160
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     7f0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     7f4:	16 c0       	rjmp	.+44     	; 0x822 <spindry_strength+0x10a>
			}
			else if (sec_count == 3)
     7f6:	83 30       	cpi	r24, 0x03	; 3
     7f8:	91 05       	cpc	r25, r1
     7fa:	a1 05       	cpc	r26, r1
     7fc:	b1 05       	cpc	r27, r1
     7fe:	39 f4       	brne	.+14     	; 0x80e <spindry_strength+0xf6>
			{
				spin_strength_val = 205;
     800:	8d ec       	ldi	r24, 0xCD	; 205
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     808:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     80c:	0a c0       	rjmp	.+20     	; 0x822 <spindry_strength+0x10a>
			}
			else if (sec_count == 4)
     80e:	04 97       	sbiw	r24, 0x04	; 4
     810:	a1 05       	cpc	r26, r1
     812:	b1 05       	cpc	r27, r1
     814:	31 f4       	brne	.+12     	; 0x822 <spindry_strength+0x10a>
			{
				spin_strength_val = 250;
     816:	8a ef       	ldi	r24, 0xFA	; 250
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     81e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
			}
			PORTA = 0;
     822:	1b ba       	out	0x1b, r1	; 27
			sec_count = 0;
     824:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <sec_count>
     828:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <sec_count+0x1>
     82c:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count+0x2>
     830:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x3>
			auto_wash_mode = 3;
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     83c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			spindry_strength_toggle = 0;
     840:	c0 e0       	ldi	r28, 0x00	; 0
     842:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     844:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     848:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     84c:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     850:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     854:	02 97       	sbiw	r24, 0x02	; 2
     856:	a1 05       	cpc	r26, r1
     858:	b1 05       	cpc	r27, r1
     85a:	48 f0       	brcs	.+18     	; 0x86e <spindry_strength+0x156>
		{
			fnd_refreshrate = 0;
     85c:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
     860:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     864:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     868:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			fnd_display();
     86c:	b3 dc       	rcall	.-1690   	; 0x1d4 <fnd_display>
	PORTA = 0x01;
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
	
	while (spindry_strength_toggle)
     86e:	20 97       	sbiw	r28, 0x00	; 0
     870:	09 f0       	breq	.+2      	; 0x874 <spindry_strength+0x15c>
     872:	65 cf       	rjmp	.-310    	; 0x73e <spindry_strength+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	08 95       	ret

0000087a <fnd_loading_display>:
	digit_select++;
	digit_select %= 4; //다음 표시할 자리수 선택
}

void fnd_loading_display(int *loading_rot) // 진행 로딩 상황 표시 
{
     87a:	ef 92       	push	r14
     87c:	ff 92       	push	r15
     87e:	0f 93       	push	r16
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	00 d0       	rcall	.+0      	; 0x888 <fnd_loading_display+0xe>
     888:	00 d0       	rcall	.+0      	; 0x88a <fnd_loading_display+0x10>
     88a:	00 d0       	rcall	.+0      	; 0x88c <fnd_loading_display+0x12>
     88c:	cd b7       	in	r28, 0x3d	; 61
     88e:	de b7       	in	r29, 0x3e	; 62
     890:	9c 01       	movw	r18, r24
	int a,b,c,d;                 //  [     -      _       ]		-,_	  꺼짐
	uint8_t fnd_loading_font[] = {~0xc6, ~0xfe, ~0xf7, ~0xf0, ~0xf6, ~0xff};
     892:	96 e0       	ldi	r25, 0x06	; 6
     894:	e9 e3       	ldi	r30, 0x39	; 57
     896:	f1 e0       	ldi	r31, 0x01	; 1
     898:	de 01       	movw	r26, r28
     89a:	11 96       	adiw	r26, 0x01	; 1
     89c:	01 90       	ld	r0, Z+
     89e:	0d 92       	st	X+, r0
     8a0:	9a 95       	dec	r25
     8a2:	e1 f7       	brne	.-8      	; 0x89c <fnd_loading_display+0x22>
	if (*loading_rot == 0)
     8a4:	f9 01       	movw	r30, r18
     8a6:	80 81       	ld	r24, Z
     8a8:	91 81       	ldd	r25, Z+1	; 0x01
     8aa:	00 97       	sbiw	r24, 0x00	; 0
     8ac:	31 f0       	breq	.+12     	; 0x8ba <fnd_loading_display+0x40>
	{
		a = 0; b = 1, c = 2, d = 3;	
	}
	else if (*loading_rot == 1)
     8ae:	81 30       	cpi	r24, 0x01	; 1
     8b0:	91 05       	cpc	r25, r1
     8b2:	79 f0       	breq	.+30     	; 0x8d2 <fnd_loading_display+0x58>
	{
		a = 0; b = 2, c = 1, d = 3;
	}
	else if (*loading_rot == 2)
     8b4:	02 97       	sbiw	r24, 0x02	; 2
     8b6:	19 f5       	brne	.+70     	; 0x8fe <fnd_loading_display+0x84>
     8b8:	18 c0       	rjmp	.+48     	; 0x8ea <fnd_loading_display+0x70>
{
	int a,b,c,d;                 //  [     -      _       ]		-,_	  꺼짐
	uint8_t fnd_loading_font[] = {~0xc6, ~0xfe, ~0xf7, ~0xf0, ~0xf6, ~0xff};
	if (*loading_rot == 0)
	{
		a = 0; b = 1, c = 2, d = 3;	
     8ba:	0f 2e       	mov	r0, r31
     8bc:	f3 e0       	ldi	r31, 0x03	; 3
     8be:	ef 2e       	mov	r14, r31
     8c0:	f1 2c       	mov	r15, r1
     8c2:	f0 2d       	mov	r31, r0
     8c4:	62 e0       	ldi	r22, 0x02	; 2
     8c6:	70 e0       	ldi	r23, 0x00	; 0
     8c8:	01 e0       	ldi	r16, 0x01	; 1
     8ca:	10 e0       	ldi	r17, 0x00	; 0
     8cc:	40 e0       	ldi	r20, 0x00	; 0
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	16 c0       	rjmp	.+44     	; 0x8fe <fnd_loading_display+0x84>
	}
	else if (*loading_rot == 1)
	{
		a = 0; b = 2, c = 1, d = 3;
     8d2:	0f 2e       	mov	r0, r31
     8d4:	f3 e0       	ldi	r31, 0x03	; 3
     8d6:	ef 2e       	mov	r14, r31
     8d8:	f1 2c       	mov	r15, r1
     8da:	f0 2d       	mov	r31, r0
     8dc:	61 e0       	ldi	r22, 0x01	; 1
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	02 e0       	ldi	r16, 0x02	; 2
     8e2:	10 e0       	ldi	r17, 0x00	; 0
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	0a c0       	rjmp	.+20     	; 0x8fe <fnd_loading_display+0x84>
	}
	else if (*loading_rot == 2)
	{
		a = 1; b = 4, c = 4, d = 2;
     8ea:	68 94       	set
     8ec:	ee 24       	eor	r14, r14
     8ee:	e1 f8       	bld	r14, 1
     8f0:	f1 2c       	mov	r15, r1
     8f2:	64 e0       	ldi	r22, 0x04	; 4
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	04 e0       	ldi	r16, 0x04	; 4
     8f8:	10 e0       	ldi	r17, 0x00	; 0
     8fa:	41 e0       	ldi	r20, 0x01	; 1
     8fc:	50 e0       	ldi	r21, 0x00	; 0
	}

	static int digit_select = 0; // 자리수 선택 변수 0~3   static : 전역변수처럼 작동

	switch(digit_select)
     8fe:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <digit_select.1840>
     902:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <digit_select.1840+0x1>
     906:	81 30       	cpi	r24, 0x01	; 1
     908:	91 05       	cpc	r25, r1
     90a:	a9 f0       	breq	.+42     	; 0x936 <fnd_loading_display+0xbc>
     90c:	1c f4       	brge	.+6      	; 0x914 <fnd_loading_display+0x9a>
     90e:	89 2b       	or	r24, r25
     910:	39 f0       	breq	.+14     	; 0x920 <fnd_loading_display+0xa6>
     912:	31 c0       	rjmp	.+98     	; 0x976 <fnd_loading_display+0xfc>
     914:	82 30       	cpi	r24, 0x02	; 2
     916:	91 05       	cpc	r25, r1
     918:	c9 f0       	breq	.+50     	; 0x94c <fnd_loading_display+0xd2>
     91a:	03 97       	sbiw	r24, 0x03	; 3
     91c:	11 f1       	breq	.+68     	; 0x962 <fnd_loading_display+0xe8>
     91e:	2b c0       	rjmp	.+86     	; 0x976 <fnd_loading_display+0xfc>
	{
		case 0 :
		FND_DIGIT_PORT = ~0x80;
     920:	8f e7       	ldi	r24, 0x7F	; 127
     922:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[d];
     924:	e1 e0       	ldi	r30, 0x01	; 1
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	ec 0f       	add	r30, r28
     92a:	fd 1f       	adc	r31, r29
     92c:	ee 0d       	add	r30, r14
     92e:	ff 1d       	adc	r31, r15
     930:	80 81       	ld	r24, Z
     932:	85 bb       	out	0x15, r24	; 21
		break;
     934:	20 c0       	rjmp	.+64     	; 0x976 <fnd_loading_display+0xfc>

		case 1 :
		FND_DIGIT_PORT = ~0x40;
     936:	8f eb       	ldi	r24, 0xBF	; 191
     938:	88 bb       	out	0x18, r24	; 24

		FND_DATA_PORT = fnd_loading_font[b];
     93a:	e1 e0       	ldi	r30, 0x01	; 1
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	ec 0f       	add	r30, r28
     940:	fd 1f       	adc	r31, r29
     942:	e0 0f       	add	r30, r16
     944:	f1 1f       	adc	r31, r17
     946:	80 81       	ld	r24, Z
     948:	85 bb       	out	0x15, r24	; 21
		break;
     94a:	15 c0       	rjmp	.+42     	; 0x976 <fnd_loading_display+0xfc>

		case 2 :
		FND_DIGIT_PORT = ~0x20;
     94c:	8f ed       	ldi	r24, 0xDF	; 223
     94e:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[c];
     950:	e1 e0       	ldi	r30, 0x01	; 1
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	ec 0f       	add	r30, r28
     956:	fd 1f       	adc	r31, r29
     958:	e6 0f       	add	r30, r22
     95a:	f7 1f       	adc	r31, r23
     95c:	80 81       	ld	r24, Z
     95e:	85 bb       	out	0x15, r24	; 21
		break;
     960:	0a c0       	rjmp	.+20     	; 0x976 <fnd_loading_display+0xfc>

		case 3 :
		FND_DIGIT_PORT = ~0x10;
     962:	8f ee       	ldi	r24, 0xEF	; 239
     964:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[a];
     966:	e1 e0       	ldi	r30, 0x01	; 1
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	ec 0f       	add	r30, r28
     96c:	fd 1f       	adc	r31, r29
     96e:	e4 0f       	add	r30, r20
     970:	f5 1f       	adc	r31, r21
     972:	80 81       	ld	r24, Z
     974:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select++;
     976:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <digit_select.1840>
     97a:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <digit_select.1840+0x1>
     97e:	01 96       	adiw	r24, 0x01	; 1
	digit_select %= 4; //다음 표시할 자리수 선택
     980:	83 70       	andi	r24, 0x03	; 3
     982:	90 78       	andi	r25, 0x80	; 128
     984:	99 23       	and	r25, r25
     986:	24 f4       	brge	.+8      	; 0x990 <fnd_loading_display+0x116>
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	8c 6f       	ori	r24, 0xFC	; 252
     98c:	9f 6f       	ori	r25, 0xFF	; 255
     98e:	01 96       	adiw	r24, 0x01	; 1
     990:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <digit_select.1840+0x1>
     994:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <digit_select.1840>
}
     998:	26 96       	adiw	r28, 0x06	; 6
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	ff 90       	pop	r15
     9ae:	ef 90       	pop	r14
     9b0:	08 95       	ret

000009b2 <auto_wash_start>:
	}
}

void auto_wash_start(void)
{
	sec_count = total_wash_time;
     9b2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <total_wash_time>
     9b6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <total_wash_time+0x1>
     9ba:	09 2e       	mov	r0, r25
     9bc:	00 0c       	add	r0, r0
     9be:	aa 0b       	sbc	r26, r26
     9c0:	bb 0b       	sbc	r27, r27
     9c2:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     9c6:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     9ca:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     9ce:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
	
	while (sec_count > 0)
     9d2:	79 c0       	rjmp	.+242    	; 0xac6 <auto_wash_start+0x114>
	{
		washing_machine_fan_control(&spin_strength_val);
     9d4:	86 e1       	ldi	r24, 0x16	; 22
     9d6:	91 e0       	ldi	r25, 0x01	; 1
     9d8:	32 d1       	rcall	.+612    	; 0xc3e <washing_machine_fan_control>
		
		if (msec_count >= 1000) // 1초마다 시간 1초씩 감소하고 로딩 회전이 됨.
     9da:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <msec_count>
     9de:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <msec_count+0x1>
     9e2:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <msec_count+0x2>
     9e6:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <msec_count+0x3>
     9ea:	88 3e       	cpi	r24, 0xE8	; 232
     9ec:	93 40       	sbci	r25, 0x03	; 3
     9ee:	a1 05       	cpc	r26, r1
     9f0:	b1 05       	cpc	r27, r1
     9f2:	38 f1       	brcs	.+78     	; 0xa42 <auto_wash_start+0x90>
		{
			msec_count = 0;
     9f4:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <msec_count>
     9f8:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <msec_count+0x1>
     9fc:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <msec_count+0x2>
     a00:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <msec_count+0x3>
			sec_count--;
     a04:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     a08:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     a0c:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     a10:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	a1 09       	sbc	r26, r1
     a18:	b1 09       	sbc	r27, r1
     a1a:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <sec_count>
     a1e:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <sec_count+0x1>
     a22:	a0 93 5a 01 	sts	0x015A, r26	; 0x80015a <sec_count+0x2>
     a26:	b0 93 5b 01 	sts	0x015B, r27	; 0x80015b <sec_count+0x3>
			loading_rot++;
     a2a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <loading_rot>
     a2e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <loading_rot+0x1>
     a32:	01 96       	adiw	r24, 0x01	; 1
			loading_rot %= 3;
     a34:	63 e0       	ldi	r22, 0x03	; 3
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	61 d4       	rcall	.+2242   	; 0x12fc <__divmodhi4>
     a3a:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <loading_rot+0x1>
     a3e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <loading_rot>
		}
		if (loading_clock_change >= 3000) // 3초마다 로딩창이랑 시간 화면 뜨는거 토글
     a42:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <loading_clock_change>
     a46:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <loading_clock_change+0x1>
     a4a:	a0 91 5e 01 	lds	r26, 0x015E	; 0x80015e <loading_clock_change+0x2>
     a4e:	b0 91 5f 01 	lds	r27, 0x015F	; 0x80015f <loading_clock_change+0x3>
     a52:	88 3b       	cpi	r24, 0xB8	; 184
     a54:	9b 40       	sbci	r25, 0x0B	; 11
     a56:	a1 05       	cpc	r26, r1
     a58:	b1 05       	cpc	r27, r1
     a5a:	b0 f0       	brcs	.+44     	; 0xa88 <auto_wash_start+0xd6>
		{
			loading_clock_change = 0;
     a5c:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <loading_clock_change>
     a60:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <loading_clock_change+0x1>
     a64:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <loading_clock_change+0x2>
     a68:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <loading_clock_change+0x3>
			loading_clock_change_val = !loading_clock_change_val;
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <loading_clock_change_val>
     a74:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <loading_clock_change_val+0x1>
     a78:	23 2b       	or	r18, r19
     a7a:	11 f0       	breq	.+4      	; 0xa80 <auto_wash_start+0xce>
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <loading_clock_change_val+0x1>
     a84:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <loading_clock_change_val>
		}
		
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     a88:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     a8c:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     a90:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     a94:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     a98:	02 97       	sbiw	r24, 0x02	; 2
     a9a:	a1 05       	cpc	r26, r1
     a9c:	b1 05       	cpc	r27, r1
     a9e:	98 f0       	brcs	.+38     	; 0xac6 <auto_wash_start+0x114>
		{
			fnd_refreshrate = 0;
     aa0:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <fnd_refreshrate>
     aa4:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <fnd_refreshrate+0x1>
     aa8:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate+0x2>
     aac:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x3>
			if (loading_clock_change_val)
     ab0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <loading_clock_change_val>
     ab4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <loading_clock_change_val+0x1>
     ab8:	89 2b       	or	r24, r25
			{
				fnd_display(); // 시간 보여주기
     aba:	11 f0       	breq	.+4      	; 0xac0 <auto_wash_start+0x10e>
     abc:	8b db       	rcall	.-2282   	; 0x1d4 <fnd_display>
			}
			else
			{
				fnd_loading_display(&loading_rot); // 로딩 보여주기
     abe:	03 c0       	rjmp	.+6      	; 0xac6 <auto_wash_start+0x114>
     ac0:	86 e5       	ldi	r24, 0x56	; 86
     ac2:	91 e0       	ldi	r25, 0x01	; 1
     ac4:	da de       	rcall	.-588    	; 0x87a <fnd_loading_display>

void auto_wash_start(void)
{
	sec_count = total_wash_time;
	
	while (sec_count > 0)
     ac6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <sec_count>
     aca:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <sec_count+0x1>
     ace:	a0 91 5a 01 	lds	r26, 0x015A	; 0x80015a <sec_count+0x2>
     ad2:	b0 91 5b 01 	lds	r27, 0x015B	; 0x80015b <sec_count+0x3>
     ad6:	89 2b       	or	r24, r25
     ad8:	8a 2b       	or	r24, r26
     ada:	8b 2b       	or	r24, r27
     adc:	09 f0       	breq	.+2      	; 0xae0 <auto_wash_start+0x12e>
     ade:	7a cf       	rjmp	.-268    	; 0x9d4 <auto_wash_start+0x22>
			{
				fnd_loading_display(&loading_rot); // 로딩 보여주기
			}
		}
	}
	OCR3C = 0;
     ae0:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     ae4:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	sec_count = 0; // 다 끝나면 끝
     ae8:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <sec_count>
     aec:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <sec_count+0x1>
     af0:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count+0x2>
     af4:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x3>
	auto_wash_mode = 4;
     af8:	84 e0       	ldi	r24, 0x04	; 4
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     b00:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
     b04:	08 95       	ret

00000b06 <__vector_16>:
extern void init_n289n();

FILE OUTPUT = FDEV_SETUP_STREAM(UART0_transmit, NULL, _FDEV_SETUP_WRITE);

ISR(TIMER0_OVF_vect)
{
     b06:	1f 92       	push	r1
     b08:	0f 92       	push	r0
     b0a:	0f b6       	in	r0, 0x3f	; 63
     b0c:	0f 92       	push	r0
     b0e:	11 24       	eor	r1, r1
     b10:	8f 93       	push	r24
     b12:	9f 93       	push	r25
     b14:	af 93       	push	r26
     b16:	bf 93       	push	r27
	TCNT0=6;
     b18:	86 e0       	ldi	r24, 0x06	; 6
     b1a:	82 bf       	out	0x32, r24	; 50
	msec_count++; 
     b1c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <msec_count>
     b20:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <msec_count+0x1>
     b24:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <msec_count+0x2>
     b28:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <msec_count+0x3>
     b2c:	01 96       	adiw	r24, 0x01	; 1
     b2e:	a1 1d       	adc	r26, r1
     b30:	b1 1d       	adc	r27, r1
     b32:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <msec_count>
     b36:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <msec_count+0x1>
     b3a:	a0 93 6a 01 	sts	0x016A, r26	; 0x80016a <msec_count+0x2>
     b3e:	b0 93 6b 01 	sts	0x016B, r27	; 0x80016b <msec_count+0x3>
	fnd_refreshrate++; 
     b42:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <fnd_refreshrate>
     b46:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <fnd_refreshrate+0x1>
     b4a:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <fnd_refreshrate+0x2>
     b4e:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <fnd_refreshrate+0x3>
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	a1 1d       	adc	r26, r1
     b56:	b1 1d       	adc	r27, r1
     b58:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <fnd_refreshrate>
     b5c:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <fnd_refreshrate+0x1>
     b60:	a0 93 66 01 	sts	0x0166, r26	; 0x800166 <fnd_refreshrate+0x2>
     b64:	b0 93 67 01 	sts	0x0167, r27	; 0x800167 <fnd_refreshrate+0x3>
	check_timer++;
     b68:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <check_timer>
     b6c:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <check_timer+0x1>
     b70:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <check_timer+0x2>
     b74:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <check_timer+0x3>
     b78:	01 96       	adiw	r24, 0x01	; 1
     b7a:	a1 1d       	adc	r26, r1
     b7c:	b1 1d       	adc	r27, r1
     b7e:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <check_timer>
     b82:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <check_timer+0x1>
     b86:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <check_timer+0x2>
     b8a:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <check_timer+0x3>
	loading_clock_change++;
     b8e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <loading_clock_change>
     b92:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <loading_clock_change+0x1>
     b96:	a0 91 5e 01 	lds	r26, 0x015E	; 0x80015e <loading_clock_change+0x2>
     b9a:	b0 91 5f 01 	lds	r27, 0x015F	; 0x80015f <loading_clock_change+0x3>
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	a1 1d       	adc	r26, r1
     ba2:	b1 1d       	adc	r27, r1
     ba4:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <loading_clock_change>
     ba8:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <loading_clock_change+0x1>
     bac:	a0 93 5e 01 	sts	0x015E, r26	; 0x80015e <loading_clock_change+0x2>
     bb0:	b0 93 5f 01 	sts	0x015F, r27	; 0x80015f <loading_clock_change+0x3>
}
     bb4:	bf 91       	pop	r27
     bb6:	af 91       	pop	r26
     bb8:	9f 91       	pop	r25
     bba:	8f 91       	pop	r24
     bbc:	0f 90       	pop	r0
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	0f 90       	pop	r0
     bc2:	1f 90       	pop	r1
     bc4:	18 95       	reti

00000bc6 <init_timer0>:
	}
}

void init_timer0()
{
	TCNT0 = 6;
     bc6:	86 e0       	ldi	r24, 0x06	; 6
     bc8:	82 bf       	out	0x32, r24	; 50
	TCCR0 |= 1 << CS02 | 0 << CS01 | 0 << CS00;
     bca:	83 b7       	in	r24, 0x33	; 51
     bcc:	84 60       	ori	r24, 0x04	; 4
     bce:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;
     bd0:	87 b7       	in	r24, 0x37	; 55
     bd2:	81 60       	ori	r24, 0x01	; 1
     bd4:	87 bf       	out	0x37, r24	; 55
     bd6:	08 95       	ret

00000bd8 <main>:
	loading_clock_change++;
}

int main(void)
{
	init_timer0();
     bd8:	f6 df       	rcall	.-20     	; 0xbc6 <init_timer0>
	init_uart0();
     bda:	f0 d0       	rcall	.+480    	; 0xdbc <init_uart0>
	init_uart1();
     bdc:	82 d1       	rcall	.+772    	; 0xee2 <init_uart1>
	init_ultrasonic();
     bde:	f2 d1       	rcall	.+996    	; 0xfc4 <init_ultrasonic>
	init_button();
     be0:	74 da       	rcall	.-2840   	; 0xca <init_button>
     be2:	0c d0       	rcall	.+24     	; 0xbfc <init_timer3_pwm>
	init_timer3_pwm();
     be4:	23 d0       	rcall	.+70     	; 0xc2c <init_n289n>
     be6:	8e e1       	ldi	r24, 0x1E	; 30
	init_n289n();
     be8:	91 e0       	ldi	r25, 0x01	; 1
     bea:	90 93 eb 07 	sts	0x07EB, r25	; 0x8007eb <__iob+0x3>
	
	stdout = &OUTPUT;  // printf가 동작 될 수 있도록 stdout에 OUTPUT화일 포인터 assign
     bee:	80 93 ea 07 	sts	0x07EA, r24	; 0x8007ea <__iob+0x2>
     bf2:	8f ef       	ldi	r24, 0xFF	; 255
     bf4:	8a bb       	out	0x1a, r24	; 26
	
	DDRA=0xff;   // led를 출력 모드로
     bf6:	78 94       	sei
     bf8:	a9 db       	rcall	.-2222   	; 0x34c <fnd_main>
	sei();     // 전역적으로 interrupt 허용
     bfa:	ff cf       	rjmp	.-2      	; 0xbfa <main+0x22>

00000bfc <init_timer3_pwm>:
	
	fnd_main();
     bfc:	82 b1       	in	r24, 0x02	; 2
     bfe:	88 62       	ori	r24, 0x28	; 40
     c00:	82 b9       	out	0x02, r24	; 2
     c02:	ab e8       	ldi	r26, 0x8B	; 139
     c04:	b0 e0       	ldi	r27, 0x00	; 0
     c06:	8c 91       	ld	r24, X
     c08:	81 60       	ori	r24, 0x01	; 1
     c0a:	8c 93       	st	X, r24
     c0c:	ea e8       	ldi	r30, 0x8A	; 138
     c0e:	f0 e0       	ldi	r31, 0x00	; 0
     c10:	80 81       	ld	r24, Z
     c12:	88 60       	ori	r24, 0x08	; 8
     c14:	80 83       	st	Z, r24
     c16:	8c 91       	ld	r24, X
     c18:	88 60       	ori	r24, 0x08	; 8
     c1a:	8c 93       	st	X, r24
     c1c:	80 81       	ld	r24, Z
     c1e:	83 60       	ori	r24, 0x03	; 3
     c20:	80 83       	st	Z, r24
     c22:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     c26:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     c2a:	08 95       	ret

00000c2c <init_n289n>:
     c2c:	e2 e6       	ldi	r30, 0x62	; 98
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	8f 73       	andi	r24, 0x3F	; 63
     c34:	80 83       	st	Z, r24
     c36:	80 81       	ld	r24, Z
     c38:	80 64       	ori	r24, 0x40	; 64
     c3a:	80 83       	st	Z, r24
     c3c:	08 95       	ret

00000c3e <washing_machine_fan_control>:
     c3e:	fc 01       	movw	r30, r24
     c40:	80 81       	ld	r24, Z
     c42:	91 81       	ldd	r25, Z+1	; 0x01
     c44:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     c48:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     c4c:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <check_timer>
     c50:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <check_timer+0x1>
     c54:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <check_timer+0x2>
     c58:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <check_timer+0x3>
     c5c:	88 38       	cpi	r24, 0x88	; 136
     c5e:	93 41       	sbci	r25, 0x13	; 19
     c60:	a1 05       	cpc	r26, r1
     c62:	b1 05       	cpc	r27, r1
     c64:	d8 f0       	brcs	.+54     	; 0xc9c <washing_machine_fan_control+0x5e>
     c66:	e2 e6       	ldi	r30, 0x62	; 98
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	80 81       	ld	r24, Z
     c6c:	8f 73       	andi	r24, 0x3F	; 63
     c6e:	80 83       	st	Z, r24
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <fan_forward>
     c78:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <fan_forward+0x1>
     c7c:	23 2b       	or	r18, r19
     c7e:	11 f0       	breq	.+4      	; 0xc84 <washing_machine_fan_control+0x46>
     c80:	80 e0       	ldi	r24, 0x00	; 0
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <fan_forward+0x1>
     c88:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <fan_forward>
     c8c:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <check_timer>
     c90:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <check_timer+0x1>
     c94:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <check_timer+0x2>
     c98:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <check_timer+0x3>
     c9c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <fan_forward>
     ca0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <fan_forward+0x1>
     ca4:	89 2b       	or	r24, r25
     ca6:	31 f0       	breq	.+12     	; 0xcb4 <washing_machine_fan_control+0x76>
     ca8:	e2 e6       	ldi	r30, 0x62	; 98
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	80 81       	ld	r24, Z
     cae:	80 64       	ori	r24, 0x40	; 64
     cb0:	80 83       	st	Z, r24
     cb2:	08 95       	ret
     cb4:	e2 e6       	ldi	r30, 0x62	; 98
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	80 68       	ori	r24, 0x80	; 128
     cbc:	80 83       	st	Z, r24
     cbe:	08 95       	ret

00000cc0 <__vector_18>:
     cc0:	1f 92       	push	r1
     cc2:	0f 92       	push	r0
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	0f 92       	push	r0
     cc8:	11 24       	eor	r1, r1
     cca:	0b b6       	in	r0, 0x3b	; 59
     ccc:	0f 92       	push	r0
     cce:	2f 93       	push	r18
     cd0:	3f 93       	push	r19
     cd2:	4f 93       	push	r20
     cd4:	5f 93       	push	r21
     cd6:	6f 93       	push	r22
     cd8:	7f 93       	push	r23
     cda:	8f 93       	push	r24
     cdc:	9f 93       	push	r25
     cde:	af 93       	push	r26
     ce0:	bf 93       	push	r27
     ce2:	ef 93       	push	r30
     ce4:	ff 93       	push	r31
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	1f 92       	push	r1
     cec:	cd b7       	in	r28, 0x3d	; 61
     cee:	de b7       	in	r29, 0x3e	; 62
     cf0:	8c b1       	in	r24, 0x0c	; 12
     cf2:	89 83       	std	Y+1, r24	; 0x01
     cf4:	89 81       	ldd	r24, Y+1	; 0x01
     cf6:	8d 30       	cpi	r24, 0x0D	; 13
     cf8:	19 f0       	breq	.+6      	; 0xd00 <__vector_18+0x40>
     cfa:	89 81       	ldd	r24, Y+1	; 0x01
     cfc:	8a 30       	cpi	r24, 0x0A	; 10
     cfe:	61 f5       	brne	.+88     	; 0xd58 <__vector_18+0x98>
     d00:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <rear>
     d04:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <rear+0x1>
     d08:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <i.1894>
     d0c:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <i.1894+0x1>
     d10:	40 e5       	ldi	r20, 0x50	; 80
     d12:	42 9f       	mul	r20, r18
     d14:	f0 01       	movw	r30, r0
     d16:	43 9f       	mul	r20, r19
     d18:	f0 0d       	add	r31, r0
     d1a:	11 24       	eor	r1, r1
     d1c:	ea 58       	subi	r30, 0x8A	; 138
     d1e:	fe 4f       	sbci	r31, 0xFE	; 254
     d20:	e8 0f       	add	r30, r24
     d22:	f9 1f       	adc	r31, r25
     d24:	10 82       	st	Z, r1
     d26:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <i.1894+0x1>
     d2a:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <i.1894>
     d2e:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <rear>
     d32:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <rear+0x1>
     d36:	01 96       	adiw	r24, 0x01	; 1
     d38:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <rear+0x1>
     d3c:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <rear>
     d40:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <rear>
     d44:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <rear+0x1>
     d48:	6a e0       	ldi	r22, 0x0A	; 10
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	d7 d2       	rcall	.+1454   	; 0x12fc <__divmodhi4>
     d4e:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <rear+0x1>
     d52:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <rear>
     d56:	1c c0       	rjmp	.+56     	; 0xd90 <__vector_18+0xd0>
     d58:	60 91 6e 01 	lds	r22, 0x016E	; 0x80016e <rear>
     d5c:	70 91 6f 01 	lds	r23, 0x016F	; 0x80016f <rear+0x1>
     d60:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <i.1894>
     d64:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <i.1894+0x1>
     d68:	9c 01       	movw	r18, r24
     d6a:	2f 5f       	subi	r18, 0xFF	; 255
     d6c:	3f 4f       	sbci	r19, 0xFF	; 255
     d6e:	30 93 6d 01 	sts	0x016D, r19	; 0x80016d <i.1894+0x1>
     d72:	20 93 6c 01 	sts	0x016C, r18	; 0x80016c <i.1894>
     d76:	49 81       	ldd	r20, Y+1	; 0x01
     d78:	50 e5       	ldi	r21, 0x50	; 80
     d7a:	56 9f       	mul	r21, r22
     d7c:	90 01       	movw	r18, r0
     d7e:	57 9f       	mul	r21, r23
     d80:	30 0d       	add	r19, r0
     d82:	11 24       	eor	r1, r1
     d84:	2a 58       	subi	r18, 0x8A	; 138
     d86:	3e 4f       	sbci	r19, 0xFE	; 254
     d88:	f9 01       	movw	r30, r18
     d8a:	e8 0f       	add	r30, r24
     d8c:	f9 1f       	adc	r31, r25
     d8e:	40 83       	st	Z, r20
     d90:	0f 90       	pop	r0
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	ff 91       	pop	r31
     d98:	ef 91       	pop	r30
     d9a:	bf 91       	pop	r27
     d9c:	af 91       	pop	r26
     d9e:	9f 91       	pop	r25
     da0:	8f 91       	pop	r24
     da2:	7f 91       	pop	r23
     da4:	6f 91       	pop	r22
     da6:	5f 91       	pop	r21
     da8:	4f 91       	pop	r20
     daa:	3f 91       	pop	r19
     dac:	2f 91       	pop	r18
     dae:	0f 90       	pop	r0
     db0:	0b be       	out	0x3b, r0	; 59
     db2:	0f 90       	pop	r0
     db4:	0f be       	out	0x3f, r0	; 63
     db6:	0f 90       	pop	r0
     db8:	1f 90       	pop	r1
     dba:	18 95       	reti

00000dbc <init_uart0>:
     dbc:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     dc0:	8f ec       	ldi	r24, 0xCF	; 207
     dc2:	89 b9       	out	0x09, r24	; 9
     dc4:	8b b1       	in	r24, 0x0b	; 11
     dc6:	82 60       	ori	r24, 0x02	; 2
     dc8:	8b b9       	out	0x0b, r24	; 11
     dca:	e5 e9       	ldi	r30, 0x95	; 149
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	86 60       	ori	r24, 0x06	; 6
     dd2:	80 83       	st	Z, r24
     dd4:	8a b1       	in	r24, 0x0a	; 10
     dd6:	88 69       	ori	r24, 0x98	; 152
     dd8:	8a b9       	out	0x0a, r24	; 10
     dda:	08 95       	ret

00000ddc <UART0_transmit>:
     ddc:	5d 9b       	sbis	0x0b, 5	; 11
     dde:	fe cf       	rjmp	.-4      	; 0xddc <UART0_transmit>
     de0:	8c b9       	out	0x0c, r24	; 12
     de2:	08 95       	ret

00000de4 <__vector_30>:
     de4:	1f 92       	push	r1
     de6:	0f 92       	push	r0
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	0f 92       	push	r0
     dec:	11 24       	eor	r1, r1
     dee:	0b b6       	in	r0, 0x3b	; 59
     df0:	0f 92       	push	r0
     df2:	2f 93       	push	r18
     df4:	3f 93       	push	r19
     df6:	4f 93       	push	r20
     df8:	5f 93       	push	r21
     dfa:	6f 93       	push	r22
     dfc:	7f 93       	push	r23
     dfe:	8f 93       	push	r24
     e00:	9f 93       	push	r25
     e02:	af 93       	push	r26
     e04:	bf 93       	push	r27
     e06:	ef 93       	push	r30
     e08:	ff 93       	push	r31
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	1f 92       	push	r1
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
     e14:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     e18:	89 83       	std	Y+1, r24	; 0x01
     e1a:	89 81       	ldd	r24, Y+1	; 0x01
     e1c:	8d 30       	cpi	r24, 0x0D	; 13
     e1e:	19 f0       	breq	.+6      	; 0xe26 <__vector_30+0x42>
     e20:	89 81       	ldd	r24, Y+1	; 0x01
     e22:	8a 30       	cpi	r24, 0x0A	; 10
     e24:	61 f5       	brne	.+88     	; 0xe7e <__vector_30+0x9a>
     e26:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <rear1>
     e2a:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <rear1+0x1>
     e2e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <i.1896>
     e32:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <i.1896+0x1>
     e36:	40 e5       	ldi	r20, 0x50	; 80
     e38:	42 9f       	mul	r20, r18
     e3a:	f0 01       	movw	r30, r0
     e3c:	43 9f       	mul	r20, r19
     e3e:	f0 0d       	add	r31, r0
     e40:	11 24       	eor	r1, r1
     e42:	ea 56       	subi	r30, 0x6A	; 106
     e44:	fb 4f       	sbci	r31, 0xFB	; 251
     e46:	e8 0f       	add	r30, r24
     e48:	f9 1f       	adc	r31, r25
     e4a:	10 82       	st	Z, r1
     e4c:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <i.1896+0x1>
     e50:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <i.1896>
     e54:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <rear1>
     e58:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <rear1+0x1>
     e5c:	01 96       	adiw	r24, 0x01	; 1
     e5e:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <rear1+0x1>
     e62:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <rear1>
     e66:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <rear1>
     e6a:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <rear1+0x1>
     e6e:	6a e0       	ldi	r22, 0x0A	; 10
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	44 d2       	rcall	.+1160   	; 0x12fc <__divmodhi4>
     e74:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <rear1+0x1>
     e78:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <rear1>
     e7c:	1c c0       	rjmp	.+56     	; 0xeb6 <__vector_30+0xd2>
     e7e:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <rear1>
     e82:	70 91 73 01 	lds	r23, 0x0173	; 0x800173 <rear1+0x1>
     e86:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <i.1896>
     e8a:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <i.1896+0x1>
     e8e:	9c 01       	movw	r18, r24
     e90:	2f 5f       	subi	r18, 0xFF	; 255
     e92:	3f 4f       	sbci	r19, 0xFF	; 255
     e94:	30 93 71 01 	sts	0x0171, r19	; 0x800171 <i.1896+0x1>
     e98:	20 93 70 01 	sts	0x0170, r18	; 0x800170 <i.1896>
     e9c:	49 81       	ldd	r20, Y+1	; 0x01
     e9e:	50 e5       	ldi	r21, 0x50	; 80
     ea0:	56 9f       	mul	r21, r22
     ea2:	90 01       	movw	r18, r0
     ea4:	57 9f       	mul	r21, r23
     ea6:	30 0d       	add	r19, r0
     ea8:	11 24       	eor	r1, r1
     eaa:	2a 56       	subi	r18, 0x6A	; 106
     eac:	3b 4f       	sbci	r19, 0xFB	; 251
     eae:	f9 01       	movw	r30, r18
     eb0:	e8 0f       	add	r30, r24
     eb2:	f9 1f       	adc	r31, r25
     eb4:	40 83       	st	Z, r20
     eb6:	0f 90       	pop	r0
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	ff 91       	pop	r31
     ebe:	ef 91       	pop	r30
     ec0:	bf 91       	pop	r27
     ec2:	af 91       	pop	r26
     ec4:	9f 91       	pop	r25
     ec6:	8f 91       	pop	r24
     ec8:	7f 91       	pop	r23
     eca:	6f 91       	pop	r22
     ecc:	5f 91       	pop	r21
     ece:	4f 91       	pop	r20
     ed0:	3f 91       	pop	r19
     ed2:	2f 91       	pop	r18
     ed4:	0f 90       	pop	r0
     ed6:	0b be       	out	0x3b, r0	; 59
     ed8:	0f 90       	pop	r0
     eda:	0f be       	out	0x3f, r0	; 63
     edc:	0f 90       	pop	r0
     ede:	1f 90       	pop	r1
     ee0:	18 95       	reti

00000ee2 <init_uart1>:
     ee2:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     ee6:	8f ec       	ldi	r24, 0xCF	; 207
     ee8:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     eec:	eb e9       	ldi	r30, 0x9B	; 155
     eee:	f0 e0       	ldi	r31, 0x00	; 0
     ef0:	80 81       	ld	r24, Z
     ef2:	82 60       	ori	r24, 0x02	; 2
     ef4:	80 83       	st	Z, r24
     ef6:	ed e9       	ldi	r30, 0x9D	; 157
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	80 81       	ld	r24, Z
     efc:	86 60       	ori	r24, 0x06	; 6
     efe:	80 83       	st	Z, r24
     f00:	ea e9       	ldi	r30, 0x9A	; 154
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	88 69       	ori	r24, 0x98	; 152
     f08:	80 83       	st	Z, r24
     f0a:	08 95       	ret

00000f0c <__vector_5>:
     f0c:	1f 92       	push	r1
     f0e:	0f 92       	push	r0
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	0b b6       	in	r0, 0x3b	; 59
     f18:	0f 92       	push	r0
     f1a:	2f 93       	push	r18
     f1c:	3f 93       	push	r19
     f1e:	4f 93       	push	r20
     f20:	5f 93       	push	r21
     f22:	6f 93       	push	r22
     f24:	7f 93       	push	r23
     f26:	8f 93       	push	r24
     f28:	9f 93       	push	r25
     f2a:	af 93       	push	r26
     f2c:	bf 93       	push	r27
     f2e:	ef 93       	push	r30
     f30:	ff 93       	push	r31
     f32:	0c 9b       	sbis	0x01, 4	; 1
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <__vector_5+0x30>
     f36:	1d bc       	out	0x2d, r1	; 45
     f38:	1c bc       	out	0x2c, r1	; 44
     f3a:	31 c0       	rjmp	.+98     	; 0xf9e <__vector_5+0x92>
     f3c:	6c b5       	in	r22, 0x2c	; 44
     f3e:	7d b5       	in	r23, 0x2d	; 45
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	ea d0       	rcall	.+468    	; 0x111a <__floatunsisf>
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	34 e2       	ldi	r19, 0x24	; 36
     f4a:	44 e7       	ldi	r20, 0x74	; 116
     f4c:	59 e4       	ldi	r21, 0x49	; 73
     f4e:	73 d1       	rcall	.+742    	; 0x1236 <__mulsf3>
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	40 e8       	ldi	r20, 0x80	; 128
     f56:	54 e4       	ldi	r21, 0x44	; 68
     f58:	6e d1       	rcall	.+732    	; 0x1236 <__mulsf3>
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	34 e2       	ldi	r19, 0x24	; 36
     f5e:	44 e7       	ldi	r20, 0x74	; 116
     f60:	5b e4       	ldi	r21, 0x4B	; 75
     f62:	42 d0       	rcall	.+132    	; 0xfe8 <__divsf3>
     f64:	a9 d0       	rcall	.+338    	; 0x10b8 <__fixsfsi>
     f66:	70 93 75 01 	sts	0x0175, r23	; 0x800175 <ultrasonic_distance+0x1>
     f6a:	60 93 74 01 	sts	0x0174, r22	; 0x800174 <ultrasonic_distance>
     f6e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <ultrasonic_distance>
     f72:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <ultrasonic_distance+0x1>
     f76:	6a e3       	ldi	r22, 0x3A	; 58
     f78:	70 e0       	ldi	r23, 0x00	; 0
     f7a:	c0 d1       	rcall	.+896    	; 0x12fc <__divmodhi4>
     f7c:	7f 93       	push	r23
     f7e:	6f 93       	push	r22
     f80:	8f e3       	ldi	r24, 0x3F	; 63
     f82:	91 e0       	ldi	r25, 0x01	; 1
     f84:	9f 93       	push	r25
     f86:	8f 93       	push	r24
     f88:	86 eb       	ldi	r24, 0xB6	; 182
     f8a:	97 e0       	ldi	r25, 0x07	; 7
     f8c:	9f 93       	push	r25
     f8e:	8f 93       	push	r24
     f90:	fe d1       	rcall	.+1020   	; 0x138e <sprintf>
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	0f 90       	pop	r0
     f9e:	ff 91       	pop	r31
     fa0:	ef 91       	pop	r30
     fa2:	bf 91       	pop	r27
     fa4:	af 91       	pop	r26
     fa6:	9f 91       	pop	r25
     fa8:	8f 91       	pop	r24
     faa:	7f 91       	pop	r23
     fac:	6f 91       	pop	r22
     fae:	5f 91       	pop	r21
     fb0:	4f 91       	pop	r20
     fb2:	3f 91       	pop	r19
     fb4:	2f 91       	pop	r18
     fb6:	0f 90       	pop	r0
     fb8:	0b be       	out	0x3b, r0	; 59
     fba:	0f 90       	pop	r0
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	0f 90       	pop	r0
     fc0:	1f 90       	pop	r1
     fc2:	18 95       	reti

00000fc4 <init_ultrasonic>:
     fc4:	e4 e6       	ldi	r30, 0x64	; 100
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	80 81       	ld	r24, Z
     fca:	80 61       	ori	r24, 0x10	; 16
     fcc:	80 83       	st	Z, r24
     fce:	82 b1       	in	r24, 0x02	; 2
     fd0:	8f 7e       	andi	r24, 0xEF	; 239
     fd2:	82 b9       	out	0x02, r24	; 2
     fd4:	8a b7       	in	r24, 0x3a	; 58
     fd6:	81 60       	ori	r24, 0x01	; 1
     fd8:	8a bf       	out	0x3a, r24	; 58
     fda:	8e b5       	in	r24, 0x2e	; 46
     fdc:	85 60       	ori	r24, 0x05	; 5
     fde:	8e bd       	out	0x2e, r24	; 46
     fe0:	89 b7       	in	r24, 0x39	; 57
     fe2:	80 61       	ori	r24, 0x10	; 16
     fe4:	89 bf       	out	0x39, r24	; 57
     fe6:	08 95       	ret

00000fe8 <__divsf3>:
     fe8:	0c d0       	rcall	.+24     	; 0x1002 <__divsf3x>
     fea:	eb c0       	rjmp	.+470    	; 0x11c2 <__fp_round>
     fec:	e3 d0       	rcall	.+454    	; 0x11b4 <__fp_pscB>
     fee:	40 f0       	brcs	.+16     	; 0x1000 <__DATA_REGION_LENGTH__>
     ff0:	da d0       	rcall	.+436    	; 0x11a6 <__fp_pscA>
     ff2:	30 f0       	brcs	.+12     	; 0x1000 <__DATA_REGION_LENGTH__>
     ff4:	21 f4       	brne	.+8      	; 0xffe <__divsf3+0x16>
     ff6:	5f 3f       	cpi	r21, 0xFF	; 255
     ff8:	19 f0       	breq	.+6      	; 0x1000 <__DATA_REGION_LENGTH__>
     ffa:	cc c0       	rjmp	.+408    	; 0x1194 <__fp_inf>
     ffc:	51 11       	cpse	r21, r1
     ffe:	15 c1       	rjmp	.+554    	; 0x122a <__fp_szero>
    1000:	cf c0       	rjmp	.+414    	; 0x11a0 <__fp_nan>

00001002 <__divsf3x>:
    1002:	f0 d0       	rcall	.+480    	; 0x11e4 <__fp_split3>
    1004:	98 f3       	brcs	.-26     	; 0xfec <__divsf3+0x4>

00001006 <__divsf3_pse>:
    1006:	99 23       	and	r25, r25
    1008:	c9 f3       	breq	.-14     	; 0xffc <__divsf3+0x14>
    100a:	55 23       	and	r21, r21
    100c:	b1 f3       	breq	.-20     	; 0xffa <__divsf3+0x12>
    100e:	95 1b       	sub	r25, r21
    1010:	55 0b       	sbc	r21, r21
    1012:	bb 27       	eor	r27, r27
    1014:	aa 27       	eor	r26, r26
    1016:	62 17       	cp	r22, r18
    1018:	73 07       	cpc	r23, r19
    101a:	84 07       	cpc	r24, r20
    101c:	38 f0       	brcs	.+14     	; 0x102c <__divsf3_pse+0x26>
    101e:	9f 5f       	subi	r25, 0xFF	; 255
    1020:	5f 4f       	sbci	r21, 0xFF	; 255
    1022:	22 0f       	add	r18, r18
    1024:	33 1f       	adc	r19, r19
    1026:	44 1f       	adc	r20, r20
    1028:	aa 1f       	adc	r26, r26
    102a:	a9 f3       	breq	.-22     	; 0x1016 <__divsf3_pse+0x10>
    102c:	33 d0       	rcall	.+102    	; 0x1094 <__divsf3_pse+0x8e>
    102e:	0e 2e       	mov	r0, r30
    1030:	3a f0       	brmi	.+14     	; 0x1040 <__divsf3_pse+0x3a>
    1032:	e0 e8       	ldi	r30, 0x80	; 128
    1034:	30 d0       	rcall	.+96     	; 0x1096 <__divsf3_pse+0x90>
    1036:	91 50       	subi	r25, 0x01	; 1
    1038:	50 40       	sbci	r21, 0x00	; 0
    103a:	e6 95       	lsr	r30
    103c:	00 1c       	adc	r0, r0
    103e:	ca f7       	brpl	.-14     	; 0x1032 <__divsf3_pse+0x2c>
    1040:	29 d0       	rcall	.+82     	; 0x1094 <__divsf3_pse+0x8e>
    1042:	fe 2f       	mov	r31, r30
    1044:	27 d0       	rcall	.+78     	; 0x1094 <__divsf3_pse+0x8e>
    1046:	66 0f       	add	r22, r22
    1048:	77 1f       	adc	r23, r23
    104a:	88 1f       	adc	r24, r24
    104c:	bb 1f       	adc	r27, r27
    104e:	26 17       	cp	r18, r22
    1050:	37 07       	cpc	r19, r23
    1052:	48 07       	cpc	r20, r24
    1054:	ab 07       	cpc	r26, r27
    1056:	b0 e8       	ldi	r27, 0x80	; 128
    1058:	09 f0       	breq	.+2      	; 0x105c <__divsf3_pse+0x56>
    105a:	bb 0b       	sbc	r27, r27
    105c:	80 2d       	mov	r24, r0
    105e:	bf 01       	movw	r22, r30
    1060:	ff 27       	eor	r31, r31
    1062:	93 58       	subi	r25, 0x83	; 131
    1064:	5f 4f       	sbci	r21, 0xFF	; 255
    1066:	2a f0       	brmi	.+10     	; 0x1072 <__divsf3_pse+0x6c>
    1068:	9e 3f       	cpi	r25, 0xFE	; 254
    106a:	51 05       	cpc	r21, r1
    106c:	68 f0       	brcs	.+26     	; 0x1088 <__divsf3_pse+0x82>
    106e:	92 c0       	rjmp	.+292    	; 0x1194 <__fp_inf>
    1070:	dc c0       	rjmp	.+440    	; 0x122a <__fp_szero>
    1072:	5f 3f       	cpi	r21, 0xFF	; 255
    1074:	ec f3       	brlt	.-6      	; 0x1070 <__divsf3_pse+0x6a>
    1076:	98 3e       	cpi	r25, 0xE8	; 232
    1078:	dc f3       	brlt	.-10     	; 0x1070 <__divsf3_pse+0x6a>
    107a:	86 95       	lsr	r24
    107c:	77 95       	ror	r23
    107e:	67 95       	ror	r22
    1080:	b7 95       	ror	r27
    1082:	f7 95       	ror	r31
    1084:	9f 5f       	subi	r25, 0xFF	; 255
    1086:	c9 f7       	brne	.-14     	; 0x107a <__divsf3_pse+0x74>
    1088:	88 0f       	add	r24, r24
    108a:	91 1d       	adc	r25, r1
    108c:	96 95       	lsr	r25
    108e:	87 95       	ror	r24
    1090:	97 f9       	bld	r25, 7
    1092:	08 95       	ret
    1094:	e1 e0       	ldi	r30, 0x01	; 1
    1096:	66 0f       	add	r22, r22
    1098:	77 1f       	adc	r23, r23
    109a:	88 1f       	adc	r24, r24
    109c:	bb 1f       	adc	r27, r27
    109e:	62 17       	cp	r22, r18
    10a0:	73 07       	cpc	r23, r19
    10a2:	84 07       	cpc	r24, r20
    10a4:	ba 07       	cpc	r27, r26
    10a6:	20 f0       	brcs	.+8      	; 0x10b0 <__divsf3_pse+0xaa>
    10a8:	62 1b       	sub	r22, r18
    10aa:	73 0b       	sbc	r23, r19
    10ac:	84 0b       	sbc	r24, r20
    10ae:	ba 0b       	sbc	r27, r26
    10b0:	ee 1f       	adc	r30, r30
    10b2:	88 f7       	brcc	.-30     	; 0x1096 <__divsf3_pse+0x90>
    10b4:	e0 95       	com	r30
    10b6:	08 95       	ret

000010b8 <__fixsfsi>:
    10b8:	04 d0       	rcall	.+8      	; 0x10c2 <__fixunssfsi>
    10ba:	68 94       	set
    10bc:	b1 11       	cpse	r27, r1
    10be:	b5 c0       	rjmp	.+362    	; 0x122a <__fp_szero>
    10c0:	08 95       	ret

000010c2 <__fixunssfsi>:
    10c2:	98 d0       	rcall	.+304    	; 0x11f4 <__fp_splitA>
    10c4:	88 f0       	brcs	.+34     	; 0x10e8 <__fixunssfsi+0x26>
    10c6:	9f 57       	subi	r25, 0x7F	; 127
    10c8:	90 f0       	brcs	.+36     	; 0x10ee <__fixunssfsi+0x2c>
    10ca:	b9 2f       	mov	r27, r25
    10cc:	99 27       	eor	r25, r25
    10ce:	b7 51       	subi	r27, 0x17	; 23
    10d0:	a0 f0       	brcs	.+40     	; 0x10fa <__fixunssfsi+0x38>
    10d2:	d1 f0       	breq	.+52     	; 0x1108 <__stack+0x9>
    10d4:	66 0f       	add	r22, r22
    10d6:	77 1f       	adc	r23, r23
    10d8:	88 1f       	adc	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	1a f0       	brmi	.+6      	; 0x10e4 <__fixunssfsi+0x22>
    10de:	ba 95       	dec	r27
    10e0:	c9 f7       	brne	.-14     	; 0x10d4 <__fixunssfsi+0x12>
    10e2:	12 c0       	rjmp	.+36     	; 0x1108 <__stack+0x9>
    10e4:	b1 30       	cpi	r27, 0x01	; 1
    10e6:	81 f0       	breq	.+32     	; 0x1108 <__stack+0x9>
    10e8:	9f d0       	rcall	.+318    	; 0x1228 <__fp_zero>
    10ea:	b1 e0       	ldi	r27, 0x01	; 1
    10ec:	08 95       	ret
    10ee:	9c c0       	rjmp	.+312    	; 0x1228 <__fp_zero>
    10f0:	67 2f       	mov	r22, r23
    10f2:	78 2f       	mov	r23, r24
    10f4:	88 27       	eor	r24, r24
    10f6:	b8 5f       	subi	r27, 0xF8	; 248
    10f8:	39 f0       	breq	.+14     	; 0x1108 <__stack+0x9>
    10fa:	b9 3f       	cpi	r27, 0xF9	; 249
    10fc:	cc f3       	brlt	.-14     	; 0x10f0 <__fixunssfsi+0x2e>
    10fe:	86 95       	lsr	r24
    1100:	77 95       	ror	r23
    1102:	67 95       	ror	r22
    1104:	b3 95       	inc	r27
    1106:	d9 f7       	brne	.-10     	; 0x10fe <__fixunssfsi+0x3c>
    1108:	3e f4       	brtc	.+14     	; 0x1118 <__stack+0x19>
    110a:	90 95       	com	r25
    110c:	80 95       	com	r24
    110e:	70 95       	com	r23
    1110:	61 95       	neg	r22
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	8f 4f       	sbci	r24, 0xFF	; 255
    1116:	9f 4f       	sbci	r25, 0xFF	; 255
    1118:	08 95       	ret

0000111a <__floatunsisf>:
    111a:	e8 94       	clt
    111c:	09 c0       	rjmp	.+18     	; 0x1130 <__floatsisf+0x12>

0000111e <__floatsisf>:
    111e:	97 fb       	bst	r25, 7
    1120:	3e f4       	brtc	.+14     	; 0x1130 <__floatsisf+0x12>
    1122:	90 95       	com	r25
    1124:	80 95       	com	r24
    1126:	70 95       	com	r23
    1128:	61 95       	neg	r22
    112a:	7f 4f       	sbci	r23, 0xFF	; 255
    112c:	8f 4f       	sbci	r24, 0xFF	; 255
    112e:	9f 4f       	sbci	r25, 0xFF	; 255
    1130:	99 23       	and	r25, r25
    1132:	a9 f0       	breq	.+42     	; 0x115e <__floatsisf+0x40>
    1134:	f9 2f       	mov	r31, r25
    1136:	96 e9       	ldi	r25, 0x96	; 150
    1138:	bb 27       	eor	r27, r27
    113a:	93 95       	inc	r25
    113c:	f6 95       	lsr	r31
    113e:	87 95       	ror	r24
    1140:	77 95       	ror	r23
    1142:	67 95       	ror	r22
    1144:	b7 95       	ror	r27
    1146:	f1 11       	cpse	r31, r1
    1148:	f8 cf       	rjmp	.-16     	; 0x113a <__floatsisf+0x1c>
    114a:	fa f4       	brpl	.+62     	; 0x118a <__floatsisf+0x6c>
    114c:	bb 0f       	add	r27, r27
    114e:	11 f4       	brne	.+4      	; 0x1154 <__floatsisf+0x36>
    1150:	60 ff       	sbrs	r22, 0
    1152:	1b c0       	rjmp	.+54     	; 0x118a <__floatsisf+0x6c>
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	8f 4f       	sbci	r24, 0xFF	; 255
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	16 c0       	rjmp	.+44     	; 0x118a <__floatsisf+0x6c>
    115e:	88 23       	and	r24, r24
    1160:	11 f0       	breq	.+4      	; 0x1166 <__floatsisf+0x48>
    1162:	96 e9       	ldi	r25, 0x96	; 150
    1164:	11 c0       	rjmp	.+34     	; 0x1188 <__floatsisf+0x6a>
    1166:	77 23       	and	r23, r23
    1168:	21 f0       	breq	.+8      	; 0x1172 <__floatsisf+0x54>
    116a:	9e e8       	ldi	r25, 0x8E	; 142
    116c:	87 2f       	mov	r24, r23
    116e:	76 2f       	mov	r23, r22
    1170:	05 c0       	rjmp	.+10     	; 0x117c <__floatsisf+0x5e>
    1172:	66 23       	and	r22, r22
    1174:	71 f0       	breq	.+28     	; 0x1192 <__floatsisf+0x74>
    1176:	96 e8       	ldi	r25, 0x86	; 134
    1178:	86 2f       	mov	r24, r22
    117a:	70 e0       	ldi	r23, 0x00	; 0
    117c:	60 e0       	ldi	r22, 0x00	; 0
    117e:	2a f0       	brmi	.+10     	; 0x118a <__floatsisf+0x6c>
    1180:	9a 95       	dec	r25
    1182:	66 0f       	add	r22, r22
    1184:	77 1f       	adc	r23, r23
    1186:	88 1f       	adc	r24, r24
    1188:	da f7       	brpl	.-10     	; 0x1180 <__floatsisf+0x62>
    118a:	88 0f       	add	r24, r24
    118c:	96 95       	lsr	r25
    118e:	87 95       	ror	r24
    1190:	97 f9       	bld	r25, 7
    1192:	08 95       	ret

00001194 <__fp_inf>:
    1194:	97 f9       	bld	r25, 7
    1196:	9f 67       	ori	r25, 0x7F	; 127
    1198:	80 e8       	ldi	r24, 0x80	; 128
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	08 95       	ret

000011a0 <__fp_nan>:
    11a0:	9f ef       	ldi	r25, 0xFF	; 255
    11a2:	80 ec       	ldi	r24, 0xC0	; 192
    11a4:	08 95       	ret

000011a6 <__fp_pscA>:
    11a6:	00 24       	eor	r0, r0
    11a8:	0a 94       	dec	r0
    11aa:	16 16       	cp	r1, r22
    11ac:	17 06       	cpc	r1, r23
    11ae:	18 06       	cpc	r1, r24
    11b0:	09 06       	cpc	r0, r25
    11b2:	08 95       	ret

000011b4 <__fp_pscB>:
    11b4:	00 24       	eor	r0, r0
    11b6:	0a 94       	dec	r0
    11b8:	12 16       	cp	r1, r18
    11ba:	13 06       	cpc	r1, r19
    11bc:	14 06       	cpc	r1, r20
    11be:	05 06       	cpc	r0, r21
    11c0:	08 95       	ret

000011c2 <__fp_round>:
    11c2:	09 2e       	mov	r0, r25
    11c4:	03 94       	inc	r0
    11c6:	00 0c       	add	r0, r0
    11c8:	11 f4       	brne	.+4      	; 0x11ce <__fp_round+0xc>
    11ca:	88 23       	and	r24, r24
    11cc:	52 f0       	brmi	.+20     	; 0x11e2 <__fp_round+0x20>
    11ce:	bb 0f       	add	r27, r27
    11d0:	40 f4       	brcc	.+16     	; 0x11e2 <__fp_round+0x20>
    11d2:	bf 2b       	or	r27, r31
    11d4:	11 f4       	brne	.+4      	; 0x11da <__fp_round+0x18>
    11d6:	60 ff       	sbrs	r22, 0
    11d8:	04 c0       	rjmp	.+8      	; 0x11e2 <__fp_round+0x20>
    11da:	6f 5f       	subi	r22, 0xFF	; 255
    11dc:	7f 4f       	sbci	r23, 0xFF	; 255
    11de:	8f 4f       	sbci	r24, 0xFF	; 255
    11e0:	9f 4f       	sbci	r25, 0xFF	; 255
    11e2:	08 95       	ret

000011e4 <__fp_split3>:
    11e4:	57 fd       	sbrc	r21, 7
    11e6:	90 58       	subi	r25, 0x80	; 128
    11e8:	44 0f       	add	r20, r20
    11ea:	55 1f       	adc	r21, r21
    11ec:	59 f0       	breq	.+22     	; 0x1204 <__fp_splitA+0x10>
    11ee:	5f 3f       	cpi	r21, 0xFF	; 255
    11f0:	71 f0       	breq	.+28     	; 0x120e <__fp_splitA+0x1a>
    11f2:	47 95       	ror	r20

000011f4 <__fp_splitA>:
    11f4:	88 0f       	add	r24, r24
    11f6:	97 fb       	bst	r25, 7
    11f8:	99 1f       	adc	r25, r25
    11fa:	61 f0       	breq	.+24     	; 0x1214 <__fp_splitA+0x20>
    11fc:	9f 3f       	cpi	r25, 0xFF	; 255
    11fe:	79 f0       	breq	.+30     	; 0x121e <__fp_splitA+0x2a>
    1200:	87 95       	ror	r24
    1202:	08 95       	ret
    1204:	12 16       	cp	r1, r18
    1206:	13 06       	cpc	r1, r19
    1208:	14 06       	cpc	r1, r20
    120a:	55 1f       	adc	r21, r21
    120c:	f2 cf       	rjmp	.-28     	; 0x11f2 <__fp_split3+0xe>
    120e:	46 95       	lsr	r20
    1210:	f1 df       	rcall	.-30     	; 0x11f4 <__fp_splitA>
    1212:	08 c0       	rjmp	.+16     	; 0x1224 <__fp_splitA+0x30>
    1214:	16 16       	cp	r1, r22
    1216:	17 06       	cpc	r1, r23
    1218:	18 06       	cpc	r1, r24
    121a:	99 1f       	adc	r25, r25
    121c:	f1 cf       	rjmp	.-30     	; 0x1200 <__fp_splitA+0xc>
    121e:	86 95       	lsr	r24
    1220:	71 05       	cpc	r23, r1
    1222:	61 05       	cpc	r22, r1
    1224:	08 94       	sec
    1226:	08 95       	ret

00001228 <__fp_zero>:
    1228:	e8 94       	clt

0000122a <__fp_szero>:
    122a:	bb 27       	eor	r27, r27
    122c:	66 27       	eor	r22, r22
    122e:	77 27       	eor	r23, r23
    1230:	cb 01       	movw	r24, r22
    1232:	97 f9       	bld	r25, 7
    1234:	08 95       	ret

00001236 <__mulsf3>:
    1236:	0b d0       	rcall	.+22     	; 0x124e <__mulsf3x>
    1238:	c4 cf       	rjmp	.-120    	; 0x11c2 <__fp_round>
    123a:	b5 df       	rcall	.-150    	; 0x11a6 <__fp_pscA>
    123c:	28 f0       	brcs	.+10     	; 0x1248 <__mulsf3+0x12>
    123e:	ba df       	rcall	.-140    	; 0x11b4 <__fp_pscB>
    1240:	18 f0       	brcs	.+6      	; 0x1248 <__mulsf3+0x12>
    1242:	95 23       	and	r25, r21
    1244:	09 f0       	breq	.+2      	; 0x1248 <__mulsf3+0x12>
    1246:	a6 cf       	rjmp	.-180    	; 0x1194 <__fp_inf>
    1248:	ab cf       	rjmp	.-170    	; 0x11a0 <__fp_nan>
    124a:	11 24       	eor	r1, r1
    124c:	ee cf       	rjmp	.-36     	; 0x122a <__fp_szero>

0000124e <__mulsf3x>:
    124e:	ca df       	rcall	.-108    	; 0x11e4 <__fp_split3>
    1250:	a0 f3       	brcs	.-24     	; 0x123a <__mulsf3+0x4>

00001252 <__mulsf3_pse>:
    1252:	95 9f       	mul	r25, r21
    1254:	d1 f3       	breq	.-12     	; 0x124a <__mulsf3+0x14>
    1256:	95 0f       	add	r25, r21
    1258:	50 e0       	ldi	r21, 0x00	; 0
    125a:	55 1f       	adc	r21, r21
    125c:	62 9f       	mul	r22, r18
    125e:	f0 01       	movw	r30, r0
    1260:	72 9f       	mul	r23, r18
    1262:	bb 27       	eor	r27, r27
    1264:	f0 0d       	add	r31, r0
    1266:	b1 1d       	adc	r27, r1
    1268:	63 9f       	mul	r22, r19
    126a:	aa 27       	eor	r26, r26
    126c:	f0 0d       	add	r31, r0
    126e:	b1 1d       	adc	r27, r1
    1270:	aa 1f       	adc	r26, r26
    1272:	64 9f       	mul	r22, r20
    1274:	66 27       	eor	r22, r22
    1276:	b0 0d       	add	r27, r0
    1278:	a1 1d       	adc	r26, r1
    127a:	66 1f       	adc	r22, r22
    127c:	82 9f       	mul	r24, r18
    127e:	22 27       	eor	r18, r18
    1280:	b0 0d       	add	r27, r0
    1282:	a1 1d       	adc	r26, r1
    1284:	62 1f       	adc	r22, r18
    1286:	73 9f       	mul	r23, r19
    1288:	b0 0d       	add	r27, r0
    128a:	a1 1d       	adc	r26, r1
    128c:	62 1f       	adc	r22, r18
    128e:	83 9f       	mul	r24, r19
    1290:	a0 0d       	add	r26, r0
    1292:	61 1d       	adc	r22, r1
    1294:	22 1f       	adc	r18, r18
    1296:	74 9f       	mul	r23, r20
    1298:	33 27       	eor	r19, r19
    129a:	a0 0d       	add	r26, r0
    129c:	61 1d       	adc	r22, r1
    129e:	23 1f       	adc	r18, r19
    12a0:	84 9f       	mul	r24, r20
    12a2:	60 0d       	add	r22, r0
    12a4:	21 1d       	adc	r18, r1
    12a6:	82 2f       	mov	r24, r18
    12a8:	76 2f       	mov	r23, r22
    12aa:	6a 2f       	mov	r22, r26
    12ac:	11 24       	eor	r1, r1
    12ae:	9f 57       	subi	r25, 0x7F	; 127
    12b0:	50 40       	sbci	r21, 0x00	; 0
    12b2:	8a f0       	brmi	.+34     	; 0x12d6 <__mulsf3_pse+0x84>
    12b4:	e1 f0       	breq	.+56     	; 0x12ee <__mulsf3_pse+0x9c>
    12b6:	88 23       	and	r24, r24
    12b8:	4a f0       	brmi	.+18     	; 0x12cc <__mulsf3_pse+0x7a>
    12ba:	ee 0f       	add	r30, r30
    12bc:	ff 1f       	adc	r31, r31
    12be:	bb 1f       	adc	r27, r27
    12c0:	66 1f       	adc	r22, r22
    12c2:	77 1f       	adc	r23, r23
    12c4:	88 1f       	adc	r24, r24
    12c6:	91 50       	subi	r25, 0x01	; 1
    12c8:	50 40       	sbci	r21, 0x00	; 0
    12ca:	a9 f7       	brne	.-22     	; 0x12b6 <__mulsf3_pse+0x64>
    12cc:	9e 3f       	cpi	r25, 0xFE	; 254
    12ce:	51 05       	cpc	r21, r1
    12d0:	70 f0       	brcs	.+28     	; 0x12ee <__mulsf3_pse+0x9c>
    12d2:	60 cf       	rjmp	.-320    	; 0x1194 <__fp_inf>
    12d4:	aa cf       	rjmp	.-172    	; 0x122a <__fp_szero>
    12d6:	5f 3f       	cpi	r21, 0xFF	; 255
    12d8:	ec f3       	brlt	.-6      	; 0x12d4 <__mulsf3_pse+0x82>
    12da:	98 3e       	cpi	r25, 0xE8	; 232
    12dc:	dc f3       	brlt	.-10     	; 0x12d4 <__mulsf3_pse+0x82>
    12de:	86 95       	lsr	r24
    12e0:	77 95       	ror	r23
    12e2:	67 95       	ror	r22
    12e4:	b7 95       	ror	r27
    12e6:	f7 95       	ror	r31
    12e8:	e7 95       	ror	r30
    12ea:	9f 5f       	subi	r25, 0xFF	; 255
    12ec:	c1 f7       	brne	.-16     	; 0x12de <__mulsf3_pse+0x8c>
    12ee:	fe 2b       	or	r31, r30
    12f0:	88 0f       	add	r24, r24
    12f2:	91 1d       	adc	r25, r1
    12f4:	96 95       	lsr	r25
    12f6:	87 95       	ror	r24
    12f8:	97 f9       	bld	r25, 7
    12fa:	08 95       	ret

000012fc <__divmodhi4>:
    12fc:	97 fb       	bst	r25, 7
    12fe:	07 2e       	mov	r0, r23
    1300:	16 f4       	brtc	.+4      	; 0x1306 <__divmodhi4+0xa>
    1302:	00 94       	com	r0
    1304:	06 d0       	rcall	.+12     	; 0x1312 <__divmodhi4_neg1>
    1306:	77 fd       	sbrc	r23, 7
    1308:	08 d0       	rcall	.+16     	; 0x131a <__divmodhi4_neg2>
    130a:	2d d0       	rcall	.+90     	; 0x1366 <__udivmodhi4>
    130c:	07 fc       	sbrc	r0, 7
    130e:	05 d0       	rcall	.+10     	; 0x131a <__divmodhi4_neg2>
    1310:	3e f4       	brtc	.+14     	; 0x1320 <__divmodhi4_exit>

00001312 <__divmodhi4_neg1>:
    1312:	90 95       	com	r25
    1314:	81 95       	neg	r24
    1316:	9f 4f       	sbci	r25, 0xFF	; 255
    1318:	08 95       	ret

0000131a <__divmodhi4_neg2>:
    131a:	70 95       	com	r23
    131c:	61 95       	neg	r22
    131e:	7f 4f       	sbci	r23, 0xFF	; 255

00001320 <__divmodhi4_exit>:
    1320:	08 95       	ret

00001322 <__udivmodsi4>:
    1322:	a1 e2       	ldi	r26, 0x21	; 33
    1324:	1a 2e       	mov	r1, r26
    1326:	aa 1b       	sub	r26, r26
    1328:	bb 1b       	sub	r27, r27
    132a:	fd 01       	movw	r30, r26
    132c:	0d c0       	rjmp	.+26     	; 0x1348 <__udivmodsi4_ep>

0000132e <__udivmodsi4_loop>:
    132e:	aa 1f       	adc	r26, r26
    1330:	bb 1f       	adc	r27, r27
    1332:	ee 1f       	adc	r30, r30
    1334:	ff 1f       	adc	r31, r31
    1336:	a2 17       	cp	r26, r18
    1338:	b3 07       	cpc	r27, r19
    133a:	e4 07       	cpc	r30, r20
    133c:	f5 07       	cpc	r31, r21
    133e:	20 f0       	brcs	.+8      	; 0x1348 <__udivmodsi4_ep>
    1340:	a2 1b       	sub	r26, r18
    1342:	b3 0b       	sbc	r27, r19
    1344:	e4 0b       	sbc	r30, r20
    1346:	f5 0b       	sbc	r31, r21

00001348 <__udivmodsi4_ep>:
    1348:	66 1f       	adc	r22, r22
    134a:	77 1f       	adc	r23, r23
    134c:	88 1f       	adc	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	1a 94       	dec	r1
    1352:	69 f7       	brne	.-38     	; 0x132e <__udivmodsi4_loop>
    1354:	60 95       	com	r22
    1356:	70 95       	com	r23
    1358:	80 95       	com	r24
    135a:	90 95       	com	r25
    135c:	9b 01       	movw	r18, r22
    135e:	ac 01       	movw	r20, r24
    1360:	bd 01       	movw	r22, r26
    1362:	cf 01       	movw	r24, r30
    1364:	08 95       	ret

00001366 <__udivmodhi4>:
    1366:	aa 1b       	sub	r26, r26
    1368:	bb 1b       	sub	r27, r27
    136a:	51 e1       	ldi	r21, 0x11	; 17
    136c:	07 c0       	rjmp	.+14     	; 0x137c <__udivmodhi4_ep>

0000136e <__udivmodhi4_loop>:
    136e:	aa 1f       	adc	r26, r26
    1370:	bb 1f       	adc	r27, r27
    1372:	a6 17       	cp	r26, r22
    1374:	b7 07       	cpc	r27, r23
    1376:	10 f0       	brcs	.+4      	; 0x137c <__udivmodhi4_ep>
    1378:	a6 1b       	sub	r26, r22
    137a:	b7 0b       	sbc	r27, r23

0000137c <__udivmodhi4_ep>:
    137c:	88 1f       	adc	r24, r24
    137e:	99 1f       	adc	r25, r25
    1380:	5a 95       	dec	r21
    1382:	a9 f7       	brne	.-22     	; 0x136e <__udivmodhi4_loop>
    1384:	80 95       	com	r24
    1386:	90 95       	com	r25
    1388:	bc 01       	movw	r22, r24
    138a:	cd 01       	movw	r24, r26
    138c:	08 95       	ret

0000138e <sprintf>:
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	2e 97       	sbiw	r28, 0x0e	; 14
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	0d 89       	ldd	r16, Y+21	; 0x15
    13a8:	1e 89       	ldd	r17, Y+22	; 0x16
    13aa:	86 e0       	ldi	r24, 0x06	; 6
    13ac:	8c 83       	std	Y+4, r24	; 0x04
    13ae:	1a 83       	std	Y+2, r17	; 0x02
    13b0:	09 83       	std	Y+1, r16	; 0x01
    13b2:	8f ef       	ldi	r24, 0xFF	; 255
    13b4:	9f e7       	ldi	r25, 0x7F	; 127
    13b6:	9e 83       	std	Y+6, r25	; 0x06
    13b8:	8d 83       	std	Y+5, r24	; 0x05
    13ba:	ae 01       	movw	r20, r28
    13bc:	47 5e       	subi	r20, 0xE7	; 231
    13be:	5f 4f       	sbci	r21, 0xFF	; 255
    13c0:	6f 89       	ldd	r22, Y+23	; 0x17
    13c2:	78 8d       	ldd	r23, Y+24	; 0x18
    13c4:	ce 01       	movw	r24, r28
    13c6:	01 96       	adiw	r24, 0x01	; 1
    13c8:	10 d0       	rcall	.+32     	; 0x13ea <vfprintf>
    13ca:	ef 81       	ldd	r30, Y+7	; 0x07
    13cc:	f8 85       	ldd	r31, Y+8	; 0x08
    13ce:	e0 0f       	add	r30, r16
    13d0:	f1 1f       	adc	r31, r17
    13d2:	10 82       	st	Z, r1
    13d4:	2e 96       	adiw	r28, 0x0e	; 14
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	de bf       	out	0x3e, r29	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	cd bf       	out	0x3d, r28	; 61
    13e0:	df 91       	pop	r29
    13e2:	cf 91       	pop	r28
    13e4:	1f 91       	pop	r17
    13e6:	0f 91       	pop	r16
    13e8:	08 95       	ret

000013ea <vfprintf>:
    13ea:	2f 92       	push	r2
    13ec:	3f 92       	push	r3
    13ee:	4f 92       	push	r4
    13f0:	5f 92       	push	r5
    13f2:	6f 92       	push	r6
    13f4:	7f 92       	push	r7
    13f6:	8f 92       	push	r8
    13f8:	9f 92       	push	r9
    13fa:	af 92       	push	r10
    13fc:	bf 92       	push	r11
    13fe:	cf 92       	push	r12
    1400:	df 92       	push	r13
    1402:	ef 92       	push	r14
    1404:	ff 92       	push	r15
    1406:	0f 93       	push	r16
    1408:	1f 93       	push	r17
    140a:	cf 93       	push	r28
    140c:	df 93       	push	r29
    140e:	cd b7       	in	r28, 0x3d	; 61
    1410:	de b7       	in	r29, 0x3e	; 62
    1412:	2b 97       	sbiw	r28, 0x0b	; 11
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	cd bf       	out	0x3d, r28	; 61
    141e:	6c 01       	movw	r12, r24
    1420:	7b 01       	movw	r14, r22
    1422:	8a 01       	movw	r16, r20
    1424:	fc 01       	movw	r30, r24
    1426:	17 82       	std	Z+7, r1	; 0x07
    1428:	16 82       	std	Z+6, r1	; 0x06
    142a:	83 81       	ldd	r24, Z+3	; 0x03
    142c:	81 ff       	sbrs	r24, 1
    142e:	bf c1       	rjmp	.+894    	; 0x17ae <vfprintf+0x3c4>
    1430:	ce 01       	movw	r24, r28
    1432:	01 96       	adiw	r24, 0x01	; 1
    1434:	3c 01       	movw	r6, r24
    1436:	f6 01       	movw	r30, r12
    1438:	93 81       	ldd	r25, Z+3	; 0x03
    143a:	f7 01       	movw	r30, r14
    143c:	93 fd       	sbrc	r25, 3
    143e:	85 91       	lpm	r24, Z+
    1440:	93 ff       	sbrs	r25, 3
    1442:	81 91       	ld	r24, Z+
    1444:	7f 01       	movw	r14, r30
    1446:	88 23       	and	r24, r24
    1448:	09 f4       	brne	.+2      	; 0x144c <vfprintf+0x62>
    144a:	ad c1       	rjmp	.+858    	; 0x17a6 <vfprintf+0x3bc>
    144c:	85 32       	cpi	r24, 0x25	; 37
    144e:	39 f4       	brne	.+14     	; 0x145e <vfprintf+0x74>
    1450:	93 fd       	sbrc	r25, 3
    1452:	85 91       	lpm	r24, Z+
    1454:	93 ff       	sbrs	r25, 3
    1456:	81 91       	ld	r24, Z+
    1458:	7f 01       	movw	r14, r30
    145a:	85 32       	cpi	r24, 0x25	; 37
    145c:	21 f4       	brne	.+8      	; 0x1466 <vfprintf+0x7c>
    145e:	b6 01       	movw	r22, r12
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	d6 d1       	rcall	.+940    	; 0x1810 <fputc>
    1464:	e8 cf       	rjmp	.-48     	; 0x1436 <vfprintf+0x4c>
    1466:	91 2c       	mov	r9, r1
    1468:	21 2c       	mov	r2, r1
    146a:	31 2c       	mov	r3, r1
    146c:	ff e1       	ldi	r31, 0x1F	; 31
    146e:	f3 15       	cp	r31, r3
    1470:	d8 f0       	brcs	.+54     	; 0x14a8 <vfprintf+0xbe>
    1472:	8b 32       	cpi	r24, 0x2B	; 43
    1474:	79 f0       	breq	.+30     	; 0x1494 <vfprintf+0xaa>
    1476:	38 f4       	brcc	.+14     	; 0x1486 <vfprintf+0x9c>
    1478:	80 32       	cpi	r24, 0x20	; 32
    147a:	79 f0       	breq	.+30     	; 0x149a <vfprintf+0xb0>
    147c:	83 32       	cpi	r24, 0x23	; 35
    147e:	a1 f4       	brne	.+40     	; 0x14a8 <vfprintf+0xbe>
    1480:	23 2d       	mov	r18, r3
    1482:	20 61       	ori	r18, 0x10	; 16
    1484:	1d c0       	rjmp	.+58     	; 0x14c0 <vfprintf+0xd6>
    1486:	8d 32       	cpi	r24, 0x2D	; 45
    1488:	61 f0       	breq	.+24     	; 0x14a2 <vfprintf+0xb8>
    148a:	80 33       	cpi	r24, 0x30	; 48
    148c:	69 f4       	brne	.+26     	; 0x14a8 <vfprintf+0xbe>
    148e:	23 2d       	mov	r18, r3
    1490:	21 60       	ori	r18, 0x01	; 1
    1492:	16 c0       	rjmp	.+44     	; 0x14c0 <vfprintf+0xd6>
    1494:	83 2d       	mov	r24, r3
    1496:	82 60       	ori	r24, 0x02	; 2
    1498:	38 2e       	mov	r3, r24
    149a:	e3 2d       	mov	r30, r3
    149c:	e4 60       	ori	r30, 0x04	; 4
    149e:	3e 2e       	mov	r3, r30
    14a0:	2a c0       	rjmp	.+84     	; 0x14f6 <vfprintf+0x10c>
    14a2:	f3 2d       	mov	r31, r3
    14a4:	f8 60       	ori	r31, 0x08	; 8
    14a6:	1d c0       	rjmp	.+58     	; 0x14e2 <vfprintf+0xf8>
    14a8:	37 fc       	sbrc	r3, 7
    14aa:	2d c0       	rjmp	.+90     	; 0x1506 <vfprintf+0x11c>
    14ac:	20 ed       	ldi	r18, 0xD0	; 208
    14ae:	28 0f       	add	r18, r24
    14b0:	2a 30       	cpi	r18, 0x0A	; 10
    14b2:	40 f0       	brcs	.+16     	; 0x14c4 <vfprintf+0xda>
    14b4:	8e 32       	cpi	r24, 0x2E	; 46
    14b6:	b9 f4       	brne	.+46     	; 0x14e6 <vfprintf+0xfc>
    14b8:	36 fc       	sbrc	r3, 6
    14ba:	75 c1       	rjmp	.+746    	; 0x17a6 <vfprintf+0x3bc>
    14bc:	23 2d       	mov	r18, r3
    14be:	20 64       	ori	r18, 0x40	; 64
    14c0:	32 2e       	mov	r3, r18
    14c2:	19 c0       	rjmp	.+50     	; 0x14f6 <vfprintf+0x10c>
    14c4:	36 fe       	sbrs	r3, 6
    14c6:	06 c0       	rjmp	.+12     	; 0x14d4 <vfprintf+0xea>
    14c8:	8a e0       	ldi	r24, 0x0A	; 10
    14ca:	98 9e       	mul	r9, r24
    14cc:	20 0d       	add	r18, r0
    14ce:	11 24       	eor	r1, r1
    14d0:	92 2e       	mov	r9, r18
    14d2:	11 c0       	rjmp	.+34     	; 0x14f6 <vfprintf+0x10c>
    14d4:	ea e0       	ldi	r30, 0x0A	; 10
    14d6:	2e 9e       	mul	r2, r30
    14d8:	20 0d       	add	r18, r0
    14da:	11 24       	eor	r1, r1
    14dc:	22 2e       	mov	r2, r18
    14de:	f3 2d       	mov	r31, r3
    14e0:	f0 62       	ori	r31, 0x20	; 32
    14e2:	3f 2e       	mov	r3, r31
    14e4:	08 c0       	rjmp	.+16     	; 0x14f6 <vfprintf+0x10c>
    14e6:	8c 36       	cpi	r24, 0x6C	; 108
    14e8:	21 f4       	brne	.+8      	; 0x14f2 <vfprintf+0x108>
    14ea:	83 2d       	mov	r24, r3
    14ec:	80 68       	ori	r24, 0x80	; 128
    14ee:	38 2e       	mov	r3, r24
    14f0:	02 c0       	rjmp	.+4      	; 0x14f6 <vfprintf+0x10c>
    14f2:	88 36       	cpi	r24, 0x68	; 104
    14f4:	41 f4       	brne	.+16     	; 0x1506 <vfprintf+0x11c>
    14f6:	f7 01       	movw	r30, r14
    14f8:	93 fd       	sbrc	r25, 3
    14fa:	85 91       	lpm	r24, Z+
    14fc:	93 ff       	sbrs	r25, 3
    14fe:	81 91       	ld	r24, Z+
    1500:	7f 01       	movw	r14, r30
    1502:	81 11       	cpse	r24, r1
    1504:	b3 cf       	rjmp	.-154    	; 0x146c <vfprintf+0x82>
    1506:	98 2f       	mov	r25, r24
    1508:	9f 7d       	andi	r25, 0xDF	; 223
    150a:	95 54       	subi	r25, 0x45	; 69
    150c:	93 30       	cpi	r25, 0x03	; 3
    150e:	28 f4       	brcc	.+10     	; 0x151a <vfprintf+0x130>
    1510:	0c 5f       	subi	r16, 0xFC	; 252
    1512:	1f 4f       	sbci	r17, 0xFF	; 255
    1514:	9f e3       	ldi	r25, 0x3F	; 63
    1516:	99 83       	std	Y+1, r25	; 0x01
    1518:	0d c0       	rjmp	.+26     	; 0x1534 <vfprintf+0x14a>
    151a:	83 36       	cpi	r24, 0x63	; 99
    151c:	31 f0       	breq	.+12     	; 0x152a <vfprintf+0x140>
    151e:	83 37       	cpi	r24, 0x73	; 115
    1520:	71 f0       	breq	.+28     	; 0x153e <vfprintf+0x154>
    1522:	83 35       	cpi	r24, 0x53	; 83
    1524:	09 f0       	breq	.+2      	; 0x1528 <vfprintf+0x13e>
    1526:	55 c0       	rjmp	.+170    	; 0x15d2 <vfprintf+0x1e8>
    1528:	20 c0       	rjmp	.+64     	; 0x156a <vfprintf+0x180>
    152a:	f8 01       	movw	r30, r16
    152c:	80 81       	ld	r24, Z
    152e:	89 83       	std	Y+1, r24	; 0x01
    1530:	0e 5f       	subi	r16, 0xFE	; 254
    1532:	1f 4f       	sbci	r17, 0xFF	; 255
    1534:	88 24       	eor	r8, r8
    1536:	83 94       	inc	r8
    1538:	91 2c       	mov	r9, r1
    153a:	53 01       	movw	r10, r6
    153c:	12 c0       	rjmp	.+36     	; 0x1562 <vfprintf+0x178>
    153e:	28 01       	movw	r4, r16
    1540:	f2 e0       	ldi	r31, 0x02	; 2
    1542:	4f 0e       	add	r4, r31
    1544:	51 1c       	adc	r5, r1
    1546:	f8 01       	movw	r30, r16
    1548:	a0 80       	ld	r10, Z
    154a:	b1 80       	ldd	r11, Z+1	; 0x01
    154c:	36 fe       	sbrs	r3, 6
    154e:	03 c0       	rjmp	.+6      	; 0x1556 <vfprintf+0x16c>
    1550:	69 2d       	mov	r22, r9
    1552:	70 e0       	ldi	r23, 0x00	; 0
    1554:	02 c0       	rjmp	.+4      	; 0x155a <vfprintf+0x170>
    1556:	6f ef       	ldi	r22, 0xFF	; 255
    1558:	7f ef       	ldi	r23, 0xFF	; 255
    155a:	c5 01       	movw	r24, r10
    155c:	4e d1       	rcall	.+668    	; 0x17fa <strnlen>
    155e:	4c 01       	movw	r8, r24
    1560:	82 01       	movw	r16, r4
    1562:	f3 2d       	mov	r31, r3
    1564:	ff 77       	andi	r31, 0x7F	; 127
    1566:	3f 2e       	mov	r3, r31
    1568:	15 c0       	rjmp	.+42     	; 0x1594 <vfprintf+0x1aa>
    156a:	28 01       	movw	r4, r16
    156c:	22 e0       	ldi	r18, 0x02	; 2
    156e:	42 0e       	add	r4, r18
    1570:	51 1c       	adc	r5, r1
    1572:	f8 01       	movw	r30, r16
    1574:	a0 80       	ld	r10, Z
    1576:	b1 80       	ldd	r11, Z+1	; 0x01
    1578:	36 fe       	sbrs	r3, 6
    157a:	03 c0       	rjmp	.+6      	; 0x1582 <vfprintf+0x198>
    157c:	69 2d       	mov	r22, r9
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <vfprintf+0x19c>
    1582:	6f ef       	ldi	r22, 0xFF	; 255
    1584:	7f ef       	ldi	r23, 0xFF	; 255
    1586:	c5 01       	movw	r24, r10
    1588:	2d d1       	rcall	.+602    	; 0x17e4 <strnlen_P>
    158a:	4c 01       	movw	r8, r24
    158c:	f3 2d       	mov	r31, r3
    158e:	f0 68       	ori	r31, 0x80	; 128
    1590:	3f 2e       	mov	r3, r31
    1592:	82 01       	movw	r16, r4
    1594:	33 fc       	sbrc	r3, 3
    1596:	19 c0       	rjmp	.+50     	; 0x15ca <vfprintf+0x1e0>
    1598:	82 2d       	mov	r24, r2
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	88 16       	cp	r8, r24
    159e:	99 06       	cpc	r9, r25
    15a0:	a0 f4       	brcc	.+40     	; 0x15ca <vfprintf+0x1e0>
    15a2:	b6 01       	movw	r22, r12
    15a4:	80 e2       	ldi	r24, 0x20	; 32
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	33 d1       	rcall	.+614    	; 0x1810 <fputc>
    15aa:	2a 94       	dec	r2
    15ac:	f5 cf       	rjmp	.-22     	; 0x1598 <vfprintf+0x1ae>
    15ae:	f5 01       	movw	r30, r10
    15b0:	37 fc       	sbrc	r3, 7
    15b2:	85 91       	lpm	r24, Z+
    15b4:	37 fe       	sbrs	r3, 7
    15b6:	81 91       	ld	r24, Z+
    15b8:	5f 01       	movw	r10, r30
    15ba:	b6 01       	movw	r22, r12
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	28 d1       	rcall	.+592    	; 0x1810 <fputc>
    15c0:	21 10       	cpse	r2, r1
    15c2:	2a 94       	dec	r2
    15c4:	21 e0       	ldi	r18, 0x01	; 1
    15c6:	82 1a       	sub	r8, r18
    15c8:	91 08       	sbc	r9, r1
    15ca:	81 14       	cp	r8, r1
    15cc:	91 04       	cpc	r9, r1
    15ce:	79 f7       	brne	.-34     	; 0x15ae <vfprintf+0x1c4>
    15d0:	e1 c0       	rjmp	.+450    	; 0x1794 <vfprintf+0x3aa>
    15d2:	84 36       	cpi	r24, 0x64	; 100
    15d4:	11 f0       	breq	.+4      	; 0x15da <vfprintf+0x1f0>
    15d6:	89 36       	cpi	r24, 0x69	; 105
    15d8:	39 f5       	brne	.+78     	; 0x1628 <vfprintf+0x23e>
    15da:	f8 01       	movw	r30, r16
    15dc:	37 fe       	sbrs	r3, 7
    15de:	07 c0       	rjmp	.+14     	; 0x15ee <vfprintf+0x204>
    15e0:	60 81       	ld	r22, Z
    15e2:	71 81       	ldd	r23, Z+1	; 0x01
    15e4:	82 81       	ldd	r24, Z+2	; 0x02
    15e6:	93 81       	ldd	r25, Z+3	; 0x03
    15e8:	0c 5f       	subi	r16, 0xFC	; 252
    15ea:	1f 4f       	sbci	r17, 0xFF	; 255
    15ec:	08 c0       	rjmp	.+16     	; 0x15fe <vfprintf+0x214>
    15ee:	60 81       	ld	r22, Z
    15f0:	71 81       	ldd	r23, Z+1	; 0x01
    15f2:	07 2e       	mov	r0, r23
    15f4:	00 0c       	add	r0, r0
    15f6:	88 0b       	sbc	r24, r24
    15f8:	99 0b       	sbc	r25, r25
    15fa:	0e 5f       	subi	r16, 0xFE	; 254
    15fc:	1f 4f       	sbci	r17, 0xFF	; 255
    15fe:	f3 2d       	mov	r31, r3
    1600:	ff 76       	andi	r31, 0x6F	; 111
    1602:	3f 2e       	mov	r3, r31
    1604:	97 ff       	sbrs	r25, 7
    1606:	09 c0       	rjmp	.+18     	; 0x161a <vfprintf+0x230>
    1608:	90 95       	com	r25
    160a:	80 95       	com	r24
    160c:	70 95       	com	r23
    160e:	61 95       	neg	r22
    1610:	7f 4f       	sbci	r23, 0xFF	; 255
    1612:	8f 4f       	sbci	r24, 0xFF	; 255
    1614:	9f 4f       	sbci	r25, 0xFF	; 255
    1616:	f0 68       	ori	r31, 0x80	; 128
    1618:	3f 2e       	mov	r3, r31
    161a:	2a e0       	ldi	r18, 0x0A	; 10
    161c:	30 e0       	ldi	r19, 0x00	; 0
    161e:	a3 01       	movw	r20, r6
    1620:	33 d1       	rcall	.+614    	; 0x1888 <__ultoa_invert>
    1622:	88 2e       	mov	r8, r24
    1624:	86 18       	sub	r8, r6
    1626:	44 c0       	rjmp	.+136    	; 0x16b0 <vfprintf+0x2c6>
    1628:	85 37       	cpi	r24, 0x75	; 117
    162a:	31 f4       	brne	.+12     	; 0x1638 <vfprintf+0x24e>
    162c:	23 2d       	mov	r18, r3
    162e:	2f 7e       	andi	r18, 0xEF	; 239
    1630:	b2 2e       	mov	r11, r18
    1632:	2a e0       	ldi	r18, 0x0A	; 10
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	25 c0       	rjmp	.+74     	; 0x1682 <vfprintf+0x298>
    1638:	93 2d       	mov	r25, r3
    163a:	99 7f       	andi	r25, 0xF9	; 249
    163c:	b9 2e       	mov	r11, r25
    163e:	8f 36       	cpi	r24, 0x6F	; 111
    1640:	c1 f0       	breq	.+48     	; 0x1672 <vfprintf+0x288>
    1642:	18 f4       	brcc	.+6      	; 0x164a <vfprintf+0x260>
    1644:	88 35       	cpi	r24, 0x58	; 88
    1646:	79 f0       	breq	.+30     	; 0x1666 <vfprintf+0x27c>
    1648:	ae c0       	rjmp	.+348    	; 0x17a6 <vfprintf+0x3bc>
    164a:	80 37       	cpi	r24, 0x70	; 112
    164c:	19 f0       	breq	.+6      	; 0x1654 <vfprintf+0x26a>
    164e:	88 37       	cpi	r24, 0x78	; 120
    1650:	21 f0       	breq	.+8      	; 0x165a <vfprintf+0x270>
    1652:	a9 c0       	rjmp	.+338    	; 0x17a6 <vfprintf+0x3bc>
    1654:	e9 2f       	mov	r30, r25
    1656:	e0 61       	ori	r30, 0x10	; 16
    1658:	be 2e       	mov	r11, r30
    165a:	b4 fe       	sbrs	r11, 4
    165c:	0d c0       	rjmp	.+26     	; 0x1678 <vfprintf+0x28e>
    165e:	fb 2d       	mov	r31, r11
    1660:	f4 60       	ori	r31, 0x04	; 4
    1662:	bf 2e       	mov	r11, r31
    1664:	09 c0       	rjmp	.+18     	; 0x1678 <vfprintf+0x28e>
    1666:	34 fe       	sbrs	r3, 4
    1668:	0a c0       	rjmp	.+20     	; 0x167e <vfprintf+0x294>
    166a:	29 2f       	mov	r18, r25
    166c:	26 60       	ori	r18, 0x06	; 6
    166e:	b2 2e       	mov	r11, r18
    1670:	06 c0       	rjmp	.+12     	; 0x167e <vfprintf+0x294>
    1672:	28 e0       	ldi	r18, 0x08	; 8
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	05 c0       	rjmp	.+10     	; 0x1682 <vfprintf+0x298>
    1678:	20 e1       	ldi	r18, 0x10	; 16
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <vfprintf+0x298>
    167e:	20 e1       	ldi	r18, 0x10	; 16
    1680:	32 e0       	ldi	r19, 0x02	; 2
    1682:	f8 01       	movw	r30, r16
    1684:	b7 fe       	sbrs	r11, 7
    1686:	07 c0       	rjmp	.+14     	; 0x1696 <vfprintf+0x2ac>
    1688:	60 81       	ld	r22, Z
    168a:	71 81       	ldd	r23, Z+1	; 0x01
    168c:	82 81       	ldd	r24, Z+2	; 0x02
    168e:	93 81       	ldd	r25, Z+3	; 0x03
    1690:	0c 5f       	subi	r16, 0xFC	; 252
    1692:	1f 4f       	sbci	r17, 0xFF	; 255
    1694:	06 c0       	rjmp	.+12     	; 0x16a2 <vfprintf+0x2b8>
    1696:	60 81       	ld	r22, Z
    1698:	71 81       	ldd	r23, Z+1	; 0x01
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	0e 5f       	subi	r16, 0xFE	; 254
    16a0:	1f 4f       	sbci	r17, 0xFF	; 255
    16a2:	a3 01       	movw	r20, r6
    16a4:	f1 d0       	rcall	.+482    	; 0x1888 <__ultoa_invert>
    16a6:	88 2e       	mov	r8, r24
    16a8:	86 18       	sub	r8, r6
    16aa:	fb 2d       	mov	r31, r11
    16ac:	ff 77       	andi	r31, 0x7F	; 127
    16ae:	3f 2e       	mov	r3, r31
    16b0:	36 fe       	sbrs	r3, 6
    16b2:	0d c0       	rjmp	.+26     	; 0x16ce <vfprintf+0x2e4>
    16b4:	23 2d       	mov	r18, r3
    16b6:	2e 7f       	andi	r18, 0xFE	; 254
    16b8:	a2 2e       	mov	r10, r18
    16ba:	89 14       	cp	r8, r9
    16bc:	58 f4       	brcc	.+22     	; 0x16d4 <vfprintf+0x2ea>
    16be:	34 fe       	sbrs	r3, 4
    16c0:	0b c0       	rjmp	.+22     	; 0x16d8 <vfprintf+0x2ee>
    16c2:	32 fc       	sbrc	r3, 2
    16c4:	09 c0       	rjmp	.+18     	; 0x16d8 <vfprintf+0x2ee>
    16c6:	83 2d       	mov	r24, r3
    16c8:	8e 7e       	andi	r24, 0xEE	; 238
    16ca:	a8 2e       	mov	r10, r24
    16cc:	05 c0       	rjmp	.+10     	; 0x16d8 <vfprintf+0x2ee>
    16ce:	b8 2c       	mov	r11, r8
    16d0:	a3 2c       	mov	r10, r3
    16d2:	03 c0       	rjmp	.+6      	; 0x16da <vfprintf+0x2f0>
    16d4:	b8 2c       	mov	r11, r8
    16d6:	01 c0       	rjmp	.+2      	; 0x16da <vfprintf+0x2f0>
    16d8:	b9 2c       	mov	r11, r9
    16da:	a4 fe       	sbrs	r10, 4
    16dc:	0f c0       	rjmp	.+30     	; 0x16fc <vfprintf+0x312>
    16de:	fe 01       	movw	r30, r28
    16e0:	e8 0d       	add	r30, r8
    16e2:	f1 1d       	adc	r31, r1
    16e4:	80 81       	ld	r24, Z
    16e6:	80 33       	cpi	r24, 0x30	; 48
    16e8:	21 f4       	brne	.+8      	; 0x16f2 <vfprintf+0x308>
    16ea:	9a 2d       	mov	r25, r10
    16ec:	99 7e       	andi	r25, 0xE9	; 233
    16ee:	a9 2e       	mov	r10, r25
    16f0:	09 c0       	rjmp	.+18     	; 0x1704 <vfprintf+0x31a>
    16f2:	a2 fe       	sbrs	r10, 2
    16f4:	06 c0       	rjmp	.+12     	; 0x1702 <vfprintf+0x318>
    16f6:	b3 94       	inc	r11
    16f8:	b3 94       	inc	r11
    16fa:	04 c0       	rjmp	.+8      	; 0x1704 <vfprintf+0x31a>
    16fc:	8a 2d       	mov	r24, r10
    16fe:	86 78       	andi	r24, 0x86	; 134
    1700:	09 f0       	breq	.+2      	; 0x1704 <vfprintf+0x31a>
    1702:	b3 94       	inc	r11
    1704:	a3 fc       	sbrc	r10, 3
    1706:	10 c0       	rjmp	.+32     	; 0x1728 <vfprintf+0x33e>
    1708:	a0 fe       	sbrs	r10, 0
    170a:	06 c0       	rjmp	.+12     	; 0x1718 <vfprintf+0x32e>
    170c:	b2 14       	cp	r11, r2
    170e:	80 f4       	brcc	.+32     	; 0x1730 <vfprintf+0x346>
    1710:	28 0c       	add	r2, r8
    1712:	92 2c       	mov	r9, r2
    1714:	9b 18       	sub	r9, r11
    1716:	0d c0       	rjmp	.+26     	; 0x1732 <vfprintf+0x348>
    1718:	b2 14       	cp	r11, r2
    171a:	58 f4       	brcc	.+22     	; 0x1732 <vfprintf+0x348>
    171c:	b6 01       	movw	r22, r12
    171e:	80 e2       	ldi	r24, 0x20	; 32
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	76 d0       	rcall	.+236    	; 0x1810 <fputc>
    1724:	b3 94       	inc	r11
    1726:	f8 cf       	rjmp	.-16     	; 0x1718 <vfprintf+0x32e>
    1728:	b2 14       	cp	r11, r2
    172a:	18 f4       	brcc	.+6      	; 0x1732 <vfprintf+0x348>
    172c:	2b 18       	sub	r2, r11
    172e:	02 c0       	rjmp	.+4      	; 0x1734 <vfprintf+0x34a>
    1730:	98 2c       	mov	r9, r8
    1732:	21 2c       	mov	r2, r1
    1734:	a4 fe       	sbrs	r10, 4
    1736:	0f c0       	rjmp	.+30     	; 0x1756 <vfprintf+0x36c>
    1738:	b6 01       	movw	r22, r12
    173a:	80 e3       	ldi	r24, 0x30	; 48
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	68 d0       	rcall	.+208    	; 0x1810 <fputc>
    1740:	a2 fe       	sbrs	r10, 2
    1742:	16 c0       	rjmp	.+44     	; 0x1770 <vfprintf+0x386>
    1744:	a1 fc       	sbrc	r10, 1
    1746:	03 c0       	rjmp	.+6      	; 0x174e <vfprintf+0x364>
    1748:	88 e7       	ldi	r24, 0x78	; 120
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	02 c0       	rjmp	.+4      	; 0x1752 <vfprintf+0x368>
    174e:	88 e5       	ldi	r24, 0x58	; 88
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	b6 01       	movw	r22, r12
    1754:	0c c0       	rjmp	.+24     	; 0x176e <vfprintf+0x384>
    1756:	8a 2d       	mov	r24, r10
    1758:	86 78       	andi	r24, 0x86	; 134
    175a:	51 f0       	breq	.+20     	; 0x1770 <vfprintf+0x386>
    175c:	a1 fe       	sbrs	r10, 1
    175e:	02 c0       	rjmp	.+4      	; 0x1764 <vfprintf+0x37a>
    1760:	8b e2       	ldi	r24, 0x2B	; 43
    1762:	01 c0       	rjmp	.+2      	; 0x1766 <vfprintf+0x37c>
    1764:	80 e2       	ldi	r24, 0x20	; 32
    1766:	a7 fc       	sbrc	r10, 7
    1768:	8d e2       	ldi	r24, 0x2D	; 45
    176a:	b6 01       	movw	r22, r12
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	50 d0       	rcall	.+160    	; 0x1810 <fputc>
    1770:	89 14       	cp	r8, r9
    1772:	30 f4       	brcc	.+12     	; 0x1780 <vfprintf+0x396>
    1774:	b6 01       	movw	r22, r12
    1776:	80 e3       	ldi	r24, 0x30	; 48
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	4a d0       	rcall	.+148    	; 0x1810 <fputc>
    177c:	9a 94       	dec	r9
    177e:	f8 cf       	rjmp	.-16     	; 0x1770 <vfprintf+0x386>
    1780:	8a 94       	dec	r8
    1782:	f3 01       	movw	r30, r6
    1784:	e8 0d       	add	r30, r8
    1786:	f1 1d       	adc	r31, r1
    1788:	80 81       	ld	r24, Z
    178a:	b6 01       	movw	r22, r12
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	40 d0       	rcall	.+128    	; 0x1810 <fputc>
    1790:	81 10       	cpse	r8, r1
    1792:	f6 cf       	rjmp	.-20     	; 0x1780 <vfprintf+0x396>
    1794:	22 20       	and	r2, r2
    1796:	09 f4       	brne	.+2      	; 0x179a <vfprintf+0x3b0>
    1798:	4e ce       	rjmp	.-868    	; 0x1436 <vfprintf+0x4c>
    179a:	b6 01       	movw	r22, r12
    179c:	80 e2       	ldi	r24, 0x20	; 32
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	37 d0       	rcall	.+110    	; 0x1810 <fputc>
    17a2:	2a 94       	dec	r2
    17a4:	f7 cf       	rjmp	.-18     	; 0x1794 <vfprintf+0x3aa>
    17a6:	f6 01       	movw	r30, r12
    17a8:	86 81       	ldd	r24, Z+6	; 0x06
    17aa:	97 81       	ldd	r25, Z+7	; 0x07
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <vfprintf+0x3c8>
    17ae:	8f ef       	ldi	r24, 0xFF	; 255
    17b0:	9f ef       	ldi	r25, 0xFF	; 255
    17b2:	2b 96       	adiw	r28, 0x0b	; 11
    17b4:	0f b6       	in	r0, 0x3f	; 63
    17b6:	f8 94       	cli
    17b8:	de bf       	out	0x3e, r29	; 62
    17ba:	0f be       	out	0x3f, r0	; 63
    17bc:	cd bf       	out	0x3d, r28	; 61
    17be:	df 91       	pop	r29
    17c0:	cf 91       	pop	r28
    17c2:	1f 91       	pop	r17
    17c4:	0f 91       	pop	r16
    17c6:	ff 90       	pop	r15
    17c8:	ef 90       	pop	r14
    17ca:	df 90       	pop	r13
    17cc:	cf 90       	pop	r12
    17ce:	bf 90       	pop	r11
    17d0:	af 90       	pop	r10
    17d2:	9f 90       	pop	r9
    17d4:	8f 90       	pop	r8
    17d6:	7f 90       	pop	r7
    17d8:	6f 90       	pop	r6
    17da:	5f 90       	pop	r5
    17dc:	4f 90       	pop	r4
    17de:	3f 90       	pop	r3
    17e0:	2f 90       	pop	r2
    17e2:	08 95       	ret

000017e4 <strnlen_P>:
    17e4:	fc 01       	movw	r30, r24
    17e6:	05 90       	lpm	r0, Z+
    17e8:	61 50       	subi	r22, 0x01	; 1
    17ea:	70 40       	sbci	r23, 0x00	; 0
    17ec:	01 10       	cpse	r0, r1
    17ee:	d8 f7       	brcc	.-10     	; 0x17e6 <strnlen_P+0x2>
    17f0:	80 95       	com	r24
    17f2:	90 95       	com	r25
    17f4:	8e 0f       	add	r24, r30
    17f6:	9f 1f       	adc	r25, r31
    17f8:	08 95       	ret

000017fa <strnlen>:
    17fa:	fc 01       	movw	r30, r24
    17fc:	61 50       	subi	r22, 0x01	; 1
    17fe:	70 40       	sbci	r23, 0x00	; 0
    1800:	01 90       	ld	r0, Z+
    1802:	01 10       	cpse	r0, r1
    1804:	d8 f7       	brcc	.-10     	; 0x17fc <strnlen+0x2>
    1806:	80 95       	com	r24
    1808:	90 95       	com	r25
    180a:	8e 0f       	add	r24, r30
    180c:	9f 1f       	adc	r25, r31
    180e:	08 95       	ret

00001810 <fputc>:
    1810:	0f 93       	push	r16
    1812:	1f 93       	push	r17
    1814:	cf 93       	push	r28
    1816:	df 93       	push	r29
    1818:	fb 01       	movw	r30, r22
    181a:	23 81       	ldd	r18, Z+3	; 0x03
    181c:	21 fd       	sbrc	r18, 1
    181e:	03 c0       	rjmp	.+6      	; 0x1826 <fputc+0x16>
    1820:	8f ef       	ldi	r24, 0xFF	; 255
    1822:	9f ef       	ldi	r25, 0xFF	; 255
    1824:	2c c0       	rjmp	.+88     	; 0x187e <fputc+0x6e>
    1826:	22 ff       	sbrs	r18, 2
    1828:	16 c0       	rjmp	.+44     	; 0x1856 <fputc+0x46>
    182a:	46 81       	ldd	r20, Z+6	; 0x06
    182c:	57 81       	ldd	r21, Z+7	; 0x07
    182e:	24 81       	ldd	r18, Z+4	; 0x04
    1830:	35 81       	ldd	r19, Z+5	; 0x05
    1832:	42 17       	cp	r20, r18
    1834:	53 07       	cpc	r21, r19
    1836:	44 f4       	brge	.+16     	; 0x1848 <fputc+0x38>
    1838:	a0 81       	ld	r26, Z
    183a:	b1 81       	ldd	r27, Z+1	; 0x01
    183c:	9d 01       	movw	r18, r26
    183e:	2f 5f       	subi	r18, 0xFF	; 255
    1840:	3f 4f       	sbci	r19, 0xFF	; 255
    1842:	31 83       	std	Z+1, r19	; 0x01
    1844:	20 83       	st	Z, r18
    1846:	8c 93       	st	X, r24
    1848:	26 81       	ldd	r18, Z+6	; 0x06
    184a:	37 81       	ldd	r19, Z+7	; 0x07
    184c:	2f 5f       	subi	r18, 0xFF	; 255
    184e:	3f 4f       	sbci	r19, 0xFF	; 255
    1850:	37 83       	std	Z+7, r19	; 0x07
    1852:	26 83       	std	Z+6, r18	; 0x06
    1854:	14 c0       	rjmp	.+40     	; 0x187e <fputc+0x6e>
    1856:	8b 01       	movw	r16, r22
    1858:	ec 01       	movw	r28, r24
    185a:	fb 01       	movw	r30, r22
    185c:	00 84       	ldd	r0, Z+8	; 0x08
    185e:	f1 85       	ldd	r31, Z+9	; 0x09
    1860:	e0 2d       	mov	r30, r0
    1862:	09 95       	icall
    1864:	89 2b       	or	r24, r25
    1866:	e1 f6       	brne	.-72     	; 0x1820 <fputc+0x10>
    1868:	d8 01       	movw	r26, r16
    186a:	16 96       	adiw	r26, 0x06	; 6
    186c:	8d 91       	ld	r24, X+
    186e:	9c 91       	ld	r25, X
    1870:	17 97       	sbiw	r26, 0x07	; 7
    1872:	01 96       	adiw	r24, 0x01	; 1
    1874:	17 96       	adiw	r26, 0x07	; 7
    1876:	9c 93       	st	X, r25
    1878:	8e 93       	st	-X, r24
    187a:	16 97       	sbiw	r26, 0x06	; 6
    187c:	ce 01       	movw	r24, r28
    187e:	df 91       	pop	r29
    1880:	cf 91       	pop	r28
    1882:	1f 91       	pop	r17
    1884:	0f 91       	pop	r16
    1886:	08 95       	ret

00001888 <__ultoa_invert>:
    1888:	fa 01       	movw	r30, r20
    188a:	aa 27       	eor	r26, r26
    188c:	28 30       	cpi	r18, 0x08	; 8
    188e:	51 f1       	breq	.+84     	; 0x18e4 <__ultoa_invert+0x5c>
    1890:	20 31       	cpi	r18, 0x10	; 16
    1892:	81 f1       	breq	.+96     	; 0x18f4 <__ultoa_invert+0x6c>
    1894:	e8 94       	clt
    1896:	6f 93       	push	r22
    1898:	6e 7f       	andi	r22, 0xFE	; 254
    189a:	6e 5f       	subi	r22, 0xFE	; 254
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	8f 4f       	sbci	r24, 0xFF	; 255
    18a0:	9f 4f       	sbci	r25, 0xFF	; 255
    18a2:	af 4f       	sbci	r26, 0xFF	; 255
    18a4:	b1 e0       	ldi	r27, 0x01	; 1
    18a6:	3e d0       	rcall	.+124    	; 0x1924 <__ultoa_invert+0x9c>
    18a8:	b4 e0       	ldi	r27, 0x04	; 4
    18aa:	3c d0       	rcall	.+120    	; 0x1924 <__ultoa_invert+0x9c>
    18ac:	67 0f       	add	r22, r23
    18ae:	78 1f       	adc	r23, r24
    18b0:	89 1f       	adc	r24, r25
    18b2:	9a 1f       	adc	r25, r26
    18b4:	a1 1d       	adc	r26, r1
    18b6:	68 0f       	add	r22, r24
    18b8:	79 1f       	adc	r23, r25
    18ba:	8a 1f       	adc	r24, r26
    18bc:	91 1d       	adc	r25, r1
    18be:	a1 1d       	adc	r26, r1
    18c0:	6a 0f       	add	r22, r26
    18c2:	71 1d       	adc	r23, r1
    18c4:	81 1d       	adc	r24, r1
    18c6:	91 1d       	adc	r25, r1
    18c8:	a1 1d       	adc	r26, r1
    18ca:	20 d0       	rcall	.+64     	; 0x190c <__ultoa_invert+0x84>
    18cc:	09 f4       	brne	.+2      	; 0x18d0 <__ultoa_invert+0x48>
    18ce:	68 94       	set
    18d0:	3f 91       	pop	r19
    18d2:	2a e0       	ldi	r18, 0x0A	; 10
    18d4:	26 9f       	mul	r18, r22
    18d6:	11 24       	eor	r1, r1
    18d8:	30 19       	sub	r19, r0
    18da:	30 5d       	subi	r19, 0xD0	; 208
    18dc:	31 93       	st	Z+, r19
    18de:	de f6       	brtc	.-74     	; 0x1896 <__ultoa_invert+0xe>
    18e0:	cf 01       	movw	r24, r30
    18e2:	08 95       	ret
    18e4:	46 2f       	mov	r20, r22
    18e6:	47 70       	andi	r20, 0x07	; 7
    18e8:	40 5d       	subi	r20, 0xD0	; 208
    18ea:	41 93       	st	Z+, r20
    18ec:	b3 e0       	ldi	r27, 0x03	; 3
    18ee:	0f d0       	rcall	.+30     	; 0x190e <__ultoa_invert+0x86>
    18f0:	c9 f7       	brne	.-14     	; 0x18e4 <__ultoa_invert+0x5c>
    18f2:	f6 cf       	rjmp	.-20     	; 0x18e0 <__ultoa_invert+0x58>
    18f4:	46 2f       	mov	r20, r22
    18f6:	4f 70       	andi	r20, 0x0F	; 15
    18f8:	40 5d       	subi	r20, 0xD0	; 208
    18fa:	4a 33       	cpi	r20, 0x3A	; 58
    18fc:	18 f0       	brcs	.+6      	; 0x1904 <__ultoa_invert+0x7c>
    18fe:	49 5d       	subi	r20, 0xD9	; 217
    1900:	31 fd       	sbrc	r19, 1
    1902:	40 52       	subi	r20, 0x20	; 32
    1904:	41 93       	st	Z+, r20
    1906:	02 d0       	rcall	.+4      	; 0x190c <__ultoa_invert+0x84>
    1908:	a9 f7       	brne	.-22     	; 0x18f4 <__ultoa_invert+0x6c>
    190a:	ea cf       	rjmp	.-44     	; 0x18e0 <__ultoa_invert+0x58>
    190c:	b4 e0       	ldi	r27, 0x04	; 4
    190e:	a6 95       	lsr	r26
    1910:	97 95       	ror	r25
    1912:	87 95       	ror	r24
    1914:	77 95       	ror	r23
    1916:	67 95       	ror	r22
    1918:	ba 95       	dec	r27
    191a:	c9 f7       	brne	.-14     	; 0x190e <__ultoa_invert+0x86>
    191c:	00 97       	sbiw	r24, 0x00	; 0
    191e:	61 05       	cpc	r22, r1
    1920:	71 05       	cpc	r23, r1
    1922:	08 95       	ret
    1924:	9b 01       	movw	r18, r22
    1926:	ac 01       	movw	r20, r24
    1928:	0a 2e       	mov	r0, r26
    192a:	06 94       	lsr	r0
    192c:	57 95       	ror	r21
    192e:	47 95       	ror	r20
    1930:	37 95       	ror	r19
    1932:	27 95       	ror	r18
    1934:	ba 95       	dec	r27
    1936:	c9 f7       	brne	.-14     	; 0x192a <__ultoa_invert+0xa2>
    1938:	62 0f       	add	r22, r18
    193a:	73 1f       	adc	r23, r19
    193c:	84 1f       	adc	r24, r20
    193e:	95 1f       	adc	r25, r21
    1940:	a0 1d       	adc	r26, r0
    1942:	08 95       	ret

00001944 <_exit>:
    1944:	f8 94       	cli

00001946 <__stop_program>:
    1946:	ff cf       	rjmp	.-2      	; 0x1946 <__stop_program>
