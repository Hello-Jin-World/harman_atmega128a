
09_WASHING_MACHINE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000019cc  00001a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000006a0  00800150  00800150  00001ab0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ab0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00001b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c31  00000000  00000000  00001d04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000112e  00000000  00000000  00003935  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010ec  00000000  00000000  00004a63  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000045c  00000000  00000000  00005b50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008e9  00000000  00000000  00005fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000099c  00000000  00000000  00006895  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00007231  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	bd c7       	rjmp	.+3962   	; 0xf90 <__vector_5>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a4 c5       	rjmp	.+2888   	; 0xb8a <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	7d c6       	rjmp	.+3322   	; 0xd44 <__vector_18>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	f7 c6       	rjmp	.+3566   	; 0xe68 <__vector_30>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec ec       	ldi	r30, 0xCC	; 204
      a0:	f9 e1       	ldi	r31, 0x19	; 25
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 35       	cpi	r26, 0x50	; 80
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	27 e0       	ldi	r18, 0x07	; 7
      b4:	a0 e5       	ldi	r26, 0x50	; 80
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a0 3f       	cpi	r26, 0xF0	; 240
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	cc d5       	rcall	.+2968   	; 0xc5c <main>
      c4:	0c 94 e4 0c 	jmp	0x19c8	; 0x19c8 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <init_button>:
      ca:	81 b3       	in	r24, 0x11	; 17
      cc:	8f 70       	andi	r24, 0x0F	; 15
      ce:	81 bb       	out	0x11, r24	; 17
      d0:	08 95       	ret

000000d2 <get_button>:
      d2:	20 b3       	in	r18, 0x10	; 16
      d4:	42 2f       	mov	r20, r18
      d6:	50 e0       	ldi	r21, 0x00	; 0
      d8:	21 e0       	ldi	r18, 0x01	; 1
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <get_button+0x10>
      de:	22 0f       	add	r18, r18
      e0:	33 1f       	adc	r19, r19
      e2:	6a 95       	dec	r22
      e4:	e2 f7       	brpl	.-8      	; 0xde <get_button+0xc>
      e6:	24 23       	and	r18, r20
      e8:	35 23       	and	r19, r21
      ea:	21 15       	cp	r18, r1
      ec:	31 05       	cpc	r19, r1
      ee:	b9 f0       	breq	.+46     	; 0x11e <get_button+0x4c>
      f0:	fc 01       	movw	r30, r24
      f2:	e0 5b       	subi	r30, 0xB0	; 176
      f4:	fe 4f       	sbci	r31, 0xFE	; 254
      f6:	40 81       	ld	r20, Z
      f8:	41 11       	cpse	r20, r1
      fa:	11 c0       	rjmp	.+34     	; 0x11e <get_button+0x4c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	2f ef       	ldi	r18, 0xFF	; 255
      fe:	3d ee       	ldi	r19, 0xED	; 237
     100:	42 e0       	ldi	r20, 0x02	; 2
     102:	21 50       	subi	r18, 0x01	; 1
     104:	30 40       	sbci	r19, 0x00	; 0
     106:	40 40       	sbci	r20, 0x00	; 0
     108:	e1 f7       	brne	.-8      	; 0x102 <get_button+0x30>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <get_button+0x3a>
     10c:	00 00       	nop
     10e:	fc 01       	movw	r30, r24
     110:	e0 5b       	subi	r30, 0xB0	; 176
     112:	fe 4f       	sbci	r31, 0xFE	; 254
     114:	21 e0       	ldi	r18, 0x01	; 1
     116:	20 83       	st	Z, r18
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	08 95       	ret
     11e:	fc 01       	movw	r30, r24
     120:	e0 5b       	subi	r30, 0xB0	; 176
     122:	fe 4f       	sbci	r31, 0xFE	; 254
     124:	40 81       	ld	r20, Z
     126:	41 30       	cpi	r20, 0x01	; 1
     128:	91 f4       	brne	.+36     	; 0x14e <get_button+0x7c>
     12a:	23 2b       	or	r18, r19
     12c:	99 f4       	brne	.+38     	; 0x154 <get_button+0x82>
     12e:	fc 01       	movw	r30, r24
     130:	e0 5b       	subi	r30, 0xB0	; 176
     132:	fe 4f       	sbci	r31, 0xFE	; 254
     134:	10 82       	st	Z, r1
     136:	8f ef       	ldi	r24, 0xFF	; 255
     138:	9d ee       	ldi	r25, 0xED	; 237
     13a:	22 e0       	ldi	r18, 0x02	; 2
     13c:	81 50       	subi	r24, 0x01	; 1
     13e:	90 40       	sbci	r25, 0x00	; 0
     140:	20 40       	sbci	r18, 0x00	; 0
     142:	e1 f7       	brne	.-8      	; 0x13c <get_button+0x6a>
     144:	00 c0       	rjmp	.+0      	; 0x146 <get_button+0x74>
     146:	00 00       	nop
     148:	81 e0       	ldi	r24, 0x01	; 1
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	08 95       	ret
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	08 95       	ret
     154:	80 e0       	ldi	r24, 0x00	; 0
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	08 95       	ret

0000015a <fast_wash>:
	
}

void fast_wash(void) // 쾌속 세탁
{
	sec_count = 2;
     15a:	82 e0       	ldi	r24, 0x02	; 2
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	a0 e0       	ldi	r26, 0x00	; 0
     160:	b0 e0       	ldi	r27, 0x00	; 0
     162:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     166:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     16a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     16e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
     172:	08 95       	ret

00000174 <rinse_and_spindry>:
	
}

void rinse_and_spindry(void) // 헹굼 + 탈수
{
	sec_count = 3;
     174:	83 e0       	ldi	r24, 0x03	; 3
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     180:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     184:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     188:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
     18c:	08 95       	ret

0000018e <only_spindry>:
}

void only_spindry(void) // 탈수
{
	sec_count = 4;
     18e:	84 e0       	ldi	r24, 0x04	; 4
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	a0 e0       	ldi	r26, 0x00	; 0
     194:	b0 e0       	ldi	r27, 0x00	; 0
     196:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     19a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     19e:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     1a2:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
     1a6:	08 95       	ret

000001a8 <main_screen>:
}

void main_screen(void) // 메인 화면
{
	PORTA = 0;
     1a8:	1b ba       	out	0x1b, r1	; 27
	sec_count = 754; // 1234 표시 12 * 60 + 34
     1aa:	82 ef       	ldi	r24, 0xF2	; 242
     1ac:	92 e0       	ldi	r25, 0x02	; 2
     1ae:	a0 e0       	ldi	r26, 0x00	; 0
     1b0:	b0 e0       	ldi	r27, 0x00	; 0
     1b2:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     1b6:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     1ba:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     1be:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
     1c2:	08 95       	ret

000001c4 <dumy_fanc>:
	sec_count = 0; // 다 끝나면 끝
	auto_wash_mode = 4;
}

void dumy_fanc()
{
     1c4:	08 95       	ret

000001c6 <init_fnd>:

////////////////////////////////////////////fnd 초기화 및 fnd 표시 함수들 ///////////////////////////////////////////////////////////

void init_fnd(void)
{
	FND_DATA_DDR = 0xff; // 출력모드로 설정
     1c6:	8f ef       	ldi	r24, 0xFF	; 255
     1c8:	84 bb       	out	0x14, r24	; 20

	FND_DIGIT_DDR |= 1 << FND_DIGIT_D1 | 1 << FND_DIGIT_D2 |
     1ca:	87 b3       	in	r24, 0x17	; 23
     1cc:	80 6f       	ori	r24, 0xF0	; 240
     1ce:	87 bb       	out	0x17, r24	; 23
					 1 << FND_DIGIT_D3 | 1 << FND_DIGIT_D4;

	FND_DATA_PORT = 0x00; // FND를 all off
     1d0:	15 ba       	out	0x15, r1	; 21
     1d2:	08 95       	ret

000001d4 <fnd_display>:
}

void fnd_display(void)
{
     1d4:	cf 93       	push	r28
     1d6:	df 93       	push	r29
     1d8:	cd b7       	in	r28, 0x3d	; 61
     1da:	de b7       	in	r29, 0x3e	; 62
     1dc:	2b 97       	sbiw	r28, 0x0b	; 11
     1de:	0f b6       	in	r0, 0x3f	; 63
     1e0:	f8 94       	cli
     1e2:	de bf       	out	0x3e, r29	; 62
     1e4:	0f be       	out	0x3f, r0	; 63
     1e6:	cd bf       	out	0x3d, r28	; 61
						//  0      1       2      3      4      5      6     7      8       9      .
	uint8_t fnd_font[] = {~0xc0, ~0xf9, ~0xa4, ~0xb0, ~0x99, ~0x92, ~0x82, ~0xd8, ~0x80, ~0x90, ~0x7f};
     1e8:	8b e0       	ldi	r24, 0x0B	; 11
     1ea:	ee e2       	ldi	r30, 0x2E	; 46
     1ec:	f1 e0       	ldi	r31, 0x01	; 1
     1ee:	de 01       	movw	r26, r28
     1f0:	11 96       	adiw	r26, 0x01	; 1
     1f2:	01 90       	ld	r0, Z+
     1f4:	0d 92       	st	X+, r0
     1f6:	8a 95       	dec	r24
     1f8:	e1 f7       	brne	.-8      	; 0x1f2 <fnd_display+0x1e>

	static int digit_select = 0; // 자리수 선택 변수 0~3   static : 전역변수처럼 작동

	switch(digit_select)
     1fa:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <digit_select.1826>
     1fe:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <digit_select.1826+0x1>
     202:	81 30       	cpi	r24, 0x01	; 1
     204:	91 05       	cpc	r25, r1
     206:	21 f1       	breq	.+72     	; 0x250 <fnd_display+0x7c>
     208:	1c f4       	brge	.+6      	; 0x210 <fnd_display+0x3c>
     20a:	89 2b       	or	r24, r25
     20c:	41 f0       	breq	.+16     	; 0x21e <fnd_display+0x4a>
     20e:	84 c0       	rjmp	.+264    	; 0x318 <fnd_display+0x144>
     210:	82 30       	cpi	r24, 0x02	; 2
     212:	91 05       	cpc	r25, r1
     214:	f1 f1       	breq	.+124    	; 0x292 <fnd_display+0xbe>
     216:	03 97       	sbiw	r24, 0x03	; 3
     218:	09 f4       	brne	.+2      	; 0x21c <fnd_display+0x48>
     21a:	5e c0       	rjmp	.+188    	; 0x2d8 <fnd_display+0x104>
     21c:	7d c0       	rjmp	.+250    	; 0x318 <fnd_display+0x144>
	{
		case 0 :
		FND_DIGIT_PORT = ~0x80;
     21e:	8f e7       	ldi	r24, 0x7F	; 127
     220:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_font[sec_count % 10];   // 0~9초
     222:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <sec_count>
     226:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <sec_count+0x1>
     22a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sec_count+0x2>
     22e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <sec_count+0x3>
     232:	2a e0       	ldi	r18, 0x0A	; 10
     234:	30 e0       	ldi	r19, 0x00	; 0
     236:	40 e0       	ldi	r20, 0x00	; 0
     238:	50 e0       	ldi	r21, 0x00	; 0
     23a:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     23e:	e1 e0       	ldi	r30, 0x01	; 1
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	ec 0f       	add	r30, r28
     244:	fd 1f       	adc	r31, r29
     246:	e6 0f       	add	r30, r22
     248:	f7 1f       	adc	r31, r23
     24a:	80 81       	ld	r24, Z
     24c:	85 bb       	out	0x15, r24	; 21
		break;
     24e:	64 c0       	rjmp	.+200    	; 0x318 <fnd_display+0x144>

		case 1 :
		FND_DIGIT_PORT = ~0x40;
     250:	8f eb       	ldi	r24, 0xBF	; 191
     252:	88 bb       	out	0x18, r24	; 24

		FND_DATA_PORT = fnd_font[sec_count / 10 % 6]; // 10단위 초
     254:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <sec_count>
     258:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <sec_count+0x1>
     25c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sec_count+0x2>
     260:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <sec_count+0x3>
     264:	2a e0       	ldi	r18, 0x0A	; 10
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     270:	ca 01       	movw	r24, r20
     272:	b9 01       	movw	r22, r18
     274:	26 e0       	ldi	r18, 0x06	; 6
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	40 e0       	ldi	r20, 0x00	; 0
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     280:	e1 e0       	ldi	r30, 0x01	; 1
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	ec 0f       	add	r30, r28
     286:	fd 1f       	adc	r31, r29
     288:	e6 0f       	add	r30, r22
     28a:	f7 1f       	adc	r31, r23
     28c:	80 81       	ld	r24, Z
     28e:	85 bb       	out	0x15, r24	; 21
		break;
     290:	43 c0       	rjmp	.+134    	; 0x318 <fnd_display+0x144>

		case 2 :
		FND_DIGIT_PORT = ~0x20;
     292:	8f ed       	ldi	r24, 0xDF	; 223
     294:	88 bb       	out	0x18, r24	; 24
			FND_DATA_PORT = fnd_font[sec_count / 60 % 10] | fnd_font[10]; // 1단위 분
     296:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <sec_count>
     29a:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <sec_count+0x1>
     29e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sec_count+0x2>
     2a2:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <sec_count+0x3>
     2a6:	2c e3       	ldi	r18, 0x3C	; 60
     2a8:	30 e0       	ldi	r19, 0x00	; 0
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	50 e0       	ldi	r21, 0x00	; 0
     2ae:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     2b2:	ca 01       	movw	r24, r20
     2b4:	b9 01       	movw	r22, r18
     2b6:	2a e0       	ldi	r18, 0x0A	; 10
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	40 e0       	ldi	r20, 0x00	; 0
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     2c2:	e1 e0       	ldi	r30, 0x01	; 1
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	ec 0f       	add	r30, r28
     2c8:	fd 1f       	adc	r31, r29
     2ca:	e6 0f       	add	r30, r22
     2cc:	f7 1f       	adc	r31, r23
     2ce:	90 81       	ld	r25, Z
     2d0:	8b 85       	ldd	r24, Y+11	; 0x0b
     2d2:	89 2b       	or	r24, r25
     2d4:	85 bb       	out	0x15, r24	; 21
		break;
     2d6:	20 c0       	rjmp	.+64     	; 0x318 <fnd_display+0x144>

		case 3 :
		FND_DIGIT_PORT = ~0x10;
     2d8:	8f ee       	ldi	r24, 0xEF	; 239
     2da:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_font[sec_count / 600 % 6]; // 10단위 분
     2dc:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <sec_count>
     2e0:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <sec_count+0x1>
     2e4:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sec_count+0x2>
     2e8:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <sec_count+0x3>
     2ec:	28 e5       	ldi	r18, 0x58	; 88
     2ee:	32 e0       	ldi	r19, 0x02	; 2
     2f0:	40 e0       	ldi	r20, 0x00	; 0
     2f2:	50 e0       	ldi	r21, 0x00	; 0
     2f4:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     2f8:	ca 01       	movw	r24, r20
     2fa:	b9 01       	movw	r22, r18
     2fc:	26 e0       	ldi	r18, 0x06	; 6
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	40 e0       	ldi	r20, 0x00	; 0
     302:	50 e0       	ldi	r21, 0x00	; 0
     304:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__udivmodsi4>
     308:	e1 e0       	ldi	r30, 0x01	; 1
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	ec 0f       	add	r30, r28
     30e:	fd 1f       	adc	r31, r29
     310:	e6 0f       	add	r30, r22
     312:	f7 1f       	adc	r31, r23
     314:	80 81       	ld	r24, Z
     316:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select++;
     318:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <digit_select.1826>
     31c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <digit_select.1826+0x1>
     320:	01 96       	adiw	r24, 0x01	; 1
	digit_select %= 4; //다음 표시할 자리수 선택
     322:	83 70       	andi	r24, 0x03	; 3
     324:	90 78       	andi	r25, 0x80	; 128
     326:	99 23       	and	r25, r25
     328:	24 f4       	brge	.+8      	; 0x332 <fnd_display+0x15e>
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	8c 6f       	ori	r24, 0xFC	; 252
     32e:	9f 6f       	ori	r25, 0xFF	; 255
     330:	01 96       	adiw	r24, 0x01	; 1
     332:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <digit_select.1826+0x1>
     336:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <digit_select.1826>
}
     33a:	2b 96       	adiw	r28, 0x0b	; 11
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	08 95       	ret

0000034c <fnd_main>:
	dumy_fanc // 더미
};

int fnd_main(void)
{
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
     34c:	8f ef       	ldi	r24, 0xFF	; 255
     34e:	8a bb       	out	0x1a, r24	; 26
	init_fnd(); // fnd 초기화
     350:	3a df       	rcall	.-396    	; 0x1c6 <init_fnd>
	init_button(); // button 초기화
     352:	bb de       	rcall	.-650    	; 0xca <init_button>
     354:	e1 2c       	mov	r14, r1
	
	int button1_state = 0;
	int button2_state = 0;
	int button3_state = 0;
     356:	f1 2c       	mov	r15, r1
     358:	00 e0       	ldi	r16, 0x00	; 0
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
	init_fnd(); // fnd 초기화
	init_button(); // button 초기화
	
	int button1_state = 0;
	int button2_state = 0;
     35a:	10 e0       	ldi	r17, 0x00	; 0
     35c:	c0 e0       	ldi	r28, 0x00	; 0
{
	DDRA = 0xff;	//PORTA에 연결된 PIN 8개를 모두 output으로 설정. 출력 : 1
	init_fnd(); // fnd 초기화
	init_button(); // button 초기화
	
	int button1_state = 0;
     35e:	d0 e0       	ldi	r29, 0x00	; 0
     360:	64 e0       	ldi	r22, 0x04	; 4
	int button2_state = 0;
	int button3_state = 0;
	
	while(1)
	{
		if (get_button(BUTTON0, BUTTON0PIN)) // 버튼 0을 받으면 자동 세탁 모드로 진입
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	b4 de       	rcall	.-664    	; 0xd2 <get_button>
     36a:	89 2b       	or	r24, r25
     36c:	21 f0       	breq	.+8      	; 0x376 <fnd_main+0x2a>
     36e:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <select_wash_mode+0x1>
		{
			select_wash_mode = AUTO_WASH;
     372:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <select_wash_mode>
     376:	65 e0       	ldi	r22, 0x05	; 5
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	a9 de       	rcall	.-686    	; 0xd2 <get_button>
     380:	89 2b       	or	r24, r25
     382:	b1 f0       	breq	.+44     	; 0x3b0 <fnd_main+0x64>
     384:	81 e0       	ldi	r24, 0x01	; 1
		{
			button1_state = !button1_state;
     386:	20 97       	sbiw	r28, 0x00	; 0
     388:	09 f0       	breq	.+2      	; 0x38c <fnd_main+0x40>
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	cd 2b       	or	r28, r29
			
			if (button1_state) //
     390:	41 f4       	brne	.+16     	; 0x3a2 <fnd_main+0x56>
     392:	21 e0       	ldi	r18, 0x01	; 1
			{
				select_wash_mode = FAST_WASH;
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     39a:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     39e:	ec 01       	movw	r28, r24
			select_wash_mode = AUTO_WASH;
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
		{
			button1_state = !button1_state;
     3a0:	07 c0       	rjmp	.+14     	; 0x3b0 <fnd_main+0x64>
     3a2:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = FAST_WASH;
			}
			else //
			{
				select_wash_mode = MAIN_SCREEN;
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3aa:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3ae:	ec 01       	movw	r28, r24
			select_wash_mode = AUTO_WASH;
		}
		
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1을 받으면 쾌속 세탁 모드로 진입
		{
			button1_state = !button1_state;
     3b0:	66 e0       	ldi	r22, 0x06	; 6
			{
				select_wash_mode = MAIN_SCREEN;
			}
		}
		
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2를 받으면 헹굼 + 탈수 모드로 진입
     3b2:	70 e0       	ldi	r23, 0x00	; 0
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	8c de       	rcall	.-744    	; 0xd2 <get_button>
     3ba:	89 2b       	or	r24, r25
     3bc:	b9 f0       	breq	.+46     	; 0x3ec <fnd_main+0xa0>
     3be:	81 e0       	ldi	r24, 0x01	; 1
		{
			button2_state = !button2_state;\
     3c0:	01 15       	cp	r16, r1
     3c2:	11 05       	cpc	r17, r1
     3c4:	09 f0       	breq	.+2      	; 0x3c8 <fnd_main+0x7c>
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	01 2b       	or	r16, r17
			
			if (button2_state)
     3cc:	41 f4       	brne	.+16     	; 0x3de <fnd_main+0x92>
     3ce:	22 e0       	ldi	r18, 0x02	; 2
			{
				select_wash_mode = RINSE_AND_SPINDRY;
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3d6:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3da:	8c 01       	movw	r16, r24
			}
		}
		
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2를 받으면 헹굼 + 탈수 모드로 진입
		{
			button2_state = !button2_state;\
     3dc:	07 c0       	rjmp	.+14     	; 0x3ec <fnd_main+0xa0>
     3de:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = RINSE_AND_SPINDRY;
			}
			else
			{
				select_wash_mode = MAIN_SCREEN;	
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     3e6:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     3ea:	8c 01       	movw	r16, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
     3ec:	67 e0       	ldi	r22, 0x07	; 7
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	83 e0       	ldi	r24, 0x03	; 3
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	6e de       	rcall	.-804    	; 0xd2 <get_button>
     3f6:	89 2b       	or	r24, r25
     3f8:	b9 f0       	breq	.+46     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3fa:	81 e0       	ldi	r24, 0x01	; 1
		{
			button3_state = !button3_state;
     3fc:	e1 14       	cp	r14, r1
     3fe:	f1 04       	cpc	r15, r1
     400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	ef 28       	or	r14, r15
			
			if (button3_state) //
     408:	41 f4       	brne	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     40a:	23 e0       	ldi	r18, 0x03	; 3
			{
				select_wash_mode = ONLY_SPINDRY;
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     412:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     416:	7c 01       	movw	r14, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
		{
			button3_state = !button3_state;
     418:	07 c0       	rjmp	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     41a:	24 e0       	ldi	r18, 0x04	; 4
			{
				select_wash_mode = ONLY_SPINDRY;
			}
			else //
			{
				select_wash_mode = MAIN_SCREEN;
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <select_wash_mode+0x1>
     422:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <select_wash_mode>
     426:	7c 01       	movw	r14, r24
			}
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3을 받으면 탈수 단독 모드로 진입
		{
			button3_state = !button3_state;
     428:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <select_wash_mode>
			else //
			{
				select_wash_mode = MAIN_SCREEN;
			}
		}
		fp_wash_mode[select_wash_mode]();
     42c:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <select_wash_mode+0x1>
     430:	ee 0f       	add	r30, r30
     432:	ff 1f       	adc	r31, r31
     434:	e6 5f       	subi	r30, 0xF6	; 246
     436:	fe 4f       	sbci	r31, 0xFE	; 254
     438:	01 90       	ld	r0, Z+
     43a:	f0 81       	ld	r31, Z
     43c:	e0 2d       	mov	r30, r0
     43e:	09 95       	icall
     440:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
		//auto_wash_led_on(&led_shift_num);
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     444:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     448:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     44c:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     450:	02 97       	sbiw	r24, 0x02	; 2
     452:	a1 05       	cpc	r26, r1
     454:	b1 05       	cpc	r27, r1
     456:	08 f4       	brcc	.+2      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     458:	83 cf       	rjmp	.-250    	; 0x360 <fnd_main+0x14>
     45a:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
		{
			fnd_refreshrate = 0;
     45e:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     462:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     466:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			fnd_display();
     46a:	b4 de       	rcall	.-664    	; 0x1d4 <fnd_display>
     46c:	79 cf       	rjmp	.-270    	; 0x360 <fnd_main+0x14>

0000046e <auto_wash>:
     46e:	81 e0       	ldi	r24, 0x01	; 1

////////////////////////////////////////////메인화면에서 동작하는 함수들////////////////////////////////////////////////

void auto_wash(void) // 자동 세탁
{
	sec_count = 1;
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	a0 e0       	ldi	r26, 0x00	; 0
     474:	b0 e0       	ldi	r27, 0x00	; 0
     476:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     47a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     47e:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     482:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
	
	int auto_step_led = 0;
	
	while (auto_step_led < 4)
     486:	33 c0       	rjmp	.+102    	; 0x4ee <auto_wash+0x80>
	{
		if (get_button(BUTTON0, BUTTON0PIN))
		{
			select_wash_mode = 4;
     488:	84 e0       	ldi	r24, 0x04	; 4
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <select_wash_mode+0x1>
     490:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <select_wash_mode>
	}
	// 여기까지 자동 세탁의 물온도, 헹굼횟수, 탈수 강도를 선택함 밑에서 지정한 시간만큼 모터가 돌아가고 탈수 강도에 맞게 30초 동안 강도에 맞게 진행
	
	//여기에 시간 만큼 회전하는 함수 추가.
	
}
     494:	08 95       	ret
		if (get_button(BUTTON0, BUTTON0PIN))
		{
			select_wash_mode = 4;
			break;
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     496:	65 e0       	ldi	r22, 0x05	; 5
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	19 de       	rcall	.-974    	; 0xd2 <get_button>
     4a0:	89 2b       	or	r24, r25
     4a2:	21 f0       	breq	.+8      	; 0x4ac <auto_wash+0x3e>
		{
			if (auto_step_led == 0) // 물 온도 선택하기  --- 물온도 변수 필요하고 
			{
				auto_wash_mode = 0;
     4a4:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <auto_wash_mode+0x1>
     4a8:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <auto_wash_mode>
			}
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     4ac:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     4b0:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     4b4:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     4b8:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     4bc:	02 97       	sbiw	r24, 0x02	; 2
     4be:	a1 05       	cpc	r26, r1
     4c0:	b1 05       	cpc	r27, r1
     4c2:	48 f0       	brcs	.+18     	; 0x4d6 <auto_wash+0x68>
		{
			fnd_refreshrate = 0;
     4c4:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
     4c8:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     4cc:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     4d0:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			fnd_display();
     4d4:	7f de       	rcall	.-770    	; 0x1d4 <fnd_display>
		}
		auto_wash_select[auto_wash_mode]();
     4d6:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <auto_wash_mode>
     4da:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <auto_wash_mode+0x1>
     4de:	ee 0f       	add	r30, r30
     4e0:	ff 1f       	adc	r31, r31
     4e2:	e0 50       	subi	r30, 0x00	; 0
     4e4:	ff 4f       	sbci	r31, 0xFF	; 255
     4e6:	01 90       	ld	r0, Z+
     4e8:	f0 81       	ld	r31, Z
     4ea:	e0 2d       	mov	r30, r0
     4ec:	09 95       	icall
	
	int auto_step_led = 0;
	
	while (auto_step_led < 4)
	{
		if (get_button(BUTTON0, BUTTON0PIN))
     4ee:	64 e0       	ldi	r22, 0x04	; 4
     4f0:	70 e0       	ldi	r23, 0x00	; 0
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	ed dd       	rcall	.-1062   	; 0xd2 <get_button>
     4f8:	89 2b       	or	r24, r25
     4fa:	69 f2       	breq	.-102    	; 0x496 <auto_wash+0x28>
     4fc:	c5 cf       	rjmp	.-118    	; 0x488 <auto_wash+0x1a>

000004fe <water_temperature>:
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////자동 세척 모드에서 동작하는 함수들////////////////////////////////////////////
void water_temperature() // 물 온도 선택
{
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
	PORTA = 0x07;
     502:	87 e0       	ldi	r24, 0x07	; 7
     504:	8b bb       	out	0x1b, r24	; 27
	int water_tem_toggle = 1;
	
	sec_count = 30;  // deflaut 물 온도
     506:	8e e1       	ldi	r24, 0x1E	; 30
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	a0 e0       	ldi	r26, 0x00	; 0
     50c:	b0 e0       	ldi	r27, 0x00	; 0
     50e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     512:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     516:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     51a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>

/////////////////////////////////////////자동 세척 모드에서 동작하는 함수들////////////////////////////////////////////
void water_temperature() // 물 온도 선택
{
	PORTA = 0x07;
	int water_tem_toggle = 1;
     51e:	c1 e0       	ldi	r28, 0x01	; 1
     520:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 30;  // deflaut 물 온도
	
	while (water_tem_toggle)
     522:	60 c0       	rjmp	.+192    	; 0x5e4 <water_temperature+0xe6>
	{
		if (get_button(BUTTON2, BUTTON2PIN))
     524:	66 e0       	ldi	r22, 0x06	; 6
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	d2 dd       	rcall	.-1116   	; 0xd2 <get_button>
     52e:	89 2b       	or	r24, r25
     530:	99 f0       	breq	.+38     	; 0x558 <water_temperature+0x5a>
		{
			sec_count -= 5;
     532:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     536:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     53a:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     53e:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     542:	05 97       	sbiw	r24, 0x05	; 5
     544:	a1 09       	sbc	r26, r1
     546:	b1 09       	sbc	r27, r1
     548:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     54c:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     550:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     554:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN))
     558:	67 e0       	ldi	r22, 0x07	; 7
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	83 e0       	ldi	r24, 0x03	; 3
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	b8 dd       	rcall	.-1168   	; 0xd2 <get_button>
     562:	89 2b       	or	r24, r25
     564:	99 f0       	breq	.+38     	; 0x58c <water_temperature+0x8e>
		{
			sec_count += 5;
     566:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     56a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     56e:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     572:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     576:	05 96       	adiw	r24, 0x05	; 5
     578:	a1 1d       	adc	r26, r1
     57a:	b1 1d       	adc	r27, r1
     57c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     580:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     584:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     588:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     58c:	65 e0       	ldi	r22, 0x05	; 5
     58e:	70 e0       	ldi	r23, 0x00	; 0
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	9e dd       	rcall	.-1220   	; 0xd2 <get_button>
     596:	89 2b       	or	r24, r25
     598:	81 f0       	breq	.+32     	; 0x5ba <water_temperature+0xbc>
		{	
			sec_count = 0;
     59a:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count>
     59e:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x1>
     5a2:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <sec_count+0x2>
     5a6:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <sec_count+0x3>
			auto_wash_mode = 1;
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     5b2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			water_tem_toggle = 0;
     5b6:	c0 e0       	ldi	r28, 0x00	; 0
     5b8:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     5ba:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     5be:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     5c2:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     5c6:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     5ca:	02 97       	sbiw	r24, 0x02	; 2
     5cc:	a1 05       	cpc	r26, r1
     5ce:	b1 05       	cpc	r27, r1
     5d0:	48 f0       	brcs	.+18     	; 0x5e4 <water_temperature+0xe6>
		{
			fnd_refreshrate = 0;
     5d2:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
     5d6:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     5da:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     5de:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			fnd_display();
     5e2:	f8 dd       	rcall	.-1040   	; 0x1d4 <fnd_display>
	PORTA = 0x07;
	int water_tem_toggle = 1;
	
	sec_count = 30;  // deflaut 물 온도
	
	while (water_tem_toggle)
     5e4:	20 97       	sbiw	r28, 0x00	; 0
     5e6:	09 f0       	breq	.+2      	; 0x5ea <water_temperature+0xec>
     5e8:	9d cf       	rjmp	.-198    	; 0x524 <water_temperature+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	08 95       	ret

000005f0 <rinse_frequency>:

void rinse_frequency() // 헹굼 횟수 조절
{
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
	PORTA = 0x03;
     5f4:	83 e0       	ldi	r24, 0x03	; 3
     5f6:	8b bb       	out	0x1b, r24	; 27
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 5; // deflaut 헹굼 횟수
     5f8:	85 e0       	ldi	r24, 0x05	; 5
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	a0 e0       	ldi	r26, 0x00	; 0
     5fe:	b0 e0       	ldi	r27, 0x00	; 0
     600:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     604:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     608:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     60c:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
}

void rinse_frequency() // 헹굼 횟수 조절
{
	PORTA = 0x03;
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
     610:	c1 e0       	ldi	r28, 0x01	; 1
     612:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 5; // deflaut 헹굼 횟수
	
	while (rinse_frequency_toggle)
     614:	79 c0       	rjmp	.+242    	; 0x708 <rinse_frequency+0x118>
	{
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2 누르면 횟수 1 감소
     616:	66 e0       	ldi	r22, 0x06	; 6
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	82 e0       	ldi	r24, 0x02	; 2
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	59 dd       	rcall	.-1358   	; 0xd2 <get_button>
     620:	89 2b       	or	r24, r25
     622:	99 f0       	breq	.+38     	; 0x64a <rinse_frequency+0x5a>
		{
			sec_count -= 1;
     624:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     628:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     62c:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     630:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	a1 09       	sbc	r26, r1
     638:	b1 09       	sbc	r27, r1
     63a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     63e:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     642:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     646:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3 누르면 횟수 1 증가
     64a:	67 e0       	ldi	r22, 0x07	; 7
     64c:	70 e0       	ldi	r23, 0x00	; 0
     64e:	83 e0       	ldi	r24, 0x03	; 3
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	3f dd       	rcall	.-1410   	; 0xd2 <get_button>
     654:	89 2b       	or	r24, r25
     656:	99 f0       	breq	.+38     	; 0x67e <rinse_frequency+0x8e>
		{
			sec_count += 1;
     658:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     65c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     660:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     664:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     668:	01 96       	adiw	r24, 0x01	; 1
     66a:	a1 1d       	adc	r26, r1
     66c:	b1 1d       	adc	r27, r1
     66e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     672:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     676:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     67a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN))
     67e:	65 e0       	ldi	r22, 0x05	; 5
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	25 dd       	rcall	.-1462   	; 0xd2 <get_button>
     688:	89 2b       	or	r24, r25
     68a:	49 f1       	breq	.+82     	; 0x6de <rinse_frequency+0xee>
		{
			total_wash_time += sec_count * 10; // 버튼 1누르면 횟수 * 10초를 전역변수에 저장하고 다음 단계로 간 다음 탈출
     68c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     690:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     694:	9c 01       	movw	r18, r24
     696:	22 0f       	add	r18, r18
     698:	33 1f       	adc	r19, r19
     69a:	88 0f       	add	r24, r24
     69c:	99 1f       	adc	r25, r25
     69e:	88 0f       	add	r24, r24
     6a0:	99 1f       	adc	r25, r25
     6a2:	88 0f       	add	r24, r24
     6a4:	99 1f       	adc	r25, r25
     6a6:	82 0f       	add	r24, r18
     6a8:	93 1f       	adc	r25, r19
     6aa:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <total_wash_time>
     6ae:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <total_wash_time+0x1>
     6b2:	82 0f       	add	r24, r18
     6b4:	93 1f       	adc	r25, r19
     6b6:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <total_wash_time+0x1>
     6ba:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <total_wash_time>
			sec_count = 0;
     6be:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count>
     6c2:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x1>
     6c6:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <sec_count+0x2>
     6ca:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <sec_count+0x3>
			auto_wash_mode = 2;
     6ce:	82 e0       	ldi	r24, 0x02	; 2
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     6d6:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			rinse_frequency_toggle = 0;
     6da:	c0 e0       	ldi	r28, 0x00	; 0
     6dc:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     6de:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     6e2:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     6e6:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     6ea:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     6ee:	02 97       	sbiw	r24, 0x02	; 2
     6f0:	a1 05       	cpc	r26, r1
     6f2:	b1 05       	cpc	r27, r1
     6f4:	48 f0       	brcs	.+18     	; 0x708 <rinse_frequency+0x118>
		{
			fnd_refreshrate = 0;
     6f6:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
     6fa:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     6fe:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     702:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			fnd_display();
     706:	66 dd       	rcall	.-1332   	; 0x1d4 <fnd_display>
	PORTA = 0x03;
	int rinse_frequency_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 5; // deflaut 헹굼 횟수
	
	while (rinse_frequency_toggle)
     708:	20 97       	sbiw	r28, 0x00	; 0
     70a:	09 f0       	breq	.+2      	; 0x70e <rinse_frequency+0x11e>
     70c:	84 cf       	rjmp	.-248    	; 0x616 <rinse_frequency+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	08 95       	ret

00000714 <spindry_strength>:

void spindry_strength()
{
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
	PORTA = 0x01;
     718:	81 e0       	ldi	r24, 0x01	; 1
     71a:	8b bb       	out	0x1b, r24	; 27
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
     71c:	83 e0       	ldi	r24, 0x03	; 3
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	a0 e0       	ldi	r26, 0x00	; 0
     722:	b0 e0       	ldi	r27, 0x00	; 0
     724:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     728:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     72c:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     730:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
}

void spindry_strength()
{
	PORTA = 0x01;
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
     734:	c1 e0       	ldi	r28, 0x01	; 1
     736:	d0 e0       	ldi	r29, 0x00	; 0
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
	
	while (spindry_strength_toggle)
     738:	98 c0       	rjmp	.+304    	; 0x86a <spindry_strength+0x156>
	{
		if (get_button(BUTTON2, BUTTON2PIN)) // 버튼 2 누르면 횟수 1 감소
     73a:	66 e0       	ldi	r22, 0x06	; 6
     73c:	70 e0       	ldi	r23, 0x00	; 0
     73e:	82 e0       	ldi	r24, 0x02	; 2
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	c7 dc       	rcall	.-1650   	; 0xd2 <get_button>
     744:	89 2b       	or	r24, r25
     746:	99 f0       	breq	.+38     	; 0x76e <spindry_strength+0x5a>
		{
			sec_count -= 1;
     748:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     74c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     750:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     754:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	a1 09       	sbc	r26, r1
     75c:	b1 09       	sbc	r27, r1
     75e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     762:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     766:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     76a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		
		if (get_button(BUTTON3, BUTTON3PIN)) // 버튼 3 누르면 횟수 1 증가
     76e:	67 e0       	ldi	r22, 0x07	; 7
     770:	70 e0       	ldi	r23, 0x00	; 0
     772:	83 e0       	ldi	r24, 0x03	; 3
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	ad dc       	rcall	.-1702   	; 0xd2 <get_button>
     778:	89 2b       	or	r24, r25
     77a:	99 f0       	breq	.+38     	; 0x7a2 <spindry_strength+0x8e>
		{
			sec_count += 1;
     77c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     780:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     784:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     788:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     78c:	01 96       	adiw	r24, 0x01	; 1
     78e:	a1 1d       	adc	r26, r1
     790:	b1 1d       	adc	r27, r1
     792:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     796:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     79a:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     79e:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
		}
		if (get_button(BUTTON1, BUTTON1PIN)) // 버튼 1 누르면 세팅한 강도에 맞는 회전값 반환
     7a2:	65 e0       	ldi	r22, 0x05	; 5
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	93 dc       	rcall	.-1754   	; 0xd2 <get_button>
     7ac:	89 2b       	or	r24, r25
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <spindry_strength+0x9e>
     7b0:	47 c0       	rjmp	.+142    	; 0x840 <spindry_strength+0x12c>
		{
			if(sec_count == 1)
     7b2:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     7b6:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     7ba:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     7be:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     7c2:	81 30       	cpi	r24, 0x01	; 1
     7c4:	91 05       	cpc	r25, r1
     7c6:	a1 05       	cpc	r26, r1
     7c8:	b1 05       	cpc	r27, r1
     7ca:	39 f4       	brne	.+14     	; 0x7da <spindry_strength+0xc6>
			{
				spin_strength_val = 115;
     7cc:	83 e7       	ldi	r24, 0x73	; 115
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     7d4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     7d8:	22 c0       	rjmp	.+68     	; 0x81e <spindry_strength+0x10a>
			}
			else if (sec_count == 2)
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	91 05       	cpc	r25, r1
     7de:	a1 05       	cpc	r26, r1
     7e0:	b1 05       	cpc	r27, r1
     7e2:	39 f4       	brne	.+14     	; 0x7f2 <spindry_strength+0xde>
			{
				spin_strength_val = 160;
     7e4:	80 ea       	ldi	r24, 0xA0	; 160
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     7ec:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     7f0:	16 c0       	rjmp	.+44     	; 0x81e <spindry_strength+0x10a>
			}
			else if (sec_count == 3)
     7f2:	83 30       	cpi	r24, 0x03	; 3
     7f4:	91 05       	cpc	r25, r1
     7f6:	a1 05       	cpc	r26, r1
     7f8:	b1 05       	cpc	r27, r1
     7fa:	39 f4       	brne	.+14     	; 0x80a <spindry_strength+0xf6>
			{
				spin_strength_val = 205;
     7fc:	8d ec       	ldi	r24, 0xCD	; 205
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     804:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
     808:	0a c0       	rjmp	.+20     	; 0x81e <spindry_strength+0x10a>
			}
			else if (sec_count == 4)
     80a:	04 97       	sbiw	r24, 0x04	; 4
     80c:	a1 05       	cpc	r26, r1
     80e:	b1 05       	cpc	r27, r1
     810:	31 f4       	brne	.+12     	; 0x81e <spindry_strength+0x10a>
			{
				spin_strength_val = 250;
     812:	8a ef       	ldi	r24, 0xFA	; 250
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <spin_strength_val+0x1>
     81a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <spin_strength_val>
			}
			PORTA = 0;
     81e:	1b ba       	out	0x1b, r1	; 27
			sec_count = 0;
     820:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count>
     824:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x1>
     828:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <sec_count+0x2>
     82c:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <sec_count+0x3>
			auto_wash_mode = 3;
     830:	83 e0       	ldi	r24, 0x03	; 3
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     838:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
			spindry_strength_toggle = 0;
     83c:	c0 e0       	ldi	r28, 0x00	; 0
     83e:	d0 e0       	ldi	r29, 0x00	; 0
		}
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     840:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     844:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     848:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     84c:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     850:	02 97       	sbiw	r24, 0x02	; 2
     852:	a1 05       	cpc	r26, r1
     854:	b1 05       	cpc	r27, r1
     856:	48 f0       	brcs	.+18     	; 0x86a <spindry_strength+0x156>
		{
			fnd_refreshrate = 0;
     858:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
     85c:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     860:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     864:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			fnd_display();
     868:	b5 dc       	rcall	.-1686   	; 0x1d4 <fnd_display>
	PORTA = 0x01;
	int spindry_strength_toggle = 1; // 버튼1 누를 때 까지 반복
	
	sec_count = 3; // deflaut 탈수 강도 최대 4까지
	
	while (spindry_strength_toggle)
     86a:	20 97       	sbiw	r28, 0x00	; 0
     86c:	09 f0       	breq	.+2      	; 0x870 <spindry_strength+0x15c>
     86e:	65 cf       	rjmp	.-310    	; 0x73a <spindry_strength+0x26>
		{
			fnd_refreshrate = 0;
			fnd_display();
		}
	}
}
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	08 95       	ret

00000876 <fnd_loading_display>:
	digit_select++;
	digit_select %= 4; //다음 표시할 자리수 선택
}

void fnd_loading_display(int *loading_rot) // 진행 로딩 상황 표시 
{
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62
     886:	28 97       	sbiw	r28, 0x08	; 8
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61
     892:	9c 01       	movw	r18, r24
	int a,b,c,d;                 //  |-     -|    |_   _|     -      _    -,_	  꺼짐
	uint8_t fnd_loading_font[] = {~0xce, ~0xf8, ~0xc7, ~0xf1, ~0xfe, ~0xf7, ~0xf6, ~0xff};
     894:	98 e0       	ldi	r25, 0x08	; 8
     896:	e9 e3       	ldi	r30, 0x39	; 57
     898:	f1 e0       	ldi	r31, 0x01	; 1
     89a:	de 01       	movw	r26, r28
     89c:	11 96       	adiw	r26, 0x01	; 1
     89e:	01 90       	ld	r0, Z+
     8a0:	0d 92       	st	X+, r0
     8a2:	9a 95       	dec	r25
     8a4:	e1 f7       	brne	.-8      	; 0x89e <fnd_loading_display+0x28>
	if (*loading_rot == 0)
     8a6:	f9 01       	movw	r30, r18
     8a8:	80 81       	ld	r24, Z
     8aa:	91 81       	ldd	r25, Z+1	; 0x01
     8ac:	00 97       	sbiw	r24, 0x00	; 0
     8ae:	31 f0       	breq	.+12     	; 0x8bc <fnd_loading_display+0x46>
	{
		a = 0; b = 5, c = 4, d = 3;	
	}
	else if (*loading_rot == 1)
     8b0:	81 30       	cpi	r24, 0x01	; 1
     8b2:	91 05       	cpc	r25, r1
     8b4:	79 f0       	breq	.+30     	; 0x8d4 <fnd_loading_display+0x5e>
	{
		a = 2; b = 4, c = 5, d = 1;
	}
	else if (*loading_rot == 2)
     8b6:	02 97       	sbiw	r24, 0x02	; 2
     8b8:	11 f5       	brne	.+68     	; 0x8fe <fnd_loading_display+0x88>
     8ba:	16 c0       	rjmp	.+44     	; 0x8e8 <fnd_loading_display+0x72>
{
	int a,b,c,d;                 //  |-     -|    |_   _|     -      _    -,_	  꺼짐
	uint8_t fnd_loading_font[] = {~0xce, ~0xf8, ~0xc7, ~0xf1, ~0xfe, ~0xf7, ~0xf6, ~0xff};
	if (*loading_rot == 0)
	{
		a = 0; b = 5, c = 4, d = 3;	
     8bc:	0f 2e       	mov	r0, r31
     8be:	f3 e0       	ldi	r31, 0x03	; 3
     8c0:	ef 2e       	mov	r14, r31
     8c2:	f1 2c       	mov	r15, r1
     8c4:	f0 2d       	mov	r31, r0
     8c6:	64 e0       	ldi	r22, 0x04	; 4
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	05 e0       	ldi	r16, 0x05	; 5
     8cc:	10 e0       	ldi	r17, 0x00	; 0
     8ce:	40 e0       	ldi	r20, 0x00	; 0
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	15 c0       	rjmp	.+42     	; 0x8fe <fnd_loading_display+0x88>
	}
	else if (*loading_rot == 1)
	{
		a = 2; b = 4, c = 5, d = 1;
     8d4:	ee 24       	eor	r14, r14
     8d6:	e3 94       	inc	r14
     8d8:	f1 2c       	mov	r15, r1
     8da:	65 e0       	ldi	r22, 0x05	; 5
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	04 e0       	ldi	r16, 0x04	; 4
     8e0:	10 e0       	ldi	r17, 0x00	; 0
     8e2:	42 e0       	ldi	r20, 0x02	; 2
     8e4:	50 e0       	ldi	r21, 0x00	; 0
     8e6:	0b c0       	rjmp	.+22     	; 0x8fe <fnd_loading_display+0x88>
	}
	else if (*loading_rot == 2)
	{
		a = 4; b = 6, c = 6, d = 5;
     8e8:	0f 2e       	mov	r0, r31
     8ea:	f5 e0       	ldi	r31, 0x05	; 5
     8ec:	ef 2e       	mov	r14, r31
     8ee:	f1 2c       	mov	r15, r1
     8f0:	f0 2d       	mov	r31, r0
     8f2:	66 e0       	ldi	r22, 0x06	; 6
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	06 e0       	ldi	r16, 0x06	; 6
     8f8:	10 e0       	ldi	r17, 0x00	; 0
     8fa:	44 e0       	ldi	r20, 0x04	; 4
     8fc:	50 e0       	ldi	r21, 0x00	; 0
	}

	static int digit_select = 0; // 자리수 선택 변수 0~3   static : 전역변수처럼 작동

	switch(digit_select)
     8fe:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <digit_select.1840>
     902:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <digit_select.1840+0x1>
     906:	81 30       	cpi	r24, 0x01	; 1
     908:	91 05       	cpc	r25, r1
     90a:	a9 f0       	breq	.+42     	; 0x936 <fnd_loading_display+0xc0>
     90c:	1c f4       	brge	.+6      	; 0x914 <fnd_loading_display+0x9e>
     90e:	89 2b       	or	r24, r25
     910:	39 f0       	breq	.+14     	; 0x920 <fnd_loading_display+0xaa>
     912:	31 c0       	rjmp	.+98     	; 0x976 <fnd_loading_display+0x100>
     914:	82 30       	cpi	r24, 0x02	; 2
     916:	91 05       	cpc	r25, r1
     918:	c9 f0       	breq	.+50     	; 0x94c <fnd_loading_display+0xd6>
     91a:	03 97       	sbiw	r24, 0x03	; 3
     91c:	11 f1       	breq	.+68     	; 0x962 <fnd_loading_display+0xec>
     91e:	2b c0       	rjmp	.+86     	; 0x976 <fnd_loading_display+0x100>
	{
		case 0 :
		FND_DIGIT_PORT = ~0x80;
     920:	8f e7       	ldi	r24, 0x7F	; 127
     922:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[d];
     924:	e1 e0       	ldi	r30, 0x01	; 1
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	ec 0f       	add	r30, r28
     92a:	fd 1f       	adc	r31, r29
     92c:	ee 0d       	add	r30, r14
     92e:	ff 1d       	adc	r31, r15
     930:	80 81       	ld	r24, Z
     932:	85 bb       	out	0x15, r24	; 21
		break;
     934:	20 c0       	rjmp	.+64     	; 0x976 <fnd_loading_display+0x100>

		case 1 :
		FND_DIGIT_PORT = ~0x40;
     936:	8f eb       	ldi	r24, 0xBF	; 191
     938:	88 bb       	out	0x18, r24	; 24

		FND_DATA_PORT = fnd_loading_font[b];
     93a:	e1 e0       	ldi	r30, 0x01	; 1
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	ec 0f       	add	r30, r28
     940:	fd 1f       	adc	r31, r29
     942:	e0 0f       	add	r30, r16
     944:	f1 1f       	adc	r31, r17
     946:	80 81       	ld	r24, Z
     948:	85 bb       	out	0x15, r24	; 21
		break;
     94a:	15 c0       	rjmp	.+42     	; 0x976 <fnd_loading_display+0x100>

		case 2 :
		FND_DIGIT_PORT = ~0x20;
     94c:	8f ed       	ldi	r24, 0xDF	; 223
     94e:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[c];
     950:	e1 e0       	ldi	r30, 0x01	; 1
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	ec 0f       	add	r30, r28
     956:	fd 1f       	adc	r31, r29
     958:	e6 0f       	add	r30, r22
     95a:	f7 1f       	adc	r31, r23
     95c:	80 81       	ld	r24, Z
     95e:	85 bb       	out	0x15, r24	; 21
		break;
     960:	0a c0       	rjmp	.+20     	; 0x976 <fnd_loading_display+0x100>

		case 3 :
		FND_DIGIT_PORT = ~0x10;
     962:	8f ee       	ldi	r24, 0xEF	; 239
     964:	88 bb       	out	0x18, r24	; 24
		FND_DATA_PORT = fnd_loading_font[a];
     966:	e1 e0       	ldi	r30, 0x01	; 1
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	ec 0f       	add	r30, r28
     96c:	fd 1f       	adc	r31, r29
     96e:	e4 0f       	add	r30, r20
     970:	f5 1f       	adc	r31, r21
     972:	80 81       	ld	r24, Z
     974:	85 bb       	out	0x15, r24	; 21
		break;
	}
	digit_select++;
     976:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <digit_select.1840>
     97a:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <digit_select.1840+0x1>
     97e:	01 96       	adiw	r24, 0x01	; 1
	digit_select %= 4; //다음 표시할 자리수 선택
     980:	83 70       	andi	r24, 0x03	; 3
     982:	90 78       	andi	r25, 0x80	; 128
     984:	99 23       	and	r25, r25
     986:	24 f4       	brge	.+8      	; 0x990 <fnd_loading_display+0x11a>
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	8c 6f       	ori	r24, 0xFC	; 252
     98c:	9f 6f       	ori	r25, 0xFF	; 255
     98e:	01 96       	adiw	r24, 0x01	; 1
     990:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <digit_select.1840+0x1>
     994:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <digit_select.1840>
}
     998:	28 96       	adiw	r28, 0x08	; 8
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	ff 90       	pop	r15
     9ae:	ef 90       	pop	r14
     9b0:	08 95       	ret

000009b2 <auto_wash_start>:
		}
	}
}

void auto_wash_start(void)
{
     9b2:	0f 93       	push	r16
     9b4:	1f 93       	push	r17
	sec_count = total_wash_time;
     9b6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <total_wash_time>
     9ba:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <total_wash_time+0x1>
     9be:	09 2e       	mov	r0, r25
     9c0:	00 0c       	add	r0, r0
     9c2:	aa 0b       	sbc	r26, r26
     9c4:	bb 0b       	sbc	r27, r27
     9c6:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     9ca:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     9ce:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     9d2:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
	
	while (sec_count > 0)
     9d6:	b7 c0       	rjmp	.+366    	; 0xb46 <auto_wash_start+0x194>
	{
		washing_machine_fan_control(&spin_strength_val);
     9d8:	86 e1       	ldi	r24, 0x16	; 22
     9da:	91 e0       	ldi	r25, 0x01	; 1
     9dc:	72 d1       	rcall	.+740    	; 0xcc2 <washing_machine_fan_control>
		
		if (msec_count >= 250) // 1초마다 시간 1초씩 감소하고 로딩 회전이 됨.
     9de:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <msec_count>
     9e2:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <msec_count+0x1>
     9e6:	a0 91 6c 01 	lds	r26, 0x016C	; 0x80016c <msec_count+0x2>
     9ea:	b0 91 6d 01 	lds	r27, 0x016D	; 0x80016d <msec_count+0x3>
     9ee:	8a 3f       	cpi	r24, 0xFA	; 250
     9f0:	91 05       	cpc	r25, r1
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	38 f1       	brcs	.+78     	; 0xa46 <auto_wash_start+0x94>
		{
			msec_count = 0;
     9f8:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <msec_count>
     9fc:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <msec_count+0x1>
     a00:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <msec_count+0x2>
     a04:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <msec_count+0x3>
			sec_count--;
     a08:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     a0c:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     a10:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     a14:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     a18:	01 97       	sbiw	r24, 0x01	; 1
     a1a:	a1 09       	sbc	r26, r1
     a1c:	b1 09       	sbc	r27, r1
     a1e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <sec_count>
     a22:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <sec_count+0x1>
     a26:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <sec_count+0x2>
     a2a:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <sec_count+0x3>
			loading_rot++;
     a2e:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <loading_rot>
     a32:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <loading_rot+0x1>
     a36:	01 96       	adiw	r24, 0x01	; 1
			loading_rot %= 3;
     a38:	63 e0       	ldi	r22, 0x03	; 3
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	a1 d4       	rcall	.+2370   	; 0x1380 <__divmodhi4>
     a3e:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <loading_rot+0x1>
     a42:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <loading_rot>
		}
		if (loading_clock_change >= 3000) // 3초마다 로딩창이랑 시간 화면 뜨는거 토글
     a46:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <loading_clock_change>
     a4a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <loading_clock_change+0x1>
     a4e:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <loading_clock_change+0x2>
     a52:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <loading_clock_change+0x3>
     a56:	88 3b       	cpi	r24, 0xB8	; 184
     a58:	9b 40       	sbci	r25, 0x0B	; 11
     a5a:	a1 05       	cpc	r26, r1
     a5c:	b1 05       	cpc	r27, r1
     a5e:	b0 f0       	brcs	.+44     	; 0xa8c <auto_wash_start+0xda>
		{
			loading_clock_change = 0;
     a60:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <loading_clock_change>
     a64:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <loading_clock_change+0x1>
     a68:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <loading_clock_change+0x2>
     a6c:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <loading_clock_change+0x3>
			loading_clock_change_val = !loading_clock_change_val;
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <loading_clock_change_val>
     a78:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <loading_clock_change_val+0x1>
     a7c:	23 2b       	or	r18, r19
     a7e:	11 f0       	breq	.+4      	; 0xa84 <auto_wash_start+0xd2>
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <loading_clock_change_val+0x1>
     a88:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <loading_clock_change_val>
		}
		
		/////여기에 일반세탁 60초 + 헹굼 횟수 * 10초 + 탈수 30초로 구분을 해야함
		if (total_wash_time - sec_count <= 30)
     a8c:	40 91 5a 01 	lds	r20, 0x015A	; 0x80015a <sec_count>
     a90:	50 91 5b 01 	lds	r21, 0x015B	; 0x80015b <sec_count+0x1>
     a94:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <sec_count+0x2>
     a98:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <sec_count+0x3>
     a9c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <total_wash_time>
     aa0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <total_wash_time+0x1>
     aa4:	09 2e       	mov	r0, r25
     aa6:	00 0c       	add	r0, r0
     aa8:	aa 0b       	sbc	r26, r26
     aaa:	bb 0b       	sbc	r27, r27
     aac:	84 1b       	sub	r24, r20
     aae:	95 0b       	sbc	r25, r21
     ab0:	a6 0b       	sbc	r26, r22
     ab2:	b7 0b       	sbc	r27, r23
     ab4:	8f 31       	cpi	r24, 0x1F	; 31
     ab6:	91 05       	cpc	r25, r1
     ab8:	a1 05       	cpc	r26, r1
     aba:	b1 05       	cpc	r27, r1
     abc:	18 f4       	brcc	.+6      	; 0xac4 <auto_wash_start+0x112>
		{
			PORTA = 0xff;
     abe:	8f ef       	ldi	r24, 0xFF	; 255
     ac0:	8b bb       	out	0x1b, r24	; 27
     ac2:	22 c0       	rjmp	.+68     	; 0xb08 <auto_wash_start+0x156>
		}
		
		else if (total_wash_time - sec_count < 60 && total_wash_time - sec_count > 30)
     ac4:	8c 01       	movw	r16, r24
     ac6:	9d 01       	movw	r18, r26
     ac8:	0f 51       	subi	r16, 0x1F	; 31
     aca:	11 09       	sbc	r17, r1
     acc:	21 09       	sbc	r18, r1
     ace:	31 09       	sbc	r19, r1
     ad0:	0d 31       	cpi	r16, 0x1D	; 29
     ad2:	11 05       	cpc	r17, r1
     ad4:	21 05       	cpc	r18, r1
     ad6:	31 05       	cpc	r19, r1
     ad8:	18 f4       	brcc	.+6      	; 0xae0 <auto_wash_start+0x12e>
		{
			PORTA = 0x7e;
     ada:	8e e7       	ldi	r24, 0x7E	; 126
     adc:	8b bb       	out	0x1b, r24	; 27
     ade:	14 c0       	rjmp	.+40     	; 0xb08 <auto_wash_start+0x156>
		}
		
		else if (total_wash_time - sec_count == 60)
     ae0:	cc 97       	sbiw	r24, 0x3c	; 60
     ae2:	a1 05       	cpc	r26, r1
     ae4:	b1 05       	cpc	r27, r1
     ae6:	19 f4       	brne	.+6      	; 0xaee <auto_wash_start+0x13c>
		{
			PORTA = 0x3c;
     ae8:	8c e3       	ldi	r24, 0x3C	; 60
     aea:	8b bb       	out	0x1b, r24	; 27
     aec:	0d c0       	rjmp	.+26     	; 0xb08 <auto_wash_start+0x156>
		}
		
		
		
		else if (sec_count == 30)
     aee:	4e 31       	cpi	r20, 0x1E	; 30
     af0:	51 05       	cpc	r21, r1
     af2:	61 05       	cpc	r22, r1
     af4:	71 05       	cpc	r23, r1
     af6:	19 f4       	brne	.+6      	; 0xafe <auto_wash_start+0x14c>
		{
			PORTA = 0x18;
     af8:	88 e1       	ldi	r24, 0x18	; 24
     afa:	8b bb       	out	0x1b, r24	; 27
     afc:	05 c0       	rjmp	.+10     	; 0xb08 <auto_wash_start+0x156>
		}
		
		else if (sec_count == 0)
     afe:	45 2b       	or	r20, r21
     b00:	46 2b       	or	r20, r22
     b02:	47 2b       	or	r20, r23
     b04:	09 f4       	brne	.+2      	; 0xb08 <auto_wash_start+0x156>
		{
			PORTA = 0;
     b06:	1b ba       	out	0x1b, r1	; 27
		}
		
		if (fnd_refreshrate >= 2) // 2ms 주기로 fnd를 display
     b08:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     b0c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     b10:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     b14:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     b18:	02 97       	sbiw	r24, 0x02	; 2
     b1a:	a1 05       	cpc	r26, r1
     b1c:	b1 05       	cpc	r27, r1
     b1e:	98 f0       	brcs	.+38     	; 0xb46 <auto_wash_start+0x194>
		{
			fnd_refreshrate = 0;
     b20:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <fnd_refreshrate>
     b24:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <fnd_refreshrate+0x1>
     b28:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <fnd_refreshrate+0x2>
     b2c:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <fnd_refreshrate+0x3>
			if (loading_clock_change_val)
     b30:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <loading_clock_change_val>
     b34:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <loading_clock_change_val+0x1>
     b38:	89 2b       	or	r24, r25
			{
				fnd_display(); // 시간 보여주기
     b3a:	11 f0       	breq	.+4      	; 0xb40 <auto_wash_start+0x18e>
     b3c:	4b db       	rcall	.-2410   	; 0x1d4 <fnd_display>
			}
			else
			{
				fnd_loading_display(&loading_rot); // 로딩 보여주기
     b3e:	03 c0       	rjmp	.+6      	; 0xb46 <auto_wash_start+0x194>
     b40:	88 e5       	ldi	r24, 0x58	; 88
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	98 de       	rcall	.-720    	; 0x876 <fnd_loading_display>

void auto_wash_start(void)
{
	sec_count = total_wash_time;
	
	while (sec_count > 0)
     b46:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <sec_count>
     b4a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <sec_count+0x1>
     b4e:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <sec_count+0x2>
     b52:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <sec_count+0x3>
     b56:	89 2b       	or	r24, r25
     b58:	8a 2b       	or	r24, r26
     b5a:	8b 2b       	or	r24, r27
     b5c:	09 f0       	breq	.+2      	; 0xb60 <auto_wash_start+0x1ae>
     b5e:	3c cf       	rjmp	.-392    	; 0x9d8 <auto_wash_start+0x26>
			{
				fnd_loading_display(&loading_rot); // 로딩 보여주기
			}
		}
	}
	OCR3C = 0;
     b60:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     b64:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	sec_count = 0; // 다 끝나면 끝
     b68:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <sec_count>
     b6c:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <sec_count+0x1>
     b70:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <sec_count+0x2>
     b74:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <sec_count+0x3>
	auto_wash_mode = 4;
     b78:	84 e0       	ldi	r24, 0x04	; 4
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <auto_wash_mode+0x1>
     b80:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <auto_wash_mode>
}
     b84:	1f 91       	pop	r17
     b86:	0f 91       	pop	r16
     b88:	08 95       	ret

00000b8a <__vector_16>:
extern void init_n289n();

FILE OUTPUT = FDEV_SETUP_STREAM(UART0_transmit, NULL, _FDEV_SETUP_WRITE);

ISR(TIMER0_OVF_vect)
{
     b8a:	1f 92       	push	r1
     b8c:	0f 92       	push	r0
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	0f 92       	push	r0
     b92:	11 24       	eor	r1, r1
     b94:	8f 93       	push	r24
     b96:	9f 93       	push	r25
     b98:	af 93       	push	r26
     b9a:	bf 93       	push	r27
	TCNT0=6;
     b9c:	86 e0       	ldi	r24, 0x06	; 6
     b9e:	82 bf       	out	0x32, r24	; 50
	msec_count++; 
     ba0:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <msec_count>
     ba4:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <msec_count+0x1>
     ba8:	a0 91 6c 01 	lds	r26, 0x016C	; 0x80016c <msec_count+0x2>
     bac:	b0 91 6d 01 	lds	r27, 0x016D	; 0x80016d <msec_count+0x3>
     bb0:	01 96       	adiw	r24, 0x01	; 1
     bb2:	a1 1d       	adc	r26, r1
     bb4:	b1 1d       	adc	r27, r1
     bb6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <msec_count>
     bba:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <msec_count+0x1>
     bbe:	a0 93 6c 01 	sts	0x016C, r26	; 0x80016c <msec_count+0x2>
     bc2:	b0 93 6d 01 	sts	0x016D, r27	; 0x80016d <msec_count+0x3>
	fnd_refreshrate++; 
     bc6:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <fnd_refreshrate>
     bca:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <fnd_refreshrate+0x1>
     bce:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <fnd_refreshrate+0x2>
     bd2:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <fnd_refreshrate+0x3>
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	a1 1d       	adc	r26, r1
     bda:	b1 1d       	adc	r27, r1
     bdc:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <fnd_refreshrate>
     be0:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <fnd_refreshrate+0x1>
     be4:	a0 93 68 01 	sts	0x0168, r26	; 0x800168 <fnd_refreshrate+0x2>
     be8:	b0 93 69 01 	sts	0x0169, r27	; 0x800169 <fnd_refreshrate+0x3>
	check_timer++;
     bec:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <check_timer>
     bf0:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <check_timer+0x1>
     bf4:	a0 91 64 01 	lds	r26, 0x0164	; 0x800164 <check_timer+0x2>
     bf8:	b0 91 65 01 	lds	r27, 0x0165	; 0x800165 <check_timer+0x3>
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	a1 1d       	adc	r26, r1
     c00:	b1 1d       	adc	r27, r1
     c02:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <check_timer>
     c06:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <check_timer+0x1>
     c0a:	a0 93 64 01 	sts	0x0164, r26	; 0x800164 <check_timer+0x2>
     c0e:	b0 93 65 01 	sts	0x0165, r27	; 0x800165 <check_timer+0x3>
	loading_clock_change++;
     c12:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <loading_clock_change>
     c16:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <loading_clock_change+0x1>
     c1a:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <loading_clock_change+0x2>
     c1e:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <loading_clock_change+0x3>
     c22:	01 96       	adiw	r24, 0x01	; 1
     c24:	a1 1d       	adc	r26, r1
     c26:	b1 1d       	adc	r27, r1
     c28:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <loading_clock_change>
     c2c:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <loading_clock_change+0x1>
     c30:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <loading_clock_change+0x2>
     c34:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <loading_clock_change+0x3>
}
     c38:	bf 91       	pop	r27
     c3a:	af 91       	pop	r26
     c3c:	9f 91       	pop	r25
     c3e:	8f 91       	pop	r24
     c40:	0f 90       	pop	r0
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	0f 90       	pop	r0
     c46:	1f 90       	pop	r1
     c48:	18 95       	reti

00000c4a <init_timer0>:
	}
}

void init_timer0()
{
	TCNT0 = 6;
     c4a:	86 e0       	ldi	r24, 0x06	; 6
     c4c:	82 bf       	out	0x32, r24	; 50
	TCCR0 |= 1 << CS02 | 0 << CS01 | 0 << CS00;
     c4e:	83 b7       	in	r24, 0x33	; 51
     c50:	84 60       	ori	r24, 0x04	; 4
     c52:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;
     c54:	87 b7       	in	r24, 0x37	; 55
     c56:	81 60       	ori	r24, 0x01	; 1
     c58:	87 bf       	out	0x37, r24	; 55
     c5a:	08 95       	ret

00000c5c <main>:
	loading_clock_change++;
}

int main(void)
{
	init_timer0();
     c5c:	f6 df       	rcall	.-20     	; 0xc4a <init_timer0>
	init_uart0();
     c5e:	f0 d0       	rcall	.+480    	; 0xe40 <init_uart0>
	init_uart1();
     c60:	82 d1       	rcall	.+772    	; 0xf66 <init_uart1>
	init_ultrasonic();
     c62:	f2 d1       	rcall	.+996    	; 0x1048 <init_ultrasonic>
	init_button();
     c64:	32 da       	rcall	.-2972   	; 0xca <init_button>
     c66:	0c d0       	rcall	.+24     	; 0xc80 <init_timer3_pwm>
	init_timer3_pwm();
     c68:	23 d0       	rcall	.+70     	; 0xcb0 <init_n289n>
     c6a:	8e e1       	ldi	r24, 0x1E	; 30
	init_n289n();
     c6c:	91 e0       	ldi	r25, 0x01	; 1
     c6e:	90 93 ed 07 	sts	0x07ED, r25	; 0x8007ed <__iob+0x3>
	
	stdout = &OUTPUT;  // printf가 동작 될 수 있도록 stdout에 OUTPUT화일 포인터 assign
     c72:	80 93 ec 07 	sts	0x07EC, r24	; 0x8007ec <__iob+0x2>
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	8a bb       	out	0x1a, r24	; 26
	
	DDRA=0xff;   // led를 출력 모드로
     c7a:	78 94       	sei
     c7c:	67 db       	rcall	.-2354   	; 0x34c <fnd_main>
	sei();     // 전역적으로 interrupt 허용
     c7e:	ff cf       	rjmp	.-2      	; 0xc7e <main+0x22>

00000c80 <init_timer3_pwm>:
	
	fnd_main();
     c80:	82 b1       	in	r24, 0x02	; 2
     c82:	88 62       	ori	r24, 0x28	; 40
     c84:	82 b9       	out	0x02, r24	; 2
     c86:	ab e8       	ldi	r26, 0x8B	; 139
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	8c 91       	ld	r24, X
     c8c:	81 60       	ori	r24, 0x01	; 1
     c8e:	8c 93       	st	X, r24
     c90:	ea e8       	ldi	r30, 0x8A	; 138
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	80 81       	ld	r24, Z
     c96:	88 60       	ori	r24, 0x08	; 8
     c98:	80 83       	st	Z, r24
     c9a:	8c 91       	ld	r24, X
     c9c:	88 60       	ori	r24, 0x08	; 8
     c9e:	8c 93       	st	X, r24
     ca0:	80 81       	ld	r24, Z
     ca2:	83 60       	ori	r24, 0x03	; 3
     ca4:	80 83       	st	Z, r24
     ca6:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     caa:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     cae:	08 95       	ret

00000cb0 <init_n289n>:
     cb0:	e2 e6       	ldi	r30, 0x62	; 98
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	8f 73       	andi	r24, 0x3F	; 63
     cb8:	80 83       	st	Z, r24
     cba:	80 81       	ld	r24, Z
     cbc:	80 64       	ori	r24, 0x40	; 64
     cbe:	80 83       	st	Z, r24
     cc0:	08 95       	ret

00000cc2 <washing_machine_fan_control>:
     cc2:	fc 01       	movw	r30, r24
     cc4:	80 81       	ld	r24, Z
     cc6:	91 81       	ldd	r25, Z+1	; 0x01
     cc8:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <__TEXT_REGION_LENGTH__+0x7e0083>
     ccc:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     cd0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <check_timer>
     cd4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <check_timer+0x1>
     cd8:	a0 91 64 01 	lds	r26, 0x0164	; 0x800164 <check_timer+0x2>
     cdc:	b0 91 65 01 	lds	r27, 0x0165	; 0x800165 <check_timer+0x3>
     ce0:	88 38       	cpi	r24, 0x88	; 136
     ce2:	93 41       	sbci	r25, 0x13	; 19
     ce4:	a1 05       	cpc	r26, r1
     ce6:	b1 05       	cpc	r27, r1
     ce8:	d8 f0       	brcs	.+54     	; 0xd20 <washing_machine_fan_control+0x5e>
     cea:	e2 e6       	ldi	r30, 0x62	; 98
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 81       	ld	r24, Z
     cf0:	8f 73       	andi	r24, 0x3F	; 63
     cf2:	80 83       	st	Z, r24
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <fan_forward>
     cfc:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <fan_forward+0x1>
     d00:	23 2b       	or	r18, r19
     d02:	11 f0       	breq	.+4      	; 0xd08 <washing_machine_fan_control+0x46>
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <fan_forward+0x1>
     d0c:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <fan_forward>
     d10:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <check_timer>
     d14:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <check_timer+0x1>
     d18:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <check_timer+0x2>
     d1c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <check_timer+0x3>
     d20:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <fan_forward>
     d24:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <fan_forward+0x1>
     d28:	89 2b       	or	r24, r25
     d2a:	31 f0       	breq	.+12     	; 0xd38 <washing_machine_fan_control+0x76>
     d2c:	e2 e6       	ldi	r30, 0x62	; 98
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	80 64       	ori	r24, 0x40	; 64
     d34:	80 83       	st	Z, r24
     d36:	08 95       	ret
     d38:	e2 e6       	ldi	r30, 0x62	; 98
     d3a:	f0 e0       	ldi	r31, 0x00	; 0
     d3c:	80 81       	ld	r24, Z
     d3e:	80 68       	ori	r24, 0x80	; 128
     d40:	80 83       	st	Z, r24
     d42:	08 95       	ret

00000d44 <__vector_18>:
     d44:	1f 92       	push	r1
     d46:	0f 92       	push	r0
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	0f 92       	push	r0
     d4c:	11 24       	eor	r1, r1
     d4e:	0b b6       	in	r0, 0x3b	; 59
     d50:	0f 92       	push	r0
     d52:	2f 93       	push	r18
     d54:	3f 93       	push	r19
     d56:	4f 93       	push	r20
     d58:	5f 93       	push	r21
     d5a:	6f 93       	push	r22
     d5c:	7f 93       	push	r23
     d5e:	8f 93       	push	r24
     d60:	9f 93       	push	r25
     d62:	af 93       	push	r26
     d64:	bf 93       	push	r27
     d66:	ef 93       	push	r30
     d68:	ff 93       	push	r31
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	1f 92       	push	r1
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
     d74:	8c b1       	in	r24, 0x0c	; 12
     d76:	89 83       	std	Y+1, r24	; 0x01
     d78:	89 81       	ldd	r24, Y+1	; 0x01
     d7a:	8d 30       	cpi	r24, 0x0D	; 13
     d7c:	19 f0       	breq	.+6      	; 0xd84 <__vector_18+0x40>
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	8a 30       	cpi	r24, 0x0A	; 10
     d82:	61 f5       	brne	.+88     	; 0xddc <__vector_18+0x98>
     d84:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <rear>
     d88:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <rear+0x1>
     d8c:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <i.1894>
     d90:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <i.1894+0x1>
     d94:	40 e5       	ldi	r20, 0x50	; 80
     d96:	42 9f       	mul	r20, r18
     d98:	f0 01       	movw	r30, r0
     d9a:	43 9f       	mul	r20, r19
     d9c:	f0 0d       	add	r31, r0
     d9e:	11 24       	eor	r1, r1
     da0:	e8 58       	subi	r30, 0x88	; 136
     da2:	fe 4f       	sbci	r31, 0xFE	; 254
     da4:	e8 0f       	add	r30, r24
     da6:	f9 1f       	adc	r31, r25
     da8:	10 82       	st	Z, r1
     daa:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <i.1894+0x1>
     dae:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <i.1894>
     db2:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <rear>
     db6:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <rear+0x1>
     dba:	01 96       	adiw	r24, 0x01	; 1
     dbc:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <rear+0x1>
     dc0:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <rear>
     dc4:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <rear>
     dc8:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <rear+0x1>
     dcc:	6a e0       	ldi	r22, 0x0A	; 10
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	d7 d2       	rcall	.+1454   	; 0x1380 <__divmodhi4>
     dd2:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <rear+0x1>
     dd6:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <rear>
     dda:	1c c0       	rjmp	.+56     	; 0xe14 <__vector_18+0xd0>
     ddc:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <rear>
     de0:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <rear+0x1>
     de4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <i.1894>
     de8:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <i.1894+0x1>
     dec:	9c 01       	movw	r18, r24
     dee:	2f 5f       	subi	r18, 0xFF	; 255
     df0:	3f 4f       	sbci	r19, 0xFF	; 255
     df2:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <i.1894+0x1>
     df6:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <i.1894>
     dfa:	49 81       	ldd	r20, Y+1	; 0x01
     dfc:	50 e5       	ldi	r21, 0x50	; 80
     dfe:	56 9f       	mul	r21, r22
     e00:	90 01       	movw	r18, r0
     e02:	57 9f       	mul	r21, r23
     e04:	30 0d       	add	r19, r0
     e06:	11 24       	eor	r1, r1
     e08:	28 58       	subi	r18, 0x88	; 136
     e0a:	3e 4f       	sbci	r19, 0xFE	; 254
     e0c:	f9 01       	movw	r30, r18
     e0e:	e8 0f       	add	r30, r24
     e10:	f9 1f       	adc	r31, r25
     e12:	40 83       	st	Z, r20
     e14:	0f 90       	pop	r0
     e16:	df 91       	pop	r29
     e18:	cf 91       	pop	r28
     e1a:	ff 91       	pop	r31
     e1c:	ef 91       	pop	r30
     e1e:	bf 91       	pop	r27
     e20:	af 91       	pop	r26
     e22:	9f 91       	pop	r25
     e24:	8f 91       	pop	r24
     e26:	7f 91       	pop	r23
     e28:	6f 91       	pop	r22
     e2a:	5f 91       	pop	r21
     e2c:	4f 91       	pop	r20
     e2e:	3f 91       	pop	r19
     e30:	2f 91       	pop	r18
     e32:	0f 90       	pop	r0
     e34:	0b be       	out	0x3b, r0	; 59
     e36:	0f 90       	pop	r0
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	0f 90       	pop	r0
     e3c:	1f 90       	pop	r1
     e3e:	18 95       	reti

00000e40 <init_uart0>:
     e40:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     e44:	8f ec       	ldi	r24, 0xCF	; 207
     e46:	89 b9       	out	0x09, r24	; 9
     e48:	8b b1       	in	r24, 0x0b	; 11
     e4a:	82 60       	ori	r24, 0x02	; 2
     e4c:	8b b9       	out	0x0b, r24	; 11
     e4e:	e5 e9       	ldi	r30, 0x95	; 149
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	80 81       	ld	r24, Z
     e54:	86 60       	ori	r24, 0x06	; 6
     e56:	80 83       	st	Z, r24
     e58:	8a b1       	in	r24, 0x0a	; 10
     e5a:	88 69       	ori	r24, 0x98	; 152
     e5c:	8a b9       	out	0x0a, r24	; 10
     e5e:	08 95       	ret

00000e60 <UART0_transmit>:
     e60:	5d 9b       	sbis	0x0b, 5	; 11
     e62:	fe cf       	rjmp	.-4      	; 0xe60 <UART0_transmit>
     e64:	8c b9       	out	0x0c, r24	; 12
     e66:	08 95       	ret

00000e68 <__vector_30>:
     e68:	1f 92       	push	r1
     e6a:	0f 92       	push	r0
     e6c:	0f b6       	in	r0, 0x3f	; 63
     e6e:	0f 92       	push	r0
     e70:	11 24       	eor	r1, r1
     e72:	0b b6       	in	r0, 0x3b	; 59
     e74:	0f 92       	push	r0
     e76:	2f 93       	push	r18
     e78:	3f 93       	push	r19
     e7a:	4f 93       	push	r20
     e7c:	5f 93       	push	r21
     e7e:	6f 93       	push	r22
     e80:	7f 93       	push	r23
     e82:	8f 93       	push	r24
     e84:	9f 93       	push	r25
     e86:	af 93       	push	r26
     e88:	bf 93       	push	r27
     e8a:	ef 93       	push	r30
     e8c:	ff 93       	push	r31
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	1f 92       	push	r1
     e94:	cd b7       	in	r28, 0x3d	; 61
     e96:	de b7       	in	r29, 0x3e	; 62
     e98:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     e9c:	89 83       	std	Y+1, r24	; 0x01
     e9e:	89 81       	ldd	r24, Y+1	; 0x01
     ea0:	8d 30       	cpi	r24, 0x0D	; 13
     ea2:	19 f0       	breq	.+6      	; 0xeaa <__vector_30+0x42>
     ea4:	89 81       	ldd	r24, Y+1	; 0x01
     ea6:	8a 30       	cpi	r24, 0x0A	; 10
     ea8:	61 f5       	brne	.+88     	; 0xf02 <__vector_30+0x9a>
     eaa:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <rear1>
     eae:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <rear1+0x1>
     eb2:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i.1896>
     eb6:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <i.1896+0x1>
     eba:	40 e5       	ldi	r20, 0x50	; 80
     ebc:	42 9f       	mul	r20, r18
     ebe:	f0 01       	movw	r30, r0
     ec0:	43 9f       	mul	r20, r19
     ec2:	f0 0d       	add	r31, r0
     ec4:	11 24       	eor	r1, r1
     ec6:	e8 56       	subi	r30, 0x68	; 104
     ec8:	fb 4f       	sbci	r31, 0xFB	; 251
     eca:	e8 0f       	add	r30, r24
     ecc:	f9 1f       	adc	r31, r25
     ece:	10 82       	st	Z, r1
     ed0:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <i.1896+0x1>
     ed4:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <i.1896>
     ed8:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <rear1>
     edc:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <rear1+0x1>
     ee0:	01 96       	adiw	r24, 0x01	; 1
     ee2:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <rear1+0x1>
     ee6:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <rear1>
     eea:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <rear1>
     eee:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <rear1+0x1>
     ef2:	6a e0       	ldi	r22, 0x0A	; 10
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	44 d2       	rcall	.+1160   	; 0x1380 <__divmodhi4>
     ef8:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <rear1+0x1>
     efc:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <rear1>
     f00:	1c c0       	rjmp	.+56     	; 0xf3a <__vector_30+0xd2>
     f02:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <rear1>
     f06:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <rear1+0x1>
     f0a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i.1896>
     f0e:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <i.1896+0x1>
     f12:	9c 01       	movw	r18, r24
     f14:	2f 5f       	subi	r18, 0xFF	; 255
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	30 93 73 01 	sts	0x0173, r19	; 0x800173 <i.1896+0x1>
     f1c:	20 93 72 01 	sts	0x0172, r18	; 0x800172 <i.1896>
     f20:	49 81       	ldd	r20, Y+1	; 0x01
     f22:	50 e5       	ldi	r21, 0x50	; 80
     f24:	56 9f       	mul	r21, r22
     f26:	90 01       	movw	r18, r0
     f28:	57 9f       	mul	r21, r23
     f2a:	30 0d       	add	r19, r0
     f2c:	11 24       	eor	r1, r1
     f2e:	28 56       	subi	r18, 0x68	; 104
     f30:	3b 4f       	sbci	r19, 0xFB	; 251
     f32:	f9 01       	movw	r30, r18
     f34:	e8 0f       	add	r30, r24
     f36:	f9 1f       	adc	r31, r25
     f38:	40 83       	st	Z, r20
     f3a:	0f 90       	pop	r0
     f3c:	df 91       	pop	r29
     f3e:	cf 91       	pop	r28
     f40:	ff 91       	pop	r31
     f42:	ef 91       	pop	r30
     f44:	bf 91       	pop	r27
     f46:	af 91       	pop	r26
     f48:	9f 91       	pop	r25
     f4a:	8f 91       	pop	r24
     f4c:	7f 91       	pop	r23
     f4e:	6f 91       	pop	r22
     f50:	5f 91       	pop	r21
     f52:	4f 91       	pop	r20
     f54:	3f 91       	pop	r19
     f56:	2f 91       	pop	r18
     f58:	0f 90       	pop	r0
     f5a:	0b be       	out	0x3b, r0	; 59
     f5c:	0f 90       	pop	r0
     f5e:	0f be       	out	0x3f, r0	; 63
     f60:	0f 90       	pop	r0
     f62:	1f 90       	pop	r1
     f64:	18 95       	reti

00000f66 <init_uart1>:
     f66:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     f6a:	8f ec       	ldi	r24, 0xCF	; 207
     f6c:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     f70:	eb e9       	ldi	r30, 0x9B	; 155
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	80 81       	ld	r24, Z
     f76:	82 60       	ori	r24, 0x02	; 2
     f78:	80 83       	st	Z, r24
     f7a:	ed e9       	ldi	r30, 0x9D	; 157
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	86 60       	ori	r24, 0x06	; 6
     f82:	80 83       	st	Z, r24
     f84:	ea e9       	ldi	r30, 0x9A	; 154
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	88 69       	ori	r24, 0x98	; 152
     f8c:	80 83       	st	Z, r24
     f8e:	08 95       	ret

00000f90 <__vector_5>:
     f90:	1f 92       	push	r1
     f92:	0f 92       	push	r0
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	0f 92       	push	r0
     f98:	11 24       	eor	r1, r1
     f9a:	0b b6       	in	r0, 0x3b	; 59
     f9c:	0f 92       	push	r0
     f9e:	2f 93       	push	r18
     fa0:	3f 93       	push	r19
     fa2:	4f 93       	push	r20
     fa4:	5f 93       	push	r21
     fa6:	6f 93       	push	r22
     fa8:	7f 93       	push	r23
     faa:	8f 93       	push	r24
     fac:	9f 93       	push	r25
     fae:	af 93       	push	r26
     fb0:	bf 93       	push	r27
     fb2:	ef 93       	push	r30
     fb4:	ff 93       	push	r31
     fb6:	0c 9b       	sbis	0x01, 4	; 1
     fb8:	03 c0       	rjmp	.+6      	; 0xfc0 <__vector_5+0x30>
     fba:	1d bc       	out	0x2d, r1	; 45
     fbc:	1c bc       	out	0x2c, r1	; 44
     fbe:	31 c0       	rjmp	.+98     	; 0x1022 <__DATA_REGION_LENGTH__+0x22>
     fc0:	6c b5       	in	r22, 0x2c	; 44
     fc2:	7d b5       	in	r23, 0x2d	; 45
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	ea d0       	rcall	.+468    	; 0x119e <__floatunsisf>
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	34 e2       	ldi	r19, 0x24	; 36
     fce:	44 e7       	ldi	r20, 0x74	; 116
     fd0:	59 e4       	ldi	r21, 0x49	; 73
     fd2:	73 d1       	rcall	.+742    	; 0x12ba <__mulsf3>
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	40 e8       	ldi	r20, 0x80	; 128
     fda:	54 e4       	ldi	r21, 0x44	; 68
     fdc:	6e d1       	rcall	.+732    	; 0x12ba <__mulsf3>
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	34 e2       	ldi	r19, 0x24	; 36
     fe2:	44 e7       	ldi	r20, 0x74	; 116
     fe4:	5b e4       	ldi	r21, 0x4B	; 75
     fe6:	42 d0       	rcall	.+132    	; 0x106c <__divsf3>
     fe8:	a9 d0       	rcall	.+338    	; 0x113c <__fixsfsi>
     fea:	70 93 77 01 	sts	0x0177, r23	; 0x800177 <ultrasonic_distance+0x1>
     fee:	60 93 76 01 	sts	0x0176, r22	; 0x800176 <ultrasonic_distance>
     ff2:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <ultrasonic_distance>
     ff6:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <ultrasonic_distance+0x1>
     ffa:	6a e3       	ldi	r22, 0x3A	; 58
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	c0 d1       	rcall	.+896    	; 0x1380 <__divmodhi4>
    1000:	7f 93       	push	r23
    1002:	6f 93       	push	r22
    1004:	81 e4       	ldi	r24, 0x41	; 65
    1006:	91 e0       	ldi	r25, 0x01	; 1
    1008:	9f 93       	push	r25
    100a:	8f 93       	push	r24
    100c:	88 eb       	ldi	r24, 0xB8	; 184
    100e:	97 e0       	ldi	r25, 0x07	; 7
    1010:	9f 93       	push	r25
    1012:	8f 93       	push	r24
    1014:	fe d1       	rcall	.+1020   	; 0x1412 <sprintf>
    1016:	0f 90       	pop	r0
    1018:	0f 90       	pop	r0
    101a:	0f 90       	pop	r0
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	ff 91       	pop	r31
    1024:	ef 91       	pop	r30
    1026:	bf 91       	pop	r27
    1028:	af 91       	pop	r26
    102a:	9f 91       	pop	r25
    102c:	8f 91       	pop	r24
    102e:	7f 91       	pop	r23
    1030:	6f 91       	pop	r22
    1032:	5f 91       	pop	r21
    1034:	4f 91       	pop	r20
    1036:	3f 91       	pop	r19
    1038:	2f 91       	pop	r18
    103a:	0f 90       	pop	r0
    103c:	0b be       	out	0x3b, r0	; 59
    103e:	0f 90       	pop	r0
    1040:	0f be       	out	0x3f, r0	; 63
    1042:	0f 90       	pop	r0
    1044:	1f 90       	pop	r1
    1046:	18 95       	reti

00001048 <init_ultrasonic>:
    1048:	e4 e6       	ldi	r30, 0x64	; 100
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	80 81       	ld	r24, Z
    104e:	80 61       	ori	r24, 0x10	; 16
    1050:	80 83       	st	Z, r24
    1052:	82 b1       	in	r24, 0x02	; 2
    1054:	8f 7e       	andi	r24, 0xEF	; 239
    1056:	82 b9       	out	0x02, r24	; 2
    1058:	8a b7       	in	r24, 0x3a	; 58
    105a:	81 60       	ori	r24, 0x01	; 1
    105c:	8a bf       	out	0x3a, r24	; 58
    105e:	8e b5       	in	r24, 0x2e	; 46
    1060:	85 60       	ori	r24, 0x05	; 5
    1062:	8e bd       	out	0x2e, r24	; 46
    1064:	89 b7       	in	r24, 0x39	; 57
    1066:	80 61       	ori	r24, 0x10	; 16
    1068:	89 bf       	out	0x39, r24	; 57
    106a:	08 95       	ret

0000106c <__divsf3>:
    106c:	0c d0       	rcall	.+24     	; 0x1086 <__divsf3x>
    106e:	eb c0       	rjmp	.+470    	; 0x1246 <__fp_round>
    1070:	e3 d0       	rcall	.+454    	; 0x1238 <__fp_pscB>
    1072:	40 f0       	brcs	.+16     	; 0x1084 <__divsf3+0x18>
    1074:	da d0       	rcall	.+436    	; 0x122a <__fp_pscA>
    1076:	30 f0       	brcs	.+12     	; 0x1084 <__divsf3+0x18>
    1078:	21 f4       	brne	.+8      	; 0x1082 <__divsf3+0x16>
    107a:	5f 3f       	cpi	r21, 0xFF	; 255
    107c:	19 f0       	breq	.+6      	; 0x1084 <__divsf3+0x18>
    107e:	cc c0       	rjmp	.+408    	; 0x1218 <__fp_inf>
    1080:	51 11       	cpse	r21, r1
    1082:	15 c1       	rjmp	.+554    	; 0x12ae <__fp_szero>
    1084:	cf c0       	rjmp	.+414    	; 0x1224 <__fp_nan>

00001086 <__divsf3x>:
    1086:	f0 d0       	rcall	.+480    	; 0x1268 <__fp_split3>
    1088:	98 f3       	brcs	.-26     	; 0x1070 <__divsf3+0x4>

0000108a <__divsf3_pse>:
    108a:	99 23       	and	r25, r25
    108c:	c9 f3       	breq	.-14     	; 0x1080 <__divsf3+0x14>
    108e:	55 23       	and	r21, r21
    1090:	b1 f3       	breq	.-20     	; 0x107e <__divsf3+0x12>
    1092:	95 1b       	sub	r25, r21
    1094:	55 0b       	sbc	r21, r21
    1096:	bb 27       	eor	r27, r27
    1098:	aa 27       	eor	r26, r26
    109a:	62 17       	cp	r22, r18
    109c:	73 07       	cpc	r23, r19
    109e:	84 07       	cpc	r24, r20
    10a0:	38 f0       	brcs	.+14     	; 0x10b0 <__divsf3_pse+0x26>
    10a2:	9f 5f       	subi	r25, 0xFF	; 255
    10a4:	5f 4f       	sbci	r21, 0xFF	; 255
    10a6:	22 0f       	add	r18, r18
    10a8:	33 1f       	adc	r19, r19
    10aa:	44 1f       	adc	r20, r20
    10ac:	aa 1f       	adc	r26, r26
    10ae:	a9 f3       	breq	.-22     	; 0x109a <__divsf3_pse+0x10>
    10b0:	33 d0       	rcall	.+102    	; 0x1118 <__stack+0x19>
    10b2:	0e 2e       	mov	r0, r30
    10b4:	3a f0       	brmi	.+14     	; 0x10c4 <__divsf3_pse+0x3a>
    10b6:	e0 e8       	ldi	r30, 0x80	; 128
    10b8:	30 d0       	rcall	.+96     	; 0x111a <__stack+0x1b>
    10ba:	91 50       	subi	r25, 0x01	; 1
    10bc:	50 40       	sbci	r21, 0x00	; 0
    10be:	e6 95       	lsr	r30
    10c0:	00 1c       	adc	r0, r0
    10c2:	ca f7       	brpl	.-14     	; 0x10b6 <__divsf3_pse+0x2c>
    10c4:	29 d0       	rcall	.+82     	; 0x1118 <__stack+0x19>
    10c6:	fe 2f       	mov	r31, r30
    10c8:	27 d0       	rcall	.+78     	; 0x1118 <__stack+0x19>
    10ca:	66 0f       	add	r22, r22
    10cc:	77 1f       	adc	r23, r23
    10ce:	88 1f       	adc	r24, r24
    10d0:	bb 1f       	adc	r27, r27
    10d2:	26 17       	cp	r18, r22
    10d4:	37 07       	cpc	r19, r23
    10d6:	48 07       	cpc	r20, r24
    10d8:	ab 07       	cpc	r26, r27
    10da:	b0 e8       	ldi	r27, 0x80	; 128
    10dc:	09 f0       	breq	.+2      	; 0x10e0 <__divsf3_pse+0x56>
    10de:	bb 0b       	sbc	r27, r27
    10e0:	80 2d       	mov	r24, r0
    10e2:	bf 01       	movw	r22, r30
    10e4:	ff 27       	eor	r31, r31
    10e6:	93 58       	subi	r25, 0x83	; 131
    10e8:	5f 4f       	sbci	r21, 0xFF	; 255
    10ea:	2a f0       	brmi	.+10     	; 0x10f6 <__divsf3_pse+0x6c>
    10ec:	9e 3f       	cpi	r25, 0xFE	; 254
    10ee:	51 05       	cpc	r21, r1
    10f0:	68 f0       	brcs	.+26     	; 0x110c <__stack+0xd>
    10f2:	92 c0       	rjmp	.+292    	; 0x1218 <__fp_inf>
    10f4:	dc c0       	rjmp	.+440    	; 0x12ae <__fp_szero>
    10f6:	5f 3f       	cpi	r21, 0xFF	; 255
    10f8:	ec f3       	brlt	.-6      	; 0x10f4 <__divsf3_pse+0x6a>
    10fa:	98 3e       	cpi	r25, 0xE8	; 232
    10fc:	dc f3       	brlt	.-10     	; 0x10f4 <__divsf3_pse+0x6a>
    10fe:	86 95       	lsr	r24
    1100:	77 95       	ror	r23
    1102:	67 95       	ror	r22
    1104:	b7 95       	ror	r27
    1106:	f7 95       	ror	r31
    1108:	9f 5f       	subi	r25, 0xFF	; 255
    110a:	c9 f7       	brne	.-14     	; 0x10fe <__divsf3_pse+0x74>
    110c:	88 0f       	add	r24, r24
    110e:	91 1d       	adc	r25, r1
    1110:	96 95       	lsr	r25
    1112:	87 95       	ror	r24
    1114:	97 f9       	bld	r25, 7
    1116:	08 95       	ret
    1118:	e1 e0       	ldi	r30, 0x01	; 1
    111a:	66 0f       	add	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	bb 1f       	adc	r27, r27
    1122:	62 17       	cp	r22, r18
    1124:	73 07       	cpc	r23, r19
    1126:	84 07       	cpc	r24, r20
    1128:	ba 07       	cpc	r27, r26
    112a:	20 f0       	brcs	.+8      	; 0x1134 <__stack+0x35>
    112c:	62 1b       	sub	r22, r18
    112e:	73 0b       	sbc	r23, r19
    1130:	84 0b       	sbc	r24, r20
    1132:	ba 0b       	sbc	r27, r26
    1134:	ee 1f       	adc	r30, r30
    1136:	88 f7       	brcc	.-30     	; 0x111a <__stack+0x1b>
    1138:	e0 95       	com	r30
    113a:	08 95       	ret

0000113c <__fixsfsi>:
    113c:	04 d0       	rcall	.+8      	; 0x1146 <__fixunssfsi>
    113e:	68 94       	set
    1140:	b1 11       	cpse	r27, r1
    1142:	b5 c0       	rjmp	.+362    	; 0x12ae <__fp_szero>
    1144:	08 95       	ret

00001146 <__fixunssfsi>:
    1146:	98 d0       	rcall	.+304    	; 0x1278 <__fp_splitA>
    1148:	88 f0       	brcs	.+34     	; 0x116c <__fixunssfsi+0x26>
    114a:	9f 57       	subi	r25, 0x7F	; 127
    114c:	90 f0       	brcs	.+36     	; 0x1172 <__fixunssfsi+0x2c>
    114e:	b9 2f       	mov	r27, r25
    1150:	99 27       	eor	r25, r25
    1152:	b7 51       	subi	r27, 0x17	; 23
    1154:	a0 f0       	brcs	.+40     	; 0x117e <__fixunssfsi+0x38>
    1156:	d1 f0       	breq	.+52     	; 0x118c <__fixunssfsi+0x46>
    1158:	66 0f       	add	r22, r22
    115a:	77 1f       	adc	r23, r23
    115c:	88 1f       	adc	r24, r24
    115e:	99 1f       	adc	r25, r25
    1160:	1a f0       	brmi	.+6      	; 0x1168 <__fixunssfsi+0x22>
    1162:	ba 95       	dec	r27
    1164:	c9 f7       	brne	.-14     	; 0x1158 <__fixunssfsi+0x12>
    1166:	12 c0       	rjmp	.+36     	; 0x118c <__fixunssfsi+0x46>
    1168:	b1 30       	cpi	r27, 0x01	; 1
    116a:	81 f0       	breq	.+32     	; 0x118c <__fixunssfsi+0x46>
    116c:	9f d0       	rcall	.+318    	; 0x12ac <__fp_zero>
    116e:	b1 e0       	ldi	r27, 0x01	; 1
    1170:	08 95       	ret
    1172:	9c c0       	rjmp	.+312    	; 0x12ac <__fp_zero>
    1174:	67 2f       	mov	r22, r23
    1176:	78 2f       	mov	r23, r24
    1178:	88 27       	eor	r24, r24
    117a:	b8 5f       	subi	r27, 0xF8	; 248
    117c:	39 f0       	breq	.+14     	; 0x118c <__fixunssfsi+0x46>
    117e:	b9 3f       	cpi	r27, 0xF9	; 249
    1180:	cc f3       	brlt	.-14     	; 0x1174 <__fixunssfsi+0x2e>
    1182:	86 95       	lsr	r24
    1184:	77 95       	ror	r23
    1186:	67 95       	ror	r22
    1188:	b3 95       	inc	r27
    118a:	d9 f7       	brne	.-10     	; 0x1182 <__fixunssfsi+0x3c>
    118c:	3e f4       	brtc	.+14     	; 0x119c <__fixunssfsi+0x56>
    118e:	90 95       	com	r25
    1190:	80 95       	com	r24
    1192:	70 95       	com	r23
    1194:	61 95       	neg	r22
    1196:	7f 4f       	sbci	r23, 0xFF	; 255
    1198:	8f 4f       	sbci	r24, 0xFF	; 255
    119a:	9f 4f       	sbci	r25, 0xFF	; 255
    119c:	08 95       	ret

0000119e <__floatunsisf>:
    119e:	e8 94       	clt
    11a0:	09 c0       	rjmp	.+18     	; 0x11b4 <__floatsisf+0x12>

000011a2 <__floatsisf>:
    11a2:	97 fb       	bst	r25, 7
    11a4:	3e f4       	brtc	.+14     	; 0x11b4 <__floatsisf+0x12>
    11a6:	90 95       	com	r25
    11a8:	80 95       	com	r24
    11aa:	70 95       	com	r23
    11ac:	61 95       	neg	r22
    11ae:	7f 4f       	sbci	r23, 0xFF	; 255
    11b0:	8f 4f       	sbci	r24, 0xFF	; 255
    11b2:	9f 4f       	sbci	r25, 0xFF	; 255
    11b4:	99 23       	and	r25, r25
    11b6:	a9 f0       	breq	.+42     	; 0x11e2 <__floatsisf+0x40>
    11b8:	f9 2f       	mov	r31, r25
    11ba:	96 e9       	ldi	r25, 0x96	; 150
    11bc:	bb 27       	eor	r27, r27
    11be:	93 95       	inc	r25
    11c0:	f6 95       	lsr	r31
    11c2:	87 95       	ror	r24
    11c4:	77 95       	ror	r23
    11c6:	67 95       	ror	r22
    11c8:	b7 95       	ror	r27
    11ca:	f1 11       	cpse	r31, r1
    11cc:	f8 cf       	rjmp	.-16     	; 0x11be <__floatsisf+0x1c>
    11ce:	fa f4       	brpl	.+62     	; 0x120e <__floatsisf+0x6c>
    11d0:	bb 0f       	add	r27, r27
    11d2:	11 f4       	brne	.+4      	; 0x11d8 <__floatsisf+0x36>
    11d4:	60 ff       	sbrs	r22, 0
    11d6:	1b c0       	rjmp	.+54     	; 0x120e <__floatsisf+0x6c>
    11d8:	6f 5f       	subi	r22, 0xFF	; 255
    11da:	7f 4f       	sbci	r23, 0xFF	; 255
    11dc:	8f 4f       	sbci	r24, 0xFF	; 255
    11de:	9f 4f       	sbci	r25, 0xFF	; 255
    11e0:	16 c0       	rjmp	.+44     	; 0x120e <__floatsisf+0x6c>
    11e2:	88 23       	and	r24, r24
    11e4:	11 f0       	breq	.+4      	; 0x11ea <__floatsisf+0x48>
    11e6:	96 e9       	ldi	r25, 0x96	; 150
    11e8:	11 c0       	rjmp	.+34     	; 0x120c <__floatsisf+0x6a>
    11ea:	77 23       	and	r23, r23
    11ec:	21 f0       	breq	.+8      	; 0x11f6 <__floatsisf+0x54>
    11ee:	9e e8       	ldi	r25, 0x8E	; 142
    11f0:	87 2f       	mov	r24, r23
    11f2:	76 2f       	mov	r23, r22
    11f4:	05 c0       	rjmp	.+10     	; 0x1200 <__floatsisf+0x5e>
    11f6:	66 23       	and	r22, r22
    11f8:	71 f0       	breq	.+28     	; 0x1216 <__floatsisf+0x74>
    11fa:	96 e8       	ldi	r25, 0x86	; 134
    11fc:	86 2f       	mov	r24, r22
    11fe:	70 e0       	ldi	r23, 0x00	; 0
    1200:	60 e0       	ldi	r22, 0x00	; 0
    1202:	2a f0       	brmi	.+10     	; 0x120e <__floatsisf+0x6c>
    1204:	9a 95       	dec	r25
    1206:	66 0f       	add	r22, r22
    1208:	77 1f       	adc	r23, r23
    120a:	88 1f       	adc	r24, r24
    120c:	da f7       	brpl	.-10     	; 0x1204 <__floatsisf+0x62>
    120e:	88 0f       	add	r24, r24
    1210:	96 95       	lsr	r25
    1212:	87 95       	ror	r24
    1214:	97 f9       	bld	r25, 7
    1216:	08 95       	ret

00001218 <__fp_inf>:
    1218:	97 f9       	bld	r25, 7
    121a:	9f 67       	ori	r25, 0x7F	; 127
    121c:	80 e8       	ldi	r24, 0x80	; 128
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	60 e0       	ldi	r22, 0x00	; 0
    1222:	08 95       	ret

00001224 <__fp_nan>:
    1224:	9f ef       	ldi	r25, 0xFF	; 255
    1226:	80 ec       	ldi	r24, 0xC0	; 192
    1228:	08 95       	ret

0000122a <__fp_pscA>:
    122a:	00 24       	eor	r0, r0
    122c:	0a 94       	dec	r0
    122e:	16 16       	cp	r1, r22
    1230:	17 06       	cpc	r1, r23
    1232:	18 06       	cpc	r1, r24
    1234:	09 06       	cpc	r0, r25
    1236:	08 95       	ret

00001238 <__fp_pscB>:
    1238:	00 24       	eor	r0, r0
    123a:	0a 94       	dec	r0
    123c:	12 16       	cp	r1, r18
    123e:	13 06       	cpc	r1, r19
    1240:	14 06       	cpc	r1, r20
    1242:	05 06       	cpc	r0, r21
    1244:	08 95       	ret

00001246 <__fp_round>:
    1246:	09 2e       	mov	r0, r25
    1248:	03 94       	inc	r0
    124a:	00 0c       	add	r0, r0
    124c:	11 f4       	brne	.+4      	; 0x1252 <__fp_round+0xc>
    124e:	88 23       	and	r24, r24
    1250:	52 f0       	brmi	.+20     	; 0x1266 <__fp_round+0x20>
    1252:	bb 0f       	add	r27, r27
    1254:	40 f4       	brcc	.+16     	; 0x1266 <__fp_round+0x20>
    1256:	bf 2b       	or	r27, r31
    1258:	11 f4       	brne	.+4      	; 0x125e <__fp_round+0x18>
    125a:	60 ff       	sbrs	r22, 0
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <__fp_round+0x20>
    125e:	6f 5f       	subi	r22, 0xFF	; 255
    1260:	7f 4f       	sbci	r23, 0xFF	; 255
    1262:	8f 4f       	sbci	r24, 0xFF	; 255
    1264:	9f 4f       	sbci	r25, 0xFF	; 255
    1266:	08 95       	ret

00001268 <__fp_split3>:
    1268:	57 fd       	sbrc	r21, 7
    126a:	90 58       	subi	r25, 0x80	; 128
    126c:	44 0f       	add	r20, r20
    126e:	55 1f       	adc	r21, r21
    1270:	59 f0       	breq	.+22     	; 0x1288 <__fp_splitA+0x10>
    1272:	5f 3f       	cpi	r21, 0xFF	; 255
    1274:	71 f0       	breq	.+28     	; 0x1292 <__fp_splitA+0x1a>
    1276:	47 95       	ror	r20

00001278 <__fp_splitA>:
    1278:	88 0f       	add	r24, r24
    127a:	97 fb       	bst	r25, 7
    127c:	99 1f       	adc	r25, r25
    127e:	61 f0       	breq	.+24     	; 0x1298 <__fp_splitA+0x20>
    1280:	9f 3f       	cpi	r25, 0xFF	; 255
    1282:	79 f0       	breq	.+30     	; 0x12a2 <__fp_splitA+0x2a>
    1284:	87 95       	ror	r24
    1286:	08 95       	ret
    1288:	12 16       	cp	r1, r18
    128a:	13 06       	cpc	r1, r19
    128c:	14 06       	cpc	r1, r20
    128e:	55 1f       	adc	r21, r21
    1290:	f2 cf       	rjmp	.-28     	; 0x1276 <__fp_split3+0xe>
    1292:	46 95       	lsr	r20
    1294:	f1 df       	rcall	.-30     	; 0x1278 <__fp_splitA>
    1296:	08 c0       	rjmp	.+16     	; 0x12a8 <__fp_splitA+0x30>
    1298:	16 16       	cp	r1, r22
    129a:	17 06       	cpc	r1, r23
    129c:	18 06       	cpc	r1, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	f1 cf       	rjmp	.-30     	; 0x1284 <__fp_splitA+0xc>
    12a2:	86 95       	lsr	r24
    12a4:	71 05       	cpc	r23, r1
    12a6:	61 05       	cpc	r22, r1
    12a8:	08 94       	sec
    12aa:	08 95       	ret

000012ac <__fp_zero>:
    12ac:	e8 94       	clt

000012ae <__fp_szero>:
    12ae:	bb 27       	eor	r27, r27
    12b0:	66 27       	eor	r22, r22
    12b2:	77 27       	eor	r23, r23
    12b4:	cb 01       	movw	r24, r22
    12b6:	97 f9       	bld	r25, 7
    12b8:	08 95       	ret

000012ba <__mulsf3>:
    12ba:	0b d0       	rcall	.+22     	; 0x12d2 <__mulsf3x>
    12bc:	c4 cf       	rjmp	.-120    	; 0x1246 <__fp_round>
    12be:	b5 df       	rcall	.-150    	; 0x122a <__fp_pscA>
    12c0:	28 f0       	brcs	.+10     	; 0x12cc <__mulsf3+0x12>
    12c2:	ba df       	rcall	.-140    	; 0x1238 <__fp_pscB>
    12c4:	18 f0       	brcs	.+6      	; 0x12cc <__mulsf3+0x12>
    12c6:	95 23       	and	r25, r21
    12c8:	09 f0       	breq	.+2      	; 0x12cc <__mulsf3+0x12>
    12ca:	a6 cf       	rjmp	.-180    	; 0x1218 <__fp_inf>
    12cc:	ab cf       	rjmp	.-170    	; 0x1224 <__fp_nan>
    12ce:	11 24       	eor	r1, r1
    12d0:	ee cf       	rjmp	.-36     	; 0x12ae <__fp_szero>

000012d2 <__mulsf3x>:
    12d2:	ca df       	rcall	.-108    	; 0x1268 <__fp_split3>
    12d4:	a0 f3       	brcs	.-24     	; 0x12be <__mulsf3+0x4>

000012d6 <__mulsf3_pse>:
    12d6:	95 9f       	mul	r25, r21
    12d8:	d1 f3       	breq	.-12     	; 0x12ce <__mulsf3+0x14>
    12da:	95 0f       	add	r25, r21
    12dc:	50 e0       	ldi	r21, 0x00	; 0
    12de:	55 1f       	adc	r21, r21
    12e0:	62 9f       	mul	r22, r18
    12e2:	f0 01       	movw	r30, r0
    12e4:	72 9f       	mul	r23, r18
    12e6:	bb 27       	eor	r27, r27
    12e8:	f0 0d       	add	r31, r0
    12ea:	b1 1d       	adc	r27, r1
    12ec:	63 9f       	mul	r22, r19
    12ee:	aa 27       	eor	r26, r26
    12f0:	f0 0d       	add	r31, r0
    12f2:	b1 1d       	adc	r27, r1
    12f4:	aa 1f       	adc	r26, r26
    12f6:	64 9f       	mul	r22, r20
    12f8:	66 27       	eor	r22, r22
    12fa:	b0 0d       	add	r27, r0
    12fc:	a1 1d       	adc	r26, r1
    12fe:	66 1f       	adc	r22, r22
    1300:	82 9f       	mul	r24, r18
    1302:	22 27       	eor	r18, r18
    1304:	b0 0d       	add	r27, r0
    1306:	a1 1d       	adc	r26, r1
    1308:	62 1f       	adc	r22, r18
    130a:	73 9f       	mul	r23, r19
    130c:	b0 0d       	add	r27, r0
    130e:	a1 1d       	adc	r26, r1
    1310:	62 1f       	adc	r22, r18
    1312:	83 9f       	mul	r24, r19
    1314:	a0 0d       	add	r26, r0
    1316:	61 1d       	adc	r22, r1
    1318:	22 1f       	adc	r18, r18
    131a:	74 9f       	mul	r23, r20
    131c:	33 27       	eor	r19, r19
    131e:	a0 0d       	add	r26, r0
    1320:	61 1d       	adc	r22, r1
    1322:	23 1f       	adc	r18, r19
    1324:	84 9f       	mul	r24, r20
    1326:	60 0d       	add	r22, r0
    1328:	21 1d       	adc	r18, r1
    132a:	82 2f       	mov	r24, r18
    132c:	76 2f       	mov	r23, r22
    132e:	6a 2f       	mov	r22, r26
    1330:	11 24       	eor	r1, r1
    1332:	9f 57       	subi	r25, 0x7F	; 127
    1334:	50 40       	sbci	r21, 0x00	; 0
    1336:	8a f0       	brmi	.+34     	; 0x135a <__mulsf3_pse+0x84>
    1338:	e1 f0       	breq	.+56     	; 0x1372 <__mulsf3_pse+0x9c>
    133a:	88 23       	and	r24, r24
    133c:	4a f0       	brmi	.+18     	; 0x1350 <__mulsf3_pse+0x7a>
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	bb 1f       	adc	r27, r27
    1344:	66 1f       	adc	r22, r22
    1346:	77 1f       	adc	r23, r23
    1348:	88 1f       	adc	r24, r24
    134a:	91 50       	subi	r25, 0x01	; 1
    134c:	50 40       	sbci	r21, 0x00	; 0
    134e:	a9 f7       	brne	.-22     	; 0x133a <__mulsf3_pse+0x64>
    1350:	9e 3f       	cpi	r25, 0xFE	; 254
    1352:	51 05       	cpc	r21, r1
    1354:	70 f0       	brcs	.+28     	; 0x1372 <__mulsf3_pse+0x9c>
    1356:	60 cf       	rjmp	.-320    	; 0x1218 <__fp_inf>
    1358:	aa cf       	rjmp	.-172    	; 0x12ae <__fp_szero>
    135a:	5f 3f       	cpi	r21, 0xFF	; 255
    135c:	ec f3       	brlt	.-6      	; 0x1358 <__mulsf3_pse+0x82>
    135e:	98 3e       	cpi	r25, 0xE8	; 232
    1360:	dc f3       	brlt	.-10     	; 0x1358 <__mulsf3_pse+0x82>
    1362:	86 95       	lsr	r24
    1364:	77 95       	ror	r23
    1366:	67 95       	ror	r22
    1368:	b7 95       	ror	r27
    136a:	f7 95       	ror	r31
    136c:	e7 95       	ror	r30
    136e:	9f 5f       	subi	r25, 0xFF	; 255
    1370:	c1 f7       	brne	.-16     	; 0x1362 <__mulsf3_pse+0x8c>
    1372:	fe 2b       	or	r31, r30
    1374:	88 0f       	add	r24, r24
    1376:	91 1d       	adc	r25, r1
    1378:	96 95       	lsr	r25
    137a:	87 95       	ror	r24
    137c:	97 f9       	bld	r25, 7
    137e:	08 95       	ret

00001380 <__divmodhi4>:
    1380:	97 fb       	bst	r25, 7
    1382:	07 2e       	mov	r0, r23
    1384:	16 f4       	brtc	.+4      	; 0x138a <__divmodhi4+0xa>
    1386:	00 94       	com	r0
    1388:	06 d0       	rcall	.+12     	; 0x1396 <__divmodhi4_neg1>
    138a:	77 fd       	sbrc	r23, 7
    138c:	08 d0       	rcall	.+16     	; 0x139e <__divmodhi4_neg2>
    138e:	2d d0       	rcall	.+90     	; 0x13ea <__udivmodhi4>
    1390:	07 fc       	sbrc	r0, 7
    1392:	05 d0       	rcall	.+10     	; 0x139e <__divmodhi4_neg2>
    1394:	3e f4       	brtc	.+14     	; 0x13a4 <__divmodhi4_exit>

00001396 <__divmodhi4_neg1>:
    1396:	90 95       	com	r25
    1398:	81 95       	neg	r24
    139a:	9f 4f       	sbci	r25, 0xFF	; 255
    139c:	08 95       	ret

0000139e <__divmodhi4_neg2>:
    139e:	70 95       	com	r23
    13a0:	61 95       	neg	r22
    13a2:	7f 4f       	sbci	r23, 0xFF	; 255

000013a4 <__divmodhi4_exit>:
    13a4:	08 95       	ret

000013a6 <__udivmodsi4>:
    13a6:	a1 e2       	ldi	r26, 0x21	; 33
    13a8:	1a 2e       	mov	r1, r26
    13aa:	aa 1b       	sub	r26, r26
    13ac:	bb 1b       	sub	r27, r27
    13ae:	fd 01       	movw	r30, r26
    13b0:	0d c0       	rjmp	.+26     	; 0x13cc <__udivmodsi4_ep>

000013b2 <__udivmodsi4_loop>:
    13b2:	aa 1f       	adc	r26, r26
    13b4:	bb 1f       	adc	r27, r27
    13b6:	ee 1f       	adc	r30, r30
    13b8:	ff 1f       	adc	r31, r31
    13ba:	a2 17       	cp	r26, r18
    13bc:	b3 07       	cpc	r27, r19
    13be:	e4 07       	cpc	r30, r20
    13c0:	f5 07       	cpc	r31, r21
    13c2:	20 f0       	brcs	.+8      	; 0x13cc <__udivmodsi4_ep>
    13c4:	a2 1b       	sub	r26, r18
    13c6:	b3 0b       	sbc	r27, r19
    13c8:	e4 0b       	sbc	r30, r20
    13ca:	f5 0b       	sbc	r31, r21

000013cc <__udivmodsi4_ep>:
    13cc:	66 1f       	adc	r22, r22
    13ce:	77 1f       	adc	r23, r23
    13d0:	88 1f       	adc	r24, r24
    13d2:	99 1f       	adc	r25, r25
    13d4:	1a 94       	dec	r1
    13d6:	69 f7       	brne	.-38     	; 0x13b2 <__udivmodsi4_loop>
    13d8:	60 95       	com	r22
    13da:	70 95       	com	r23
    13dc:	80 95       	com	r24
    13de:	90 95       	com	r25
    13e0:	9b 01       	movw	r18, r22
    13e2:	ac 01       	movw	r20, r24
    13e4:	bd 01       	movw	r22, r26
    13e6:	cf 01       	movw	r24, r30
    13e8:	08 95       	ret

000013ea <__udivmodhi4>:
    13ea:	aa 1b       	sub	r26, r26
    13ec:	bb 1b       	sub	r27, r27
    13ee:	51 e1       	ldi	r21, 0x11	; 17
    13f0:	07 c0       	rjmp	.+14     	; 0x1400 <__udivmodhi4_ep>

000013f2 <__udivmodhi4_loop>:
    13f2:	aa 1f       	adc	r26, r26
    13f4:	bb 1f       	adc	r27, r27
    13f6:	a6 17       	cp	r26, r22
    13f8:	b7 07       	cpc	r27, r23
    13fa:	10 f0       	brcs	.+4      	; 0x1400 <__udivmodhi4_ep>
    13fc:	a6 1b       	sub	r26, r22
    13fe:	b7 0b       	sbc	r27, r23

00001400 <__udivmodhi4_ep>:
    1400:	88 1f       	adc	r24, r24
    1402:	99 1f       	adc	r25, r25
    1404:	5a 95       	dec	r21
    1406:	a9 f7       	brne	.-22     	; 0x13f2 <__udivmodhi4_loop>
    1408:	80 95       	com	r24
    140a:	90 95       	com	r25
    140c:	bc 01       	movw	r22, r24
    140e:	cd 01       	movw	r24, r26
    1410:	08 95       	ret

00001412 <sprintf>:
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
    141a:	cd b7       	in	r28, 0x3d	; 61
    141c:	de b7       	in	r29, 0x3e	; 62
    141e:	2e 97       	sbiw	r28, 0x0e	; 14
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	f8 94       	cli
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	0f be       	out	0x3f, r0	; 63
    1428:	cd bf       	out	0x3d, r28	; 61
    142a:	0d 89       	ldd	r16, Y+21	; 0x15
    142c:	1e 89       	ldd	r17, Y+22	; 0x16
    142e:	86 e0       	ldi	r24, 0x06	; 6
    1430:	8c 83       	std	Y+4, r24	; 0x04
    1432:	1a 83       	std	Y+2, r17	; 0x02
    1434:	09 83       	std	Y+1, r16	; 0x01
    1436:	8f ef       	ldi	r24, 0xFF	; 255
    1438:	9f e7       	ldi	r25, 0x7F	; 127
    143a:	9e 83       	std	Y+6, r25	; 0x06
    143c:	8d 83       	std	Y+5, r24	; 0x05
    143e:	ae 01       	movw	r20, r28
    1440:	47 5e       	subi	r20, 0xE7	; 231
    1442:	5f 4f       	sbci	r21, 0xFF	; 255
    1444:	6f 89       	ldd	r22, Y+23	; 0x17
    1446:	78 8d       	ldd	r23, Y+24	; 0x18
    1448:	ce 01       	movw	r24, r28
    144a:	01 96       	adiw	r24, 0x01	; 1
    144c:	10 d0       	rcall	.+32     	; 0x146e <vfprintf>
    144e:	ef 81       	ldd	r30, Y+7	; 0x07
    1450:	f8 85       	ldd	r31, Y+8	; 0x08
    1452:	e0 0f       	add	r30, r16
    1454:	f1 1f       	adc	r31, r17
    1456:	10 82       	st	Z, r1
    1458:	2e 96       	adiw	r28, 0x0e	; 14
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	1f 91       	pop	r17
    146a:	0f 91       	pop	r16
    146c:	08 95       	ret

0000146e <vfprintf>:
    146e:	2f 92       	push	r2
    1470:	3f 92       	push	r3
    1472:	4f 92       	push	r4
    1474:	5f 92       	push	r5
    1476:	6f 92       	push	r6
    1478:	7f 92       	push	r7
    147a:	8f 92       	push	r8
    147c:	9f 92       	push	r9
    147e:	af 92       	push	r10
    1480:	bf 92       	push	r11
    1482:	cf 92       	push	r12
    1484:	df 92       	push	r13
    1486:	ef 92       	push	r14
    1488:	ff 92       	push	r15
    148a:	0f 93       	push	r16
    148c:	1f 93       	push	r17
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	cd b7       	in	r28, 0x3d	; 61
    1494:	de b7       	in	r29, 0x3e	; 62
    1496:	2b 97       	sbiw	r28, 0x0b	; 11
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	6c 01       	movw	r12, r24
    14a4:	7b 01       	movw	r14, r22
    14a6:	8a 01       	movw	r16, r20
    14a8:	fc 01       	movw	r30, r24
    14aa:	17 82       	std	Z+7, r1	; 0x07
    14ac:	16 82       	std	Z+6, r1	; 0x06
    14ae:	83 81       	ldd	r24, Z+3	; 0x03
    14b0:	81 ff       	sbrs	r24, 1
    14b2:	bf c1       	rjmp	.+894    	; 0x1832 <vfprintf+0x3c4>
    14b4:	ce 01       	movw	r24, r28
    14b6:	01 96       	adiw	r24, 0x01	; 1
    14b8:	3c 01       	movw	r6, r24
    14ba:	f6 01       	movw	r30, r12
    14bc:	93 81       	ldd	r25, Z+3	; 0x03
    14be:	f7 01       	movw	r30, r14
    14c0:	93 fd       	sbrc	r25, 3
    14c2:	85 91       	lpm	r24, Z+
    14c4:	93 ff       	sbrs	r25, 3
    14c6:	81 91       	ld	r24, Z+
    14c8:	7f 01       	movw	r14, r30
    14ca:	88 23       	and	r24, r24
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <vfprintf+0x62>
    14ce:	ad c1       	rjmp	.+858    	; 0x182a <vfprintf+0x3bc>
    14d0:	85 32       	cpi	r24, 0x25	; 37
    14d2:	39 f4       	brne	.+14     	; 0x14e2 <vfprintf+0x74>
    14d4:	93 fd       	sbrc	r25, 3
    14d6:	85 91       	lpm	r24, Z+
    14d8:	93 ff       	sbrs	r25, 3
    14da:	81 91       	ld	r24, Z+
    14dc:	7f 01       	movw	r14, r30
    14de:	85 32       	cpi	r24, 0x25	; 37
    14e0:	21 f4       	brne	.+8      	; 0x14ea <vfprintf+0x7c>
    14e2:	b6 01       	movw	r22, r12
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	d6 d1       	rcall	.+940    	; 0x1894 <fputc>
    14e8:	e8 cf       	rjmp	.-48     	; 0x14ba <vfprintf+0x4c>
    14ea:	91 2c       	mov	r9, r1
    14ec:	21 2c       	mov	r2, r1
    14ee:	31 2c       	mov	r3, r1
    14f0:	ff e1       	ldi	r31, 0x1F	; 31
    14f2:	f3 15       	cp	r31, r3
    14f4:	d8 f0       	brcs	.+54     	; 0x152c <vfprintf+0xbe>
    14f6:	8b 32       	cpi	r24, 0x2B	; 43
    14f8:	79 f0       	breq	.+30     	; 0x1518 <vfprintf+0xaa>
    14fa:	38 f4       	brcc	.+14     	; 0x150a <vfprintf+0x9c>
    14fc:	80 32       	cpi	r24, 0x20	; 32
    14fe:	79 f0       	breq	.+30     	; 0x151e <vfprintf+0xb0>
    1500:	83 32       	cpi	r24, 0x23	; 35
    1502:	a1 f4       	brne	.+40     	; 0x152c <vfprintf+0xbe>
    1504:	23 2d       	mov	r18, r3
    1506:	20 61       	ori	r18, 0x10	; 16
    1508:	1d c0       	rjmp	.+58     	; 0x1544 <vfprintf+0xd6>
    150a:	8d 32       	cpi	r24, 0x2D	; 45
    150c:	61 f0       	breq	.+24     	; 0x1526 <vfprintf+0xb8>
    150e:	80 33       	cpi	r24, 0x30	; 48
    1510:	69 f4       	brne	.+26     	; 0x152c <vfprintf+0xbe>
    1512:	23 2d       	mov	r18, r3
    1514:	21 60       	ori	r18, 0x01	; 1
    1516:	16 c0       	rjmp	.+44     	; 0x1544 <vfprintf+0xd6>
    1518:	83 2d       	mov	r24, r3
    151a:	82 60       	ori	r24, 0x02	; 2
    151c:	38 2e       	mov	r3, r24
    151e:	e3 2d       	mov	r30, r3
    1520:	e4 60       	ori	r30, 0x04	; 4
    1522:	3e 2e       	mov	r3, r30
    1524:	2a c0       	rjmp	.+84     	; 0x157a <vfprintf+0x10c>
    1526:	f3 2d       	mov	r31, r3
    1528:	f8 60       	ori	r31, 0x08	; 8
    152a:	1d c0       	rjmp	.+58     	; 0x1566 <vfprintf+0xf8>
    152c:	37 fc       	sbrc	r3, 7
    152e:	2d c0       	rjmp	.+90     	; 0x158a <vfprintf+0x11c>
    1530:	20 ed       	ldi	r18, 0xD0	; 208
    1532:	28 0f       	add	r18, r24
    1534:	2a 30       	cpi	r18, 0x0A	; 10
    1536:	40 f0       	brcs	.+16     	; 0x1548 <vfprintf+0xda>
    1538:	8e 32       	cpi	r24, 0x2E	; 46
    153a:	b9 f4       	brne	.+46     	; 0x156a <vfprintf+0xfc>
    153c:	36 fc       	sbrc	r3, 6
    153e:	75 c1       	rjmp	.+746    	; 0x182a <vfprintf+0x3bc>
    1540:	23 2d       	mov	r18, r3
    1542:	20 64       	ori	r18, 0x40	; 64
    1544:	32 2e       	mov	r3, r18
    1546:	19 c0       	rjmp	.+50     	; 0x157a <vfprintf+0x10c>
    1548:	36 fe       	sbrs	r3, 6
    154a:	06 c0       	rjmp	.+12     	; 0x1558 <vfprintf+0xea>
    154c:	8a e0       	ldi	r24, 0x0A	; 10
    154e:	98 9e       	mul	r9, r24
    1550:	20 0d       	add	r18, r0
    1552:	11 24       	eor	r1, r1
    1554:	92 2e       	mov	r9, r18
    1556:	11 c0       	rjmp	.+34     	; 0x157a <vfprintf+0x10c>
    1558:	ea e0       	ldi	r30, 0x0A	; 10
    155a:	2e 9e       	mul	r2, r30
    155c:	20 0d       	add	r18, r0
    155e:	11 24       	eor	r1, r1
    1560:	22 2e       	mov	r2, r18
    1562:	f3 2d       	mov	r31, r3
    1564:	f0 62       	ori	r31, 0x20	; 32
    1566:	3f 2e       	mov	r3, r31
    1568:	08 c0       	rjmp	.+16     	; 0x157a <vfprintf+0x10c>
    156a:	8c 36       	cpi	r24, 0x6C	; 108
    156c:	21 f4       	brne	.+8      	; 0x1576 <vfprintf+0x108>
    156e:	83 2d       	mov	r24, r3
    1570:	80 68       	ori	r24, 0x80	; 128
    1572:	38 2e       	mov	r3, r24
    1574:	02 c0       	rjmp	.+4      	; 0x157a <vfprintf+0x10c>
    1576:	88 36       	cpi	r24, 0x68	; 104
    1578:	41 f4       	brne	.+16     	; 0x158a <vfprintf+0x11c>
    157a:	f7 01       	movw	r30, r14
    157c:	93 fd       	sbrc	r25, 3
    157e:	85 91       	lpm	r24, Z+
    1580:	93 ff       	sbrs	r25, 3
    1582:	81 91       	ld	r24, Z+
    1584:	7f 01       	movw	r14, r30
    1586:	81 11       	cpse	r24, r1
    1588:	b3 cf       	rjmp	.-154    	; 0x14f0 <vfprintf+0x82>
    158a:	98 2f       	mov	r25, r24
    158c:	9f 7d       	andi	r25, 0xDF	; 223
    158e:	95 54       	subi	r25, 0x45	; 69
    1590:	93 30       	cpi	r25, 0x03	; 3
    1592:	28 f4       	brcc	.+10     	; 0x159e <vfprintf+0x130>
    1594:	0c 5f       	subi	r16, 0xFC	; 252
    1596:	1f 4f       	sbci	r17, 0xFF	; 255
    1598:	9f e3       	ldi	r25, 0x3F	; 63
    159a:	99 83       	std	Y+1, r25	; 0x01
    159c:	0d c0       	rjmp	.+26     	; 0x15b8 <vfprintf+0x14a>
    159e:	83 36       	cpi	r24, 0x63	; 99
    15a0:	31 f0       	breq	.+12     	; 0x15ae <vfprintf+0x140>
    15a2:	83 37       	cpi	r24, 0x73	; 115
    15a4:	71 f0       	breq	.+28     	; 0x15c2 <vfprintf+0x154>
    15a6:	83 35       	cpi	r24, 0x53	; 83
    15a8:	09 f0       	breq	.+2      	; 0x15ac <vfprintf+0x13e>
    15aa:	55 c0       	rjmp	.+170    	; 0x1656 <vfprintf+0x1e8>
    15ac:	20 c0       	rjmp	.+64     	; 0x15ee <vfprintf+0x180>
    15ae:	f8 01       	movw	r30, r16
    15b0:	80 81       	ld	r24, Z
    15b2:	89 83       	std	Y+1, r24	; 0x01
    15b4:	0e 5f       	subi	r16, 0xFE	; 254
    15b6:	1f 4f       	sbci	r17, 0xFF	; 255
    15b8:	88 24       	eor	r8, r8
    15ba:	83 94       	inc	r8
    15bc:	91 2c       	mov	r9, r1
    15be:	53 01       	movw	r10, r6
    15c0:	12 c0       	rjmp	.+36     	; 0x15e6 <vfprintf+0x178>
    15c2:	28 01       	movw	r4, r16
    15c4:	f2 e0       	ldi	r31, 0x02	; 2
    15c6:	4f 0e       	add	r4, r31
    15c8:	51 1c       	adc	r5, r1
    15ca:	f8 01       	movw	r30, r16
    15cc:	a0 80       	ld	r10, Z
    15ce:	b1 80       	ldd	r11, Z+1	; 0x01
    15d0:	36 fe       	sbrs	r3, 6
    15d2:	03 c0       	rjmp	.+6      	; 0x15da <vfprintf+0x16c>
    15d4:	69 2d       	mov	r22, r9
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <vfprintf+0x170>
    15da:	6f ef       	ldi	r22, 0xFF	; 255
    15dc:	7f ef       	ldi	r23, 0xFF	; 255
    15de:	c5 01       	movw	r24, r10
    15e0:	4e d1       	rcall	.+668    	; 0x187e <strnlen>
    15e2:	4c 01       	movw	r8, r24
    15e4:	82 01       	movw	r16, r4
    15e6:	f3 2d       	mov	r31, r3
    15e8:	ff 77       	andi	r31, 0x7F	; 127
    15ea:	3f 2e       	mov	r3, r31
    15ec:	15 c0       	rjmp	.+42     	; 0x1618 <vfprintf+0x1aa>
    15ee:	28 01       	movw	r4, r16
    15f0:	22 e0       	ldi	r18, 0x02	; 2
    15f2:	42 0e       	add	r4, r18
    15f4:	51 1c       	adc	r5, r1
    15f6:	f8 01       	movw	r30, r16
    15f8:	a0 80       	ld	r10, Z
    15fa:	b1 80       	ldd	r11, Z+1	; 0x01
    15fc:	36 fe       	sbrs	r3, 6
    15fe:	03 c0       	rjmp	.+6      	; 0x1606 <vfprintf+0x198>
    1600:	69 2d       	mov	r22, r9
    1602:	70 e0       	ldi	r23, 0x00	; 0
    1604:	02 c0       	rjmp	.+4      	; 0x160a <vfprintf+0x19c>
    1606:	6f ef       	ldi	r22, 0xFF	; 255
    1608:	7f ef       	ldi	r23, 0xFF	; 255
    160a:	c5 01       	movw	r24, r10
    160c:	2d d1       	rcall	.+602    	; 0x1868 <strnlen_P>
    160e:	4c 01       	movw	r8, r24
    1610:	f3 2d       	mov	r31, r3
    1612:	f0 68       	ori	r31, 0x80	; 128
    1614:	3f 2e       	mov	r3, r31
    1616:	82 01       	movw	r16, r4
    1618:	33 fc       	sbrc	r3, 3
    161a:	19 c0       	rjmp	.+50     	; 0x164e <vfprintf+0x1e0>
    161c:	82 2d       	mov	r24, r2
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	88 16       	cp	r8, r24
    1622:	99 06       	cpc	r9, r25
    1624:	a0 f4       	brcc	.+40     	; 0x164e <vfprintf+0x1e0>
    1626:	b6 01       	movw	r22, r12
    1628:	80 e2       	ldi	r24, 0x20	; 32
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	33 d1       	rcall	.+614    	; 0x1894 <fputc>
    162e:	2a 94       	dec	r2
    1630:	f5 cf       	rjmp	.-22     	; 0x161c <vfprintf+0x1ae>
    1632:	f5 01       	movw	r30, r10
    1634:	37 fc       	sbrc	r3, 7
    1636:	85 91       	lpm	r24, Z+
    1638:	37 fe       	sbrs	r3, 7
    163a:	81 91       	ld	r24, Z+
    163c:	5f 01       	movw	r10, r30
    163e:	b6 01       	movw	r22, r12
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	28 d1       	rcall	.+592    	; 0x1894 <fputc>
    1644:	21 10       	cpse	r2, r1
    1646:	2a 94       	dec	r2
    1648:	21 e0       	ldi	r18, 0x01	; 1
    164a:	82 1a       	sub	r8, r18
    164c:	91 08       	sbc	r9, r1
    164e:	81 14       	cp	r8, r1
    1650:	91 04       	cpc	r9, r1
    1652:	79 f7       	brne	.-34     	; 0x1632 <vfprintf+0x1c4>
    1654:	e1 c0       	rjmp	.+450    	; 0x1818 <vfprintf+0x3aa>
    1656:	84 36       	cpi	r24, 0x64	; 100
    1658:	11 f0       	breq	.+4      	; 0x165e <vfprintf+0x1f0>
    165a:	89 36       	cpi	r24, 0x69	; 105
    165c:	39 f5       	brne	.+78     	; 0x16ac <vfprintf+0x23e>
    165e:	f8 01       	movw	r30, r16
    1660:	37 fe       	sbrs	r3, 7
    1662:	07 c0       	rjmp	.+14     	; 0x1672 <vfprintf+0x204>
    1664:	60 81       	ld	r22, Z
    1666:	71 81       	ldd	r23, Z+1	; 0x01
    1668:	82 81       	ldd	r24, Z+2	; 0x02
    166a:	93 81       	ldd	r25, Z+3	; 0x03
    166c:	0c 5f       	subi	r16, 0xFC	; 252
    166e:	1f 4f       	sbci	r17, 0xFF	; 255
    1670:	08 c0       	rjmp	.+16     	; 0x1682 <vfprintf+0x214>
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	07 2e       	mov	r0, r23
    1678:	00 0c       	add	r0, r0
    167a:	88 0b       	sbc	r24, r24
    167c:	99 0b       	sbc	r25, r25
    167e:	0e 5f       	subi	r16, 0xFE	; 254
    1680:	1f 4f       	sbci	r17, 0xFF	; 255
    1682:	f3 2d       	mov	r31, r3
    1684:	ff 76       	andi	r31, 0x6F	; 111
    1686:	3f 2e       	mov	r3, r31
    1688:	97 ff       	sbrs	r25, 7
    168a:	09 c0       	rjmp	.+18     	; 0x169e <vfprintf+0x230>
    168c:	90 95       	com	r25
    168e:	80 95       	com	r24
    1690:	70 95       	com	r23
    1692:	61 95       	neg	r22
    1694:	7f 4f       	sbci	r23, 0xFF	; 255
    1696:	8f 4f       	sbci	r24, 0xFF	; 255
    1698:	9f 4f       	sbci	r25, 0xFF	; 255
    169a:	f0 68       	ori	r31, 0x80	; 128
    169c:	3f 2e       	mov	r3, r31
    169e:	2a e0       	ldi	r18, 0x0A	; 10
    16a0:	30 e0       	ldi	r19, 0x00	; 0
    16a2:	a3 01       	movw	r20, r6
    16a4:	33 d1       	rcall	.+614    	; 0x190c <__ultoa_invert>
    16a6:	88 2e       	mov	r8, r24
    16a8:	86 18       	sub	r8, r6
    16aa:	44 c0       	rjmp	.+136    	; 0x1734 <vfprintf+0x2c6>
    16ac:	85 37       	cpi	r24, 0x75	; 117
    16ae:	31 f4       	brne	.+12     	; 0x16bc <vfprintf+0x24e>
    16b0:	23 2d       	mov	r18, r3
    16b2:	2f 7e       	andi	r18, 0xEF	; 239
    16b4:	b2 2e       	mov	r11, r18
    16b6:	2a e0       	ldi	r18, 0x0A	; 10
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	25 c0       	rjmp	.+74     	; 0x1706 <vfprintf+0x298>
    16bc:	93 2d       	mov	r25, r3
    16be:	99 7f       	andi	r25, 0xF9	; 249
    16c0:	b9 2e       	mov	r11, r25
    16c2:	8f 36       	cpi	r24, 0x6F	; 111
    16c4:	c1 f0       	breq	.+48     	; 0x16f6 <vfprintf+0x288>
    16c6:	18 f4       	brcc	.+6      	; 0x16ce <vfprintf+0x260>
    16c8:	88 35       	cpi	r24, 0x58	; 88
    16ca:	79 f0       	breq	.+30     	; 0x16ea <vfprintf+0x27c>
    16cc:	ae c0       	rjmp	.+348    	; 0x182a <vfprintf+0x3bc>
    16ce:	80 37       	cpi	r24, 0x70	; 112
    16d0:	19 f0       	breq	.+6      	; 0x16d8 <vfprintf+0x26a>
    16d2:	88 37       	cpi	r24, 0x78	; 120
    16d4:	21 f0       	breq	.+8      	; 0x16de <vfprintf+0x270>
    16d6:	a9 c0       	rjmp	.+338    	; 0x182a <vfprintf+0x3bc>
    16d8:	e9 2f       	mov	r30, r25
    16da:	e0 61       	ori	r30, 0x10	; 16
    16dc:	be 2e       	mov	r11, r30
    16de:	b4 fe       	sbrs	r11, 4
    16e0:	0d c0       	rjmp	.+26     	; 0x16fc <vfprintf+0x28e>
    16e2:	fb 2d       	mov	r31, r11
    16e4:	f4 60       	ori	r31, 0x04	; 4
    16e6:	bf 2e       	mov	r11, r31
    16e8:	09 c0       	rjmp	.+18     	; 0x16fc <vfprintf+0x28e>
    16ea:	34 fe       	sbrs	r3, 4
    16ec:	0a c0       	rjmp	.+20     	; 0x1702 <vfprintf+0x294>
    16ee:	29 2f       	mov	r18, r25
    16f0:	26 60       	ori	r18, 0x06	; 6
    16f2:	b2 2e       	mov	r11, r18
    16f4:	06 c0       	rjmp	.+12     	; 0x1702 <vfprintf+0x294>
    16f6:	28 e0       	ldi	r18, 0x08	; 8
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	05 c0       	rjmp	.+10     	; 0x1706 <vfprintf+0x298>
    16fc:	20 e1       	ldi	r18, 0x10	; 16
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <vfprintf+0x298>
    1702:	20 e1       	ldi	r18, 0x10	; 16
    1704:	32 e0       	ldi	r19, 0x02	; 2
    1706:	f8 01       	movw	r30, r16
    1708:	b7 fe       	sbrs	r11, 7
    170a:	07 c0       	rjmp	.+14     	; 0x171a <vfprintf+0x2ac>
    170c:	60 81       	ld	r22, Z
    170e:	71 81       	ldd	r23, Z+1	; 0x01
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	0c 5f       	subi	r16, 0xFC	; 252
    1716:	1f 4f       	sbci	r17, 0xFF	; 255
    1718:	06 c0       	rjmp	.+12     	; 0x1726 <vfprintf+0x2b8>
    171a:	60 81       	ld	r22, Z
    171c:	71 81       	ldd	r23, Z+1	; 0x01
    171e:	80 e0       	ldi	r24, 0x00	; 0
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	0e 5f       	subi	r16, 0xFE	; 254
    1724:	1f 4f       	sbci	r17, 0xFF	; 255
    1726:	a3 01       	movw	r20, r6
    1728:	f1 d0       	rcall	.+482    	; 0x190c <__ultoa_invert>
    172a:	88 2e       	mov	r8, r24
    172c:	86 18       	sub	r8, r6
    172e:	fb 2d       	mov	r31, r11
    1730:	ff 77       	andi	r31, 0x7F	; 127
    1732:	3f 2e       	mov	r3, r31
    1734:	36 fe       	sbrs	r3, 6
    1736:	0d c0       	rjmp	.+26     	; 0x1752 <vfprintf+0x2e4>
    1738:	23 2d       	mov	r18, r3
    173a:	2e 7f       	andi	r18, 0xFE	; 254
    173c:	a2 2e       	mov	r10, r18
    173e:	89 14       	cp	r8, r9
    1740:	58 f4       	brcc	.+22     	; 0x1758 <vfprintf+0x2ea>
    1742:	34 fe       	sbrs	r3, 4
    1744:	0b c0       	rjmp	.+22     	; 0x175c <vfprintf+0x2ee>
    1746:	32 fc       	sbrc	r3, 2
    1748:	09 c0       	rjmp	.+18     	; 0x175c <vfprintf+0x2ee>
    174a:	83 2d       	mov	r24, r3
    174c:	8e 7e       	andi	r24, 0xEE	; 238
    174e:	a8 2e       	mov	r10, r24
    1750:	05 c0       	rjmp	.+10     	; 0x175c <vfprintf+0x2ee>
    1752:	b8 2c       	mov	r11, r8
    1754:	a3 2c       	mov	r10, r3
    1756:	03 c0       	rjmp	.+6      	; 0x175e <vfprintf+0x2f0>
    1758:	b8 2c       	mov	r11, r8
    175a:	01 c0       	rjmp	.+2      	; 0x175e <vfprintf+0x2f0>
    175c:	b9 2c       	mov	r11, r9
    175e:	a4 fe       	sbrs	r10, 4
    1760:	0f c0       	rjmp	.+30     	; 0x1780 <vfprintf+0x312>
    1762:	fe 01       	movw	r30, r28
    1764:	e8 0d       	add	r30, r8
    1766:	f1 1d       	adc	r31, r1
    1768:	80 81       	ld	r24, Z
    176a:	80 33       	cpi	r24, 0x30	; 48
    176c:	21 f4       	brne	.+8      	; 0x1776 <vfprintf+0x308>
    176e:	9a 2d       	mov	r25, r10
    1770:	99 7e       	andi	r25, 0xE9	; 233
    1772:	a9 2e       	mov	r10, r25
    1774:	09 c0       	rjmp	.+18     	; 0x1788 <vfprintf+0x31a>
    1776:	a2 fe       	sbrs	r10, 2
    1778:	06 c0       	rjmp	.+12     	; 0x1786 <vfprintf+0x318>
    177a:	b3 94       	inc	r11
    177c:	b3 94       	inc	r11
    177e:	04 c0       	rjmp	.+8      	; 0x1788 <vfprintf+0x31a>
    1780:	8a 2d       	mov	r24, r10
    1782:	86 78       	andi	r24, 0x86	; 134
    1784:	09 f0       	breq	.+2      	; 0x1788 <vfprintf+0x31a>
    1786:	b3 94       	inc	r11
    1788:	a3 fc       	sbrc	r10, 3
    178a:	10 c0       	rjmp	.+32     	; 0x17ac <vfprintf+0x33e>
    178c:	a0 fe       	sbrs	r10, 0
    178e:	06 c0       	rjmp	.+12     	; 0x179c <vfprintf+0x32e>
    1790:	b2 14       	cp	r11, r2
    1792:	80 f4       	brcc	.+32     	; 0x17b4 <vfprintf+0x346>
    1794:	28 0c       	add	r2, r8
    1796:	92 2c       	mov	r9, r2
    1798:	9b 18       	sub	r9, r11
    179a:	0d c0       	rjmp	.+26     	; 0x17b6 <vfprintf+0x348>
    179c:	b2 14       	cp	r11, r2
    179e:	58 f4       	brcc	.+22     	; 0x17b6 <vfprintf+0x348>
    17a0:	b6 01       	movw	r22, r12
    17a2:	80 e2       	ldi	r24, 0x20	; 32
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	76 d0       	rcall	.+236    	; 0x1894 <fputc>
    17a8:	b3 94       	inc	r11
    17aa:	f8 cf       	rjmp	.-16     	; 0x179c <vfprintf+0x32e>
    17ac:	b2 14       	cp	r11, r2
    17ae:	18 f4       	brcc	.+6      	; 0x17b6 <vfprintf+0x348>
    17b0:	2b 18       	sub	r2, r11
    17b2:	02 c0       	rjmp	.+4      	; 0x17b8 <vfprintf+0x34a>
    17b4:	98 2c       	mov	r9, r8
    17b6:	21 2c       	mov	r2, r1
    17b8:	a4 fe       	sbrs	r10, 4
    17ba:	0f c0       	rjmp	.+30     	; 0x17da <vfprintf+0x36c>
    17bc:	b6 01       	movw	r22, r12
    17be:	80 e3       	ldi	r24, 0x30	; 48
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	68 d0       	rcall	.+208    	; 0x1894 <fputc>
    17c4:	a2 fe       	sbrs	r10, 2
    17c6:	16 c0       	rjmp	.+44     	; 0x17f4 <vfprintf+0x386>
    17c8:	a1 fc       	sbrc	r10, 1
    17ca:	03 c0       	rjmp	.+6      	; 0x17d2 <vfprintf+0x364>
    17cc:	88 e7       	ldi	r24, 0x78	; 120
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	02 c0       	rjmp	.+4      	; 0x17d6 <vfprintf+0x368>
    17d2:	88 e5       	ldi	r24, 0x58	; 88
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	b6 01       	movw	r22, r12
    17d8:	0c c0       	rjmp	.+24     	; 0x17f2 <vfprintf+0x384>
    17da:	8a 2d       	mov	r24, r10
    17dc:	86 78       	andi	r24, 0x86	; 134
    17de:	51 f0       	breq	.+20     	; 0x17f4 <vfprintf+0x386>
    17e0:	a1 fe       	sbrs	r10, 1
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <vfprintf+0x37a>
    17e4:	8b e2       	ldi	r24, 0x2B	; 43
    17e6:	01 c0       	rjmp	.+2      	; 0x17ea <vfprintf+0x37c>
    17e8:	80 e2       	ldi	r24, 0x20	; 32
    17ea:	a7 fc       	sbrc	r10, 7
    17ec:	8d e2       	ldi	r24, 0x2D	; 45
    17ee:	b6 01       	movw	r22, r12
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	50 d0       	rcall	.+160    	; 0x1894 <fputc>
    17f4:	89 14       	cp	r8, r9
    17f6:	30 f4       	brcc	.+12     	; 0x1804 <vfprintf+0x396>
    17f8:	b6 01       	movw	r22, r12
    17fa:	80 e3       	ldi	r24, 0x30	; 48
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	4a d0       	rcall	.+148    	; 0x1894 <fputc>
    1800:	9a 94       	dec	r9
    1802:	f8 cf       	rjmp	.-16     	; 0x17f4 <vfprintf+0x386>
    1804:	8a 94       	dec	r8
    1806:	f3 01       	movw	r30, r6
    1808:	e8 0d       	add	r30, r8
    180a:	f1 1d       	adc	r31, r1
    180c:	80 81       	ld	r24, Z
    180e:	b6 01       	movw	r22, r12
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	40 d0       	rcall	.+128    	; 0x1894 <fputc>
    1814:	81 10       	cpse	r8, r1
    1816:	f6 cf       	rjmp	.-20     	; 0x1804 <vfprintf+0x396>
    1818:	22 20       	and	r2, r2
    181a:	09 f4       	brne	.+2      	; 0x181e <vfprintf+0x3b0>
    181c:	4e ce       	rjmp	.-868    	; 0x14ba <vfprintf+0x4c>
    181e:	b6 01       	movw	r22, r12
    1820:	80 e2       	ldi	r24, 0x20	; 32
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	37 d0       	rcall	.+110    	; 0x1894 <fputc>
    1826:	2a 94       	dec	r2
    1828:	f7 cf       	rjmp	.-18     	; 0x1818 <vfprintf+0x3aa>
    182a:	f6 01       	movw	r30, r12
    182c:	86 81       	ldd	r24, Z+6	; 0x06
    182e:	97 81       	ldd	r25, Z+7	; 0x07
    1830:	02 c0       	rjmp	.+4      	; 0x1836 <vfprintf+0x3c8>
    1832:	8f ef       	ldi	r24, 0xFF	; 255
    1834:	9f ef       	ldi	r25, 0xFF	; 255
    1836:	2b 96       	adiw	r28, 0x0b	; 11
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	f8 94       	cli
    183c:	de bf       	out	0x3e, r29	; 62
    183e:	0f be       	out	0x3f, r0	; 63
    1840:	cd bf       	out	0x3d, r28	; 61
    1842:	df 91       	pop	r29
    1844:	cf 91       	pop	r28
    1846:	1f 91       	pop	r17
    1848:	0f 91       	pop	r16
    184a:	ff 90       	pop	r15
    184c:	ef 90       	pop	r14
    184e:	df 90       	pop	r13
    1850:	cf 90       	pop	r12
    1852:	bf 90       	pop	r11
    1854:	af 90       	pop	r10
    1856:	9f 90       	pop	r9
    1858:	8f 90       	pop	r8
    185a:	7f 90       	pop	r7
    185c:	6f 90       	pop	r6
    185e:	5f 90       	pop	r5
    1860:	4f 90       	pop	r4
    1862:	3f 90       	pop	r3
    1864:	2f 90       	pop	r2
    1866:	08 95       	ret

00001868 <strnlen_P>:
    1868:	fc 01       	movw	r30, r24
    186a:	05 90       	lpm	r0, Z+
    186c:	61 50       	subi	r22, 0x01	; 1
    186e:	70 40       	sbci	r23, 0x00	; 0
    1870:	01 10       	cpse	r0, r1
    1872:	d8 f7       	brcc	.-10     	; 0x186a <strnlen_P+0x2>
    1874:	80 95       	com	r24
    1876:	90 95       	com	r25
    1878:	8e 0f       	add	r24, r30
    187a:	9f 1f       	adc	r25, r31
    187c:	08 95       	ret

0000187e <strnlen>:
    187e:	fc 01       	movw	r30, r24
    1880:	61 50       	subi	r22, 0x01	; 1
    1882:	70 40       	sbci	r23, 0x00	; 0
    1884:	01 90       	ld	r0, Z+
    1886:	01 10       	cpse	r0, r1
    1888:	d8 f7       	brcc	.-10     	; 0x1880 <strnlen+0x2>
    188a:	80 95       	com	r24
    188c:	90 95       	com	r25
    188e:	8e 0f       	add	r24, r30
    1890:	9f 1f       	adc	r25, r31
    1892:	08 95       	ret

00001894 <fputc>:
    1894:	0f 93       	push	r16
    1896:	1f 93       	push	r17
    1898:	cf 93       	push	r28
    189a:	df 93       	push	r29
    189c:	fb 01       	movw	r30, r22
    189e:	23 81       	ldd	r18, Z+3	; 0x03
    18a0:	21 fd       	sbrc	r18, 1
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <fputc+0x16>
    18a4:	8f ef       	ldi	r24, 0xFF	; 255
    18a6:	9f ef       	ldi	r25, 0xFF	; 255
    18a8:	2c c0       	rjmp	.+88     	; 0x1902 <fputc+0x6e>
    18aa:	22 ff       	sbrs	r18, 2
    18ac:	16 c0       	rjmp	.+44     	; 0x18da <fputc+0x46>
    18ae:	46 81       	ldd	r20, Z+6	; 0x06
    18b0:	57 81       	ldd	r21, Z+7	; 0x07
    18b2:	24 81       	ldd	r18, Z+4	; 0x04
    18b4:	35 81       	ldd	r19, Z+5	; 0x05
    18b6:	42 17       	cp	r20, r18
    18b8:	53 07       	cpc	r21, r19
    18ba:	44 f4       	brge	.+16     	; 0x18cc <fputc+0x38>
    18bc:	a0 81       	ld	r26, Z
    18be:	b1 81       	ldd	r27, Z+1	; 0x01
    18c0:	9d 01       	movw	r18, r26
    18c2:	2f 5f       	subi	r18, 0xFF	; 255
    18c4:	3f 4f       	sbci	r19, 0xFF	; 255
    18c6:	31 83       	std	Z+1, r19	; 0x01
    18c8:	20 83       	st	Z, r18
    18ca:	8c 93       	st	X, r24
    18cc:	26 81       	ldd	r18, Z+6	; 0x06
    18ce:	37 81       	ldd	r19, Z+7	; 0x07
    18d0:	2f 5f       	subi	r18, 0xFF	; 255
    18d2:	3f 4f       	sbci	r19, 0xFF	; 255
    18d4:	37 83       	std	Z+7, r19	; 0x07
    18d6:	26 83       	std	Z+6, r18	; 0x06
    18d8:	14 c0       	rjmp	.+40     	; 0x1902 <fputc+0x6e>
    18da:	8b 01       	movw	r16, r22
    18dc:	ec 01       	movw	r28, r24
    18de:	fb 01       	movw	r30, r22
    18e0:	00 84       	ldd	r0, Z+8	; 0x08
    18e2:	f1 85       	ldd	r31, Z+9	; 0x09
    18e4:	e0 2d       	mov	r30, r0
    18e6:	09 95       	icall
    18e8:	89 2b       	or	r24, r25
    18ea:	e1 f6       	brne	.-72     	; 0x18a4 <fputc+0x10>
    18ec:	d8 01       	movw	r26, r16
    18ee:	16 96       	adiw	r26, 0x06	; 6
    18f0:	8d 91       	ld	r24, X+
    18f2:	9c 91       	ld	r25, X
    18f4:	17 97       	sbiw	r26, 0x07	; 7
    18f6:	01 96       	adiw	r24, 0x01	; 1
    18f8:	17 96       	adiw	r26, 0x07	; 7
    18fa:	9c 93       	st	X, r25
    18fc:	8e 93       	st	-X, r24
    18fe:	16 97       	sbiw	r26, 0x06	; 6
    1900:	ce 01       	movw	r24, r28
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	1f 91       	pop	r17
    1908:	0f 91       	pop	r16
    190a:	08 95       	ret

0000190c <__ultoa_invert>:
    190c:	fa 01       	movw	r30, r20
    190e:	aa 27       	eor	r26, r26
    1910:	28 30       	cpi	r18, 0x08	; 8
    1912:	51 f1       	breq	.+84     	; 0x1968 <__ultoa_invert+0x5c>
    1914:	20 31       	cpi	r18, 0x10	; 16
    1916:	81 f1       	breq	.+96     	; 0x1978 <__ultoa_invert+0x6c>
    1918:	e8 94       	clt
    191a:	6f 93       	push	r22
    191c:	6e 7f       	andi	r22, 0xFE	; 254
    191e:	6e 5f       	subi	r22, 0xFE	; 254
    1920:	7f 4f       	sbci	r23, 0xFF	; 255
    1922:	8f 4f       	sbci	r24, 0xFF	; 255
    1924:	9f 4f       	sbci	r25, 0xFF	; 255
    1926:	af 4f       	sbci	r26, 0xFF	; 255
    1928:	b1 e0       	ldi	r27, 0x01	; 1
    192a:	3e d0       	rcall	.+124    	; 0x19a8 <__ultoa_invert+0x9c>
    192c:	b4 e0       	ldi	r27, 0x04	; 4
    192e:	3c d0       	rcall	.+120    	; 0x19a8 <__ultoa_invert+0x9c>
    1930:	67 0f       	add	r22, r23
    1932:	78 1f       	adc	r23, r24
    1934:	89 1f       	adc	r24, r25
    1936:	9a 1f       	adc	r25, r26
    1938:	a1 1d       	adc	r26, r1
    193a:	68 0f       	add	r22, r24
    193c:	79 1f       	adc	r23, r25
    193e:	8a 1f       	adc	r24, r26
    1940:	91 1d       	adc	r25, r1
    1942:	a1 1d       	adc	r26, r1
    1944:	6a 0f       	add	r22, r26
    1946:	71 1d       	adc	r23, r1
    1948:	81 1d       	adc	r24, r1
    194a:	91 1d       	adc	r25, r1
    194c:	a1 1d       	adc	r26, r1
    194e:	20 d0       	rcall	.+64     	; 0x1990 <__ultoa_invert+0x84>
    1950:	09 f4       	brne	.+2      	; 0x1954 <__ultoa_invert+0x48>
    1952:	68 94       	set
    1954:	3f 91       	pop	r19
    1956:	2a e0       	ldi	r18, 0x0A	; 10
    1958:	26 9f       	mul	r18, r22
    195a:	11 24       	eor	r1, r1
    195c:	30 19       	sub	r19, r0
    195e:	30 5d       	subi	r19, 0xD0	; 208
    1960:	31 93       	st	Z+, r19
    1962:	de f6       	brtc	.-74     	; 0x191a <__ultoa_invert+0xe>
    1964:	cf 01       	movw	r24, r30
    1966:	08 95       	ret
    1968:	46 2f       	mov	r20, r22
    196a:	47 70       	andi	r20, 0x07	; 7
    196c:	40 5d       	subi	r20, 0xD0	; 208
    196e:	41 93       	st	Z+, r20
    1970:	b3 e0       	ldi	r27, 0x03	; 3
    1972:	0f d0       	rcall	.+30     	; 0x1992 <__ultoa_invert+0x86>
    1974:	c9 f7       	brne	.-14     	; 0x1968 <__ultoa_invert+0x5c>
    1976:	f6 cf       	rjmp	.-20     	; 0x1964 <__ultoa_invert+0x58>
    1978:	46 2f       	mov	r20, r22
    197a:	4f 70       	andi	r20, 0x0F	; 15
    197c:	40 5d       	subi	r20, 0xD0	; 208
    197e:	4a 33       	cpi	r20, 0x3A	; 58
    1980:	18 f0       	brcs	.+6      	; 0x1988 <__ultoa_invert+0x7c>
    1982:	49 5d       	subi	r20, 0xD9	; 217
    1984:	31 fd       	sbrc	r19, 1
    1986:	40 52       	subi	r20, 0x20	; 32
    1988:	41 93       	st	Z+, r20
    198a:	02 d0       	rcall	.+4      	; 0x1990 <__ultoa_invert+0x84>
    198c:	a9 f7       	brne	.-22     	; 0x1978 <__ultoa_invert+0x6c>
    198e:	ea cf       	rjmp	.-44     	; 0x1964 <__ultoa_invert+0x58>
    1990:	b4 e0       	ldi	r27, 0x04	; 4
    1992:	a6 95       	lsr	r26
    1994:	97 95       	ror	r25
    1996:	87 95       	ror	r24
    1998:	77 95       	ror	r23
    199a:	67 95       	ror	r22
    199c:	ba 95       	dec	r27
    199e:	c9 f7       	brne	.-14     	; 0x1992 <__ultoa_invert+0x86>
    19a0:	00 97       	sbiw	r24, 0x00	; 0
    19a2:	61 05       	cpc	r22, r1
    19a4:	71 05       	cpc	r23, r1
    19a6:	08 95       	ret
    19a8:	9b 01       	movw	r18, r22
    19aa:	ac 01       	movw	r20, r24
    19ac:	0a 2e       	mov	r0, r26
    19ae:	06 94       	lsr	r0
    19b0:	57 95       	ror	r21
    19b2:	47 95       	ror	r20
    19b4:	37 95       	ror	r19
    19b6:	27 95       	ror	r18
    19b8:	ba 95       	dec	r27
    19ba:	c9 f7       	brne	.-14     	; 0x19ae <__ultoa_invert+0xa2>
    19bc:	62 0f       	add	r22, r18
    19be:	73 1f       	adc	r23, r19
    19c0:	84 1f       	adc	r24, r20
    19c2:	95 1f       	adc	r25, r21
    19c4:	a0 1d       	adc	r26, r0
    19c6:	08 95       	ret

000019c8 <_exit>:
    19c8:	f8 94       	cli

000019ca <__stop_program>:
    19ca:	ff cf       	rjmp	.-2      	; 0x19ca <__stop_program>
